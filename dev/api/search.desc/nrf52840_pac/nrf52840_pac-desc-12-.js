searchState.loadedDescShard("nrf52840_pac", 12, "Bit 2 - Shortcut between EP0DATADONE event and EP0STATUS …\nBit 2 - Shortcut between EP0DATADONE event and EP0STATUS …\nBit 0 - Shortcut between EP0DATADONE event and STARTEPIN[0]\nBit 0 - Shortcut between EP0DATADONE event and STARTEPIN[0]\nBit 1 - Shortcut between EP0DATADONE event and STARTEPOUT[0…\nBit 1 - Shortcut between EP0DATADONE event and STARTEPOUT[0…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nEPOUT (rw) register accessor: an alias for <code>Reg&lt;EPOUT_SPEC&gt;</code>\nISOOUT (r) register accessor: an alias for <code>Reg&lt;ISOOUT_SPEC&gt;</code>\nRegister block\nDescription collection[n]: Number of bytes received last …\n0x00..0x20 - Description collection[n]: Number of bytes …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNumber of bytes received last on this ISO OUT data endpoint\n0x20 - Number of bytes received last on this ISO OUT data …\nDescription collection[n]: Number of bytes received last …\nRegister <code>EPOUT[%s]</code> reader\nField <code>SIZE</code> reader - Number of bytes received last in the …\nField <code>SIZE</code> writer - Number of bytes received last in the …\nRegister <code>EPOUT[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - Number of bytes received last in the data stage …\nBits 0:6 - Number of bytes received last in the data stage …\nNumber of bytes received last on this ISO OUT data endpoint\n0: No zero-length data received, use value in SIZE\nRegister <code>ISOOUT</code> reader\nField <code>SIZE</code> reader - Number of bytes received last on this …\nZero-length data packet received\n1: Zero-length data received, ignore value in SIZE\nField <code>ZERO</code> reader - Zero-length data packet received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NORMAL</code>\nChecks if the value of the field is <code>ZERO_DATA</code>\nBits 0:9 - Number of bytes received last on this ISO OUT …\nGet enumerated values variant\nBit 16 - Zero-length data packet received\nForces D+ and D- lines into the state defined in the …\nField <code>TASKS_DPDMDRIVE</code> writer -\nRegister <code>TASKS_DPDMDRIVE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStops forcing D+ and D- lines into any state (USB engine …\nField <code>TASKS_DPDMNODRIVE</code> writer -\nRegister <code>TASKS_DPDMNODRIVE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nAllows OUT data stage on control endpoint 0\nField <code>TASKS_EP0RCVOUT</code> writer -\nRegister <code>TASKS_EP0RCVOUT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStalls data and status stage on control endpoint 0\nField <code>TASKS_EP0STALL</code> writer -\nRegister <code>TASKS_EP0STALL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nAllows status stage on control endpoint 0\nField <code>TASKS_EP0STATUS</code> writer -\nRegister <code>TASKS_EP0STATUS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nDescription collection[n]: Captures the EPIN[n].PTR and …\nField <code>TASKS_STARTEPIN</code> writer -\nRegister <code>TASKS_STARTEPIN[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nDescription collection[n]: Captures the EPOUT[n].PTR and …\nField <code>TASKS_STARTEPOUT</code> writer -\nRegister <code>TASKS_STARTEPOUT[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nCaptures the ISOIN.PTR and ISOIN.MAXCNT registers values, …\nField <code>TASKS_STARTISOIN</code> writer -\nRegister <code>TASKS_STARTISOIN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nCaptures the ISOOUT.PTR and ISOOUT.MAXCNT registers …\nField <code>TASKS_STARTISOOUT</code> writer -\nRegister <code>TASKS_STARTISOOUT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nField <code>ADDR</code> reader - Device USB address\nRegister <code>USBADDR</code> reader\nDevice USB address\nBits 0:6 - Device USB address\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nControl of the USB pull-up on the D+ line\nField <code>CONNECT</code> reader - Control of the USB pull-up on the …\nField <code>CONNECT</code> writer - Control of the USB pull-up on the …\n0: Pull-up is disconnected\n1: Pull-up is connected to D+\nRegister <code>USBPULLUP</code> reader\nControl of the USB pull-up\nRegister <code>USBPULLUP</code> writer\nWrites raw bits to the register.\nBit 0 - Control of the USB pull-up on the D+ line\nBit 0 - Control of the USB pull-up on the D+ line\nPull-up is disconnected\nPull-up is connected to D+\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nRegister <code>WINDEXH</code> reader\nField <code>WINDEXH</code> reader - SETUP data, byte 5, MSB of wIndex\nSETUP data, byte 5, MSB of wIndex\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 5, MSB of wIndex\nRegister <code>WINDEXL</code> reader\nField <code>WINDEXL</code> reader - SETUP data, byte 4, LSB of wIndex\nSETUP data, byte 4, LSB of wIndex\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 4, LSB of wIndex\nRegister <code>WLENGTHH</code> reader\nField <code>WLENGTHH</code> reader - SETUP data, byte 7, MSB of wLength\nSETUP data, byte 7, MSB of wLength\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 7, MSB of wLength\nRegister <code>WLENGTHL</code> reader\nField <code>WLENGTHL</code> reader - SETUP data, byte 6, LSB of wLength\nSETUP data, byte 6, LSB of wLength\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 6, LSB of wLength\nRegister <code>WVALUEH</code> reader\nField <code>WVALUEH</code> reader - SETUP data, byte 3, MSB of wValue\nSETUP data, byte 3, MSB of wValue\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 3, MSB of wValue\nRegister <code>WVALUEL</code> reader\nField <code>WVALUEL</code> reader - SETUP data, byte 2, LSB of wValue\nSETUP data, byte 2, LSB of wValue\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - SETUP data, byte 2, LSB of wValue\nCONFIG (rw) register accessor: an alias for …\nCRV (rw) register accessor: an alias for <code>Reg&lt;CRV_SPEC&gt;</code>\nEVENTS_TIMEOUT (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nREQSTATUS (r) register accessor: an alias for …\nRR (w) register accessor: an alias for <code>Reg&lt;RR_SPEC&gt;</code>\nRREN (rw) register accessor: an alias for <code>Reg&lt;RREN_SPEC&gt;</code>\nRUNSTATUS (r) register accessor: an alias for …\nRegister block\nTASKS_START (w) register accessor: an alias for …\nConfiguration register\n0x50c - Configuration register\nCounter reload value\n0x504 - Counter reload value\nWatchdog timeout\n0x100 - Watchdog timeout\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nRequest status\n0x404 - Request status\nDescription collection[n]: Reload request n\n0x600..0x620 - Description collection[n]: Reload request n\nEnable register for reload request registers\n0x508 - Enable register for reload request registers\nRun status\n0x400 - Run status\nStart the watchdog\n0x00 - Start the watchdog\nConfiguration register\nConfigure the watchdog to either be paused, or kept …\nField <code>HALT</code> reader - Configure the watchdog to either be …\nField <code>HALT</code> writer - Configure the watchdog to either be …\n0: Pause watchdog while the CPU is sleeping\n0: Pause watchdog while the CPU is halted by the debugger\nRegister <code>CONFIG</code> reader\n1: Keep the watchdog running while the CPU is sleeping\n1: Keep the watchdog running while the CPU is halted by …\nConfigure the watchdog to either be paused, or kept …\nField <code>SLEEP</code> reader - Configure the watchdog to either be …\nField <code>SLEEP</code> writer - Configure the watchdog to either be …\nRegister <code>CONFIG</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 3 - Configure the watchdog to either be paused, or …\nBit 3 - Configure the watchdog to either be paused, or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>PAUSE</code>\nChecks if the value of the field is <code>PAUSE</code>\nChecks if the value of the field is <code>RUN</code>\nChecks if the value of the field is <code>RUN</code>\nPause watchdog while the CPU is sleeping\nPause watchdog while the CPU is halted by the debugger\nKeep the watchdog running while the CPU is sleeping\nKeep the watchdog running while the CPU is halted by the …\nBit 0 - Configure the watchdog to either be paused, or …\nBit 0 - Configure the watchdog to either be paused, or …\nGet enumerated values variant\nGet enumerated values variant\nField <code>CRV</code> reader - Counter reload value in number of …\nCounter reload value\nField <code>CRV</code> writer - Counter reload value in number of …\nRegister <code>CRV</code> reader\nRegister <code>CRV</code> writer\nWrites raw bits to the register.\nBits 0:31 - Counter reload value in number of cycles of …\nBits 0:31 - Counter reload value in number of cycles of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_TIMEOUT</code> reader -\nWatchdog timeout\nField <code>EVENTS_TIMEOUT</code> writer -\nRegister <code>EVENTS_TIMEOUT</code> reader\nRegister <code>EVENTS_TIMEOUT</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for TIMEOUT event\nWrite ‘1’ to disable interrupt for TIMEOUT event\nField <code>TIMEOUT</code> reader - Write ‘1’ to disable interrupt …\nField <code>TIMEOUT</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for TIMEOUT …\nBit 0 - Write ‘1’ to disable interrupt for TIMEOUT …\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\nWrite ‘1’ to enable interrupt for TIMEOUT event\nWrite ‘1’ to enable interrupt for TIMEOUT event\nField <code>TIMEOUT</code> reader - Write ‘1’ to enable interrupt …\nField <code>TIMEOUT</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nBit 0 - Write ‘1’ to enable interrupt for TIMEOUT event\nBit 0 - Write ‘1’ to enable interrupt for TIMEOUT event\nGet enumerated values variant\n0: RR[0] register is not enabled, or are already …\n0: RR[1] register is not enabled, or are already …\n0: RR[2] register is not enabled, or are already …\n0: RR[3] register is not enabled, or are already …\n0: RR[4] register is not enabled, or are already …\n0: RR[5] register is not enabled, or are already …\n0: RR[6] register is not enabled, or are already …\n0: RR[7] register is not enabled, or are already …\n1: RR[0] register is enabled, and are not yet requesting …\n1: RR[1] register is enabled, and are not yet requesting …\n1: RR[2] register is enabled, and are not yet requesting …\n1: RR[3] register is enabled, and are not yet requesting …\n1: RR[4] register is enabled, and are not yet requesting …\n1: RR[5] register is enabled, and are not yet requesting …\n1: RR[6] register is enabled, and are not yet requesting …\n1: RR[7] register is enabled, and are not yet requesting …\nRegister <code>REQSTATUS</code> reader\nRequest status\nRequest status for RR[0] register\nField <code>RR0</code> reader - Request status for RR[0] register\nRequest status for RR[1] register\nField <code>RR1</code> reader - Request status for RR[1] register\nRequest status for RR[2] register\nField <code>RR2</code> reader - Request status for RR[2] register\nRequest status for RR[3] register\nField <code>RR3</code> reader - Request status for RR[3] register\nRequest status for RR[4] register\nField <code>RR4</code> reader - Request status for RR[4] register\nRequest status for RR[5] register\nField <code>RR5</code> reader - Request status for RR[5] register\nRequest status for RR[6] register\nField <code>RR6</code> reader - Request status for RR[6] register\nRequest status for RR[7] register\nField <code>RR7</code> reader - Request status for RR[7] register\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>DISABLED_OR_REQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nChecks if the value of the field is <code>ENABLED_AND_UNREQUESTED</code>\nBit 0 - Request status for RR[0] register\nBit 1 - Request status for RR[1] register\nBit 2 - Request status for RR[2] register\nBit 3 - Request status for RR[3] register\nBit 4 - Request status for RR[4] register\nBit 5 - Request status for RR[5] register\nBit 6 - Request status for RR[6] register\nBit 7 - Request status for RR[7] register\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1850885685: Value to request a reload of the watchdog timer\nReload request register\nDescription collection[n]: Reload request n\nField <code>RR</code> writer - Reload request register\nRegister <code>RR[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValue to request a reload of the watchdog timer\nBits 0:31 - Reload request register\n0: Disable RR[0] register\n0: Disable RR[1] register\n0: Disable RR[2] register\n0: Disable RR[3] register\n0: Disable RR[4] register\n0: Disable RR[5] register\n0: Disable RR[6] register\n0: Disable RR[7] register\n1: Enable RR[0] register\n1: Enable RR[1] register\n1: Enable RR[2] register\n1: Enable RR[3] register\n1: Enable RR[4] register\n1: Enable RR[5] register\n1: Enable RR[6] register\n1: Enable RR[7] register\nRegister <code>RREN</code> reader\nEnable or disable RR[0] register\nField <code>RR0</code> reader - Enable or disable RR[0] register\nField <code>RR0</code> writer - Enable or disable RR[0] register\nEnable or disable RR[1] register\nField <code>RR1</code> reader - Enable or disable RR[1] register\nField <code>RR1</code> writer - Enable or disable RR[1] register\nEnable or disable RR[2] register\nField <code>RR2</code> reader - Enable or disable RR[2] register\nField <code>RR2</code> writer - Enable or disable RR[2] register\nEnable or disable RR[3] register\nField <code>RR3</code> reader - Enable or disable RR[3] register\nField <code>RR3</code> writer - Enable or disable RR[3] register\nEnable or disable RR[4] register\nField <code>RR4</code> reader - Enable or disable RR[4] register\nField <code>RR4</code> writer - Enable or disable RR[4] register\nEnable or disable RR[5] register\nField <code>RR5</code> reader - Enable or disable RR[5] register\nField <code>RR5</code> writer - Enable or disable RR[5] register\nEnable or disable RR[6] register\nField <code>RR6</code> reader - Enable or disable RR[6] register\nField <code>RR6</code> writer - Enable or disable RR[6] register\nEnable or disable RR[7] register\nField <code>RR7</code> reader - Enable or disable RR[7] register\nField <code>RR7</code> writer - Enable or disable RR[7] register\nEnable register for reload request registers\nRegister <code>RREN</code> writer\nWrites raw bits to the register.\nDisable RR[0] register\nDisable RR[1] register\nDisable RR[2] register\nDisable RR[3] register\nDisable RR[4] register\nDisable RR[5] register\nDisable RR[6] register\nDisable RR[7] register\nEnable RR[0] register\nEnable RR[1] register\nEnable RR[2] register\nEnable RR[3] register\nEnable RR[4] register\nEnable RR[5] register\nEnable RR[6] register\nEnable RR[7] register\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Enable or disable RR[0] register\nBit 0 - Enable or disable RR[0] register\nBit 1 - Enable or disable RR[1] register\nBit 1 - Enable or disable RR[1] register\nBit 2 - Enable or disable RR[2] register\nBit 2 - Enable or disable RR[2] register\nBit 3 - Enable or disable RR[3] register\nBit 3 - Enable or disable RR[3] register\nBit 4 - Enable or disable RR[4] register\nBit 4 - Enable or disable RR[4] register\nBit 5 - Enable or disable RR[5] register\nBit 5 - Enable or disable RR[5] register\nBit 6 - Enable or disable RR[6] register\nBit 6 - Enable or disable RR[6] register\nBit 7 - Enable or disable RR[7] register\nBit 7 - Enable or disable RR[7] register\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Watchdog not running\nRegister <code>RUNSTATUS</code> reader\n1: Watchdog is running\nIndicates whether or not the watchdog is running\nField <code>RUNSTATUS</code> reader - Indicates whether or not the …\nRun status\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NOT_RUNNING</code>\nChecks if the value of the field is <code>RUNNING</code>\nBit 0 - Indicates whether or not the watchdog is running\nGet enumerated values variant\nStart the watchdog\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0")