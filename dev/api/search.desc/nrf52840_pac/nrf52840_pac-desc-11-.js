searchState.loadedDescShard("nrf52840_pac", 11, "Field <code>NRFHW</code> reader - Reserved for Nordic hardware design\nDescription collection[n]: Reserved for Nordic hardware …\nField <code>NRFHW</code> writer - Reserved for Nordic hardware design\nRegister <code>NRFHW[%s]</code> reader\nRegister <code>NRFHW[%s]</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Reserved for Nordic hardware design\nBits 0:31 - Reserved for Nordic hardware design\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number of PORT onto which nRESET is …\nField <code>PIN</code> writer - Pin number of PORT onto which nRESET is …\nField <code>PORT</code> reader - Port number onto which nRESET is …\nField <code>PORT</code> writer - Port number onto which nRESET is …\nDescription collection[n]: Mapping of the nRESET function\nRegister <code>PSELRESET[%s]</code> reader\nRegister <code>PSELRESET[%s]</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number of PORT onto which nRESET is exposed\nBits 0:4 - Pin number of PORT onto which nRESET is exposed\nBit 5 - Port number onto which nRESET is exposed\nBit 5 - Port number onto which nRESET is exposed\nGet enumerated values variant\n7: Default voltage: 1.8 V\nRegister <code>REGOUT0</code> reader\nGPIO reference voltage / external output supply voltage in …\nOutput voltage from of REG0 regulator stage. The maximum …\nField <code>VOUT</code> reader - Output voltage from of REG0 regulator …\nField <code>VOUT</code> writer - Output voltage from of REG0 regulator …\nRegister <code>REGOUT0</code> writer\n0: 1.8 V\n1.8 V\n1: 2.1 V\n2: 2.4 V\n3: 2.7 V\n2.1 V\n2.4 V\n2.7 V\n4: 3.0 V\n5: 3.3 V\n3.0 V\n3.3 V\nWrites raw bits to the register.\nDefault voltage: 1.8 V\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_1V8</code>\nChecks if the value of the field is <code>_2V1</code>\nChecks if the value of the field is <code>_2V4</code>\nChecks if the value of the field is <code>_2V7</code>\nChecks if the value of the field is <code>_3V0</code>\nChecks if the value of the field is <code>_3V3</code>\nChecks if the value of the field is <code>DEFAULT</code>\nGet enumerated values variant\nBits 0:2 - Output voltage from of REG0 regulator stage. …\nBits 0:2 - Output voltage from of REG0 regulator stage. …\nRegister <code>UNUSED0</code> reader\nUnspecified\nRegister <code>UNUSED0</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>UNUSED1</code> reader\nUnspecified\nRegister <code>UNUSED1</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>UNUSED2</code> reader\nUnspecified\nRegister <code>UNUSED2</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>UNUSED3</code> reader\nUnspecified\nRegister <code>UNUSED3</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBMREQUESTTYPE (r) register accessor: an alias for …\nBREQUEST (r) register accessor: an alias for …\nDPDMVALUE (rw) register accessor: an alias for …\nDTOGGLE (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEPDATASTATUS (rw) register accessor: an alias for …\nUnspecified\nEPINEN (rw) register accessor: an alias for …\nUnspecified\nEPOUTEN (rw) register accessor: an alias for …\nEPSTALL (w) register accessor: an alias for …\nEPSTATUS (rw) register accessor: an alias for …\nEVENTCAUSE (rw) register accessor: an alias for …\nEVENTS_ENDEPIN (rw) register accessor: an alias for …\nEVENTS_ENDEPOUT (rw) register accessor: an alias for …\nEVENTS_ENDISOIN (rw) register accessor: an alias for …\nEVENTS_ENDISOOUT (rw) register accessor: an alias for …\nEVENTS_EP0DATADONE (rw) register accessor: an alias for …\nEVENTS_EP0SETUP (rw) register accessor: an alias for …\nEVENTS_EPDATA (rw) register accessor: an alias for …\nEVENTS_SOF (rw) register accessor: an alias for …\nEVENTS_STARTED (rw) register accessor: an alias for …\nEVENTS_USBEVENT (rw) register accessor: an alias for …\nEVENTS_USBRESET (rw) register accessor: an alias for …\nFRAMECNTR (r) register accessor: an alias for …\nUnspecified\nINTEN (rw) register accessor: an alias for <code>Reg&lt;INTEN_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nUnspecified\nISOINCONFIG (rw) register accessor: an alias for …\nUnspecified\nISOSPLIT (rw) register accessor: an alias for …\nLOWPOWER (rw) register accessor: an alias for …\nRegister block\nSHORTS (rw) register accessor: an alias for …\nUnspecified\nTASKS_DPDMDRIVE (w) register accessor: an alias for …\nTASKS_DPDMNODRIVE (w) register accessor: an alias for …\nTASKS_EP0RCVOUT (w) register accessor: an alias for …\nTASKS_EP0STALL (w) register accessor: an alias for …\nTASKS_EP0STATUS (w) register accessor: an alias for …\nTASKS_STARTEPIN (w) register accessor: an alias for …\nTASKS_STARTEPOUT (w) register accessor: an alias for …\nTASKS_STARTISOIN (w) register accessor: an alias for …\nTASKS_STARTISOOUT (w) register accessor: an alias for …\nUSBADDR (r) register accessor: an alias for …\nUSBPULLUP (rw) register accessor: an alias for …\nWINDEXH (r) register accessor: an alias for …\nWINDEXL (r) register accessor: an alias for …\nWLENGTHH (r) register accessor: an alias for …\nWLENGTHL (r) register accessor: an alias for …\nWVALUEH (r) register accessor: an alias for …\nWVALUEL (r) register accessor: an alias for …\nSETUP data, byte 0, bmRequestType\n0x480 - SETUP data, byte 0, bmRequestType\nSETUP data, byte 1, bRequest\n0x484 - SETUP data, byte 1, bRequest\nState D+ and D- lines will be forced into by the DPDMDRIVE …\n0x508 - State D+ and D- lines will be forced into by the …\nData toggle control and status\n0x50c - Data toggle control and status\nEnable USB\n0x500 - Enable USB\nProvides information on which endpoint(s) an acknowledged …\n0x46c - Provides information on which endpoint(s) an …\nCluster Unspecified\n0x600..0x60c - Unspecified\n0x614..0x620 - Unspecified\n0x628..0x634 - Unspecified\n0x63c..0x648 - Unspecified\n0x650..0x65c - Unspecified\n0x664..0x670 - Unspecified\n0x678..0x684 - Unspecified\n0x68c..0x698 - Unspecified\nEndpoint IN enable\n0x510 - Endpoint IN enable\nCluster Unspecified\n0x700..0x70c - Unspecified\n0x714..0x720 - Unspecified\n0x728..0x734 - Unspecified\n0x73c..0x748 - Unspecified\n0x750..0x75c - Unspecified\n0x764..0x770 - Unspecified\n0x778..0x784 - Unspecified\n0x78c..0x798 - Unspecified\nEndpoint OUT enable\n0x514 - Endpoint OUT enable\nSTALL endpoints\n0x518 - STALL endpoints\nProvides information on which endpoint’s EasyDMA …\n0x468 - Provides information on which endpoint’s EasyDMA …\nDetails on what caused the USBEVENT event\n0x400 - Details on what caused the USBEVENT event\nDescription collection[n]: The whole EPIN[n] buffer has …\n0x108..0x128 - Description collection[n]: The whole EPIN[n]\nDescription collection[n]: The whole EPOUT[n] buffer has …\n0x130..0x150 - Description collection[n]: The whole EPOUT[n…\nThe whole ISOIN buffer has been consumed. The RAM buffer …\n0x12c - The whole ISOIN buffer has been consumed. The RAM …\nThe whole ISOOUT buffer has been consumed. The RAM buffer …\n0x150 - The whole ISOOUT buffer has been consumed. The RAM …\nAn acknowledged data transfer has taken place on the …\n0x128 - An acknowledged data transfer has taken place on …\nA valid SETUP token has been received (and acknowledged) …\n0x15c - A valid SETUP token has been received (and …\nA data transfer has occurred on a data endpoint, indicated …\n0x160 - A data transfer has occurred on a data endpoint, …\nSignals that a SOF (start of frame) condition has been …\n0x154 - Signals that a SOF (start of frame) condition has …\nConfirms that the EPIN[n].PTR and EPIN[n].MAXCNT, or EPOUT…\n0x104 - Confirms that the EPIN[n].PTR and EPIN[n].MAXCNT, …\nAn event or an error not covered by specific events has …\n0x158 - An event or an error not covered by specific …\nSignals that a USB reset condition has been detected on …\n0x100 - Signals that a USB reset condition has been …\nReturns the current value of the start of frame counter\n0x520 - Returns the current value of the start of frame …\nReturns the argument unchanged.\nCluster Unspecified\n0x420..0x464 - Unspecified\nEnable or disable interrupt\n0x300 - Enable or disable interrupt\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nCluster Unspecified\n0x6a0..0x6ac - Unspecified\nControls the response of the ISO IN endpoint to an IN …\n0x530 - Controls the response of the ISO IN endpoint to an …\nCluster Unspecified\n0x7a0..0x7ac - Unspecified\nControls the split of ISO buffers\n0x51c - Controls the split of ISO buffers\nControls USBD peripheral low power mode during USB suspend\n0x52c - Controls USBD peripheral low power mode during USB …\nShortcut register\n0x200 - Shortcut register\nCluster Unspecified\n0x4a0..0x4c4 - Unspecified\nForces D+ and D- lines into the state defined in the …\n0x58 - Forces D+ and D- lines into the state defined in …\nStops forcing D+ and D- lines into any state (USB engine …\n0x5c - Stops forcing D+ and D- lines into any state (USB …\nAllows OUT data stage on control endpoint 0\n0x4c - Allows OUT data stage on control endpoint 0\nStalls data and status stage on control endpoint 0\n0x54 - Stalls data and status stage on control endpoint 0\nAllows status stage on control endpoint 0\n0x50 - Allows status stage on control endpoint 0\nDescription collection[n]: Captures the EPIN[n].PTR and …\n0x04..0x24 - Description collection[n]: Captures the EPIN[n…\nDescription collection[n]: Captures the EPOUT[n].PTR and …\n0x28..0x48 - Description collection[n]: Captures the EPOUT…\nCaptures the ISOIN.PTR and ISOIN.MAXCNT registers values, …\n0x24 - Captures the ISOIN.PTR and ISOIN.MAXCNT registers …\nCaptures the ISOOUT.PTR and ISOOUT.MAXCNT registers …\n0x48 - Captures the ISOOUT.PTR and ISOOUT.MAXCNT registers …\nDevice USB address\n0x470 - Device USB address\nControl of the USB pull-up\n0x504 - Control of the USB pull-up\nSETUP data, byte 5, MSB of wIndex\n0x494 - SETUP data, byte 5, MSB of wIndex\nSETUP data, byte 4, LSB of wIndex\n0x490 - SETUP data, byte 4, LSB of wIndex\nSETUP data, byte 7, MSB of wLength\n0x49c - SETUP data, byte 7, MSB of wLength\nSETUP data, byte 6, LSB of wLength\n0x498 - SETUP data, byte 6, LSB of wLength\nSETUP data, byte 3, MSB of wValue\n0x48c - SETUP data, byte 3, MSB of wValue\nSETUP data, byte 2, LSB of wValue\n0x488 - SETUP data, byte 2, LSB of wValue\nSETUP data, byte 0, bmRequestType\n1: Class\n0: Device\n1: Device-to-host\nData transfer direction\nField <code>DIRECTION</code> reader - Data transfer direction\n2: Endpoint\n0: Host-to-device\n1: Interface\n3: Other\nRegister <code>BMREQUESTTYPE</code> reader\nData transfer type\nField <code>RECIPIENT</code> reader - Data transfer type\n0: Standard\nData transfer type\nField <code>TYPE</code> reader - Data transfer type\n2: Vendor\nBit 7 - Data transfer direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CLASS</code>\nChecks if the value of the field is <code>DEVICE</code>\nChecks if the value of the field is <code>DEVICE_TO_HOST</code>\nChecks if the value of the field is <code>ENDPOINT</code>\nChecks if the value of the field is <code>HOST_TO_DEVICE</code>\nChecks if the value of the field is <code>INTERFACE</code>\nChecks if the value of the field is <code>OTHER</code>\nChecks if the value of the field is <code>STANDARD</code>\nChecks if the value of the field is <code>VENDOR</code>\nBits 0:4 - Data transfer type\nBits 5:6 - Data transfer type\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSETUP data, byte 1, bRequest. Values provided for standard …\nField <code>BREQUEST</code> reader - SETUP data, byte 1, bRequest. …\nSETUP data, byte 1, bRequest\nRegister <code>BREQUEST</code> reader\n1: Standard request CLEAR_FEATURE\n8: Standard request GET_CONFIGURATION\n6: Standard request GET_DESCRIPTOR\n10: Standard request GET_INTERFACE\n0: Standard request GET_STATUS\n5: Standard request SET_ADDRESS\n9: Standard request SET_CONFIGURATION\n7: Standard request SET_DESCRIPTOR\n3: Standard request SET_FEATURE\n11: Standard request SET_INTERFACE\n12: Standard request SYNCH_FRAME\nBits 0:7 - SETUP data, byte 1, bRequest. Values provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>STD_CLEAR_FEATURE</code>\nChecks if the value of the field is <code>STD_GET_CONFIGURATION</code>\nChecks if the value of the field is <code>STD_GET_DESCRIPTOR</code>\nChecks if the value of the field is <code>STD_GET_INTERFACE</code>\nChecks if the value of the field is <code>STD_GET_STATUS</code>\nChecks if the value of the field is <code>STD_SET_ADDRESS</code>\nChecks if the value of the field is <code>STD_SET_CONFIGURATION</code>\nChecks if the value of the field is <code>STD_SET_DESCRIPTOR</code>\nChecks if the value of the field is <code>STD_SET_FEATURE</code>\nChecks if the value of the field is <code>STD_SET_INTERFACE</code>\nChecks if the value of the field is <code>STD_SYNCH_FRAME</code>\nGet enumerated values variant\nState D+ and D- lines will be forced into by the DPDMDRIVE …\n2: D+ forced high, D- forced low (J state)\n4: D+ forced low, D- forced high (K state)\nRegister <code>DPDMVALUE</code> reader\n1: D+ forced low, D- forced high (K state) for a timing …\nState D+ and D- lines will be forced into by the DPDMDRIVE …\nField <code>STATE</code> reader - State D+ and D- lines will be forced …\nField <code>STATE</code> writer - State D+ and D- lines will be forced …\nRegister <code>DPDMVALUE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>J</code>\nChecks if the value of the field is <code>K</code>\nChecks if the value of the field is <code>RESUME</code>\nD+ forced high, D- forced low (J state)\nD+ forced low, D- forced high (K state)\nD+ forced low, D- forced high (K state) for a timing …\nBits 0:4 - State D+ and D- lines will be forced into by …\nBits 0:4 - State D+ and D- lines will be forced into by …\nGet enumerated values variant\n1: Data toggle is DATA0 on endpoint set by EP and IO\n2: Data toggle is DATA1 on endpoint set by EP and IO\nData toggle control and status\nField <code>EP</code> reader - Select bulk endpoint number\nField <code>EP</code> writer - Select bulk endpoint number\n1: Selects IN endpoint\nSelects IN or OUT endpoint\nField <code>IO</code> reader - Selects IN or OUT endpoint\nField <code>IO</code> writer - Selects IN or OUT endpoint\n0: No action on data toggle when writing the register with …\n0: Selects OUT endpoint\nRegister <code>DTOGGLE</code> reader\nData toggle value\nField <code>VALUE</code> reader - Data toggle value\nField <code>VALUE</code> writer - Data toggle value\nRegister <code>DTOGGLE</code> writer\nWrites raw bits to the register.\nData toggle is DATA0 on endpoint set by EP and IO\nData toggle is DATA1 on endpoint set by EP and IO\nBits 0:2 - Select bulk endpoint number\nBits 0:2 - Select bulk endpoint number\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSelects IN endpoint\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 7 - Selects IN or OUT endpoint\nBit 7 - Selects IN or OUT endpoint\nChecks if the value of the field is <code>DATA0</code>\nChecks if the value of the field is <code>DATA1</code>\nChecks if the value of the field is <code>IN</code>\nChecks if the value of the field is <code>NOP</code>\nChecks if the value of the field is <code>OUT</code>\nNo action on data toggle when writing the register with …\nSelects OUT endpoint\nBits 8:9 - Data toggle value\nBits 8:9 - Data toggle value\nGet enumerated values variant\nGet enumerated values variant\n0: USB peripheral is disabled\n1: USB peripheral is enabled\nEnable USB\nField <code>ENABLE</code> reader - Enable USB\nEnable USB\nField <code>ENABLE</code> writer - Enable USB\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nUSB peripheral is disabled\nBit 0 - Enable USB\nBit 0 - Enable USB\nUSB peripheral is enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\nProvides information on which endpoint(s) an acknowledged …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN1</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN1</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN2</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN2</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN3</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN3</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN4</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN4</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN5</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN5</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN6</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN6</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this IN endpoint. Write ‘1…\nField <code>EPIN7</code> reader - Acknowledged data transfer on this IN …\nField <code>EPIN7</code> writer - Acknowledged data transfer on this IN …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT1</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT1</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT2</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT2</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT3</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT3</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT4</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT4</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT5</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT5</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT6</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT6</code> writer - Acknowledged data transfer on this …\nAcknowledged data transfer on this OUT endpoint. Write ‘1…\nField <code>EPOUT7</code> reader - Acknowledged data transfer on this …\nField <code>EPOUT7</code> writer - Acknowledged data transfer on this …\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\n0: No acknowledged data transfer on this endpoint\nRegister <code>EPDATASTATUS</code> reader\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\n1: Acknowledged data transfer on this endpoint has occurred\nRegister <code>EPDATASTATUS</code> writer\nWrites raw bits to the register.\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nBit 1 - Acknowledged data transfer on this IN endpoint. …\nBit 1 - Acknowledged data transfer on this IN endpoint. …\nBit 2 - Acknowledged data transfer on this IN endpoint. …\nBit 2 - Acknowledged data transfer on this IN endpoint. …\nBit 3 - Acknowledged data transfer on this IN endpoint. …\nBit 3 - Acknowledged data transfer on this IN endpoint. …\nBit 4 - Acknowledged data transfer on this IN endpoint. …\nBit 4 - Acknowledged data transfer on this IN endpoint. …\nBit 5 - Acknowledged data transfer on this IN endpoint. …\nBit 5 - Acknowledged data transfer on this IN endpoint. …\nBit 6 - Acknowledged data transfer on this IN endpoint. …\nBit 6 - Acknowledged data transfer on this IN endpoint. …\nBit 7 - Acknowledged data transfer on this IN endpoint. …\nBit 7 - Acknowledged data transfer on this IN endpoint. …\nBit 17 - Acknowledged data transfer on this OUT endpoint. …\nBit 17 - Acknowledged data transfer on this OUT endpoint. …\nBit 18 - Acknowledged data transfer on this OUT endpoint. …\nBit 18 - Acknowledged data transfer on this OUT endpoint. …\nBit 19 - Acknowledged data transfer on this OUT endpoint. …\nBit 19 - Acknowledged data transfer on this OUT endpoint. …\nBit 20 - Acknowledged data transfer on this OUT endpoint. …\nBit 20 - Acknowledged data transfer on this OUT endpoint. …\nBit 21 - Acknowledged data transfer on this OUT endpoint. …\nBit 21 - Acknowledged data transfer on this OUT endpoint. …\nBit 22 - Acknowledged data transfer on this OUT endpoint. …\nBit 22 - Acknowledged data transfer on this OUT endpoint. …\nBit 23 - Acknowledged data transfer on this OUT endpoint. …\nBit 23 - Acknowledged data transfer on this OUT endpoint. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_DONE</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>NOT_STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nChecks if the value of the field is <code>STARTED</code>\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nNo acknowledged data transfer on this endpoint\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nAcknowledged data transfer on this endpoint has occurred\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nDescription cluster[n]: Number of bytes transferred in the …\n0x08 - Description cluster[n]: Number of bytes transferred …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster[n]: Maximum number of bytes to transfer\n0x04 - Description cluster[n]: Maximum number of bytes to …\nDescription cluster[n]: Data pointer\n0x00 - Description cluster[n]: Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nDescription cluster[n]: Number of bytes transferred in the …\nRegister <code>AMOUNT</code> reader\nBits 0:6 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nDescription cluster[n]: Maximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - Maximum number of bytes to transfer\nBits 0:6 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer. Accepts any address in …\nDescription cluster[n]: Data pointer\nField <code>PTR</code> writer - Data pointer. Accepts any address in …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\n0: Disable endpoint IN 0 (no response to IN tokens)\n0: Disable endpoint IN 1 (no response to IN tokens)\n0: Disable endpoint IN 2 (no response to IN tokens)\n0: Disable endpoint IN 3 (no response to IN tokens)\n0: Disable endpoint IN 4 (no response to IN tokens)\n0: Disable endpoint IN 5 (no response to IN tokens)\n0: Disable endpoint IN 6 (no response to IN tokens)\n0: Disable endpoint IN 7 (no response to IN tokens)\n0: Disable ISO IN endpoint 8\n1: Enable endpoint IN 0 (response to IN tokens)\n1: Enable endpoint IN 1 (response to IN tokens)\n1: Enable endpoint IN 2 (response to IN tokens)\n1: Enable endpoint IN 3 (response to IN tokens)\n1: Enable endpoint IN 4 (response to IN tokens)\n1: Enable endpoint IN 5 (response to IN tokens)\n1: Enable endpoint IN 6 (response to IN tokens)\n1: Enable endpoint IN 7 (response to IN tokens)\n1: Enable ISO IN endpoint 8\nEndpoint IN enable\nEnable IN endpoint 0\nField <code>IN0</code> reader - Enable IN endpoint 0\nField <code>IN0</code> writer - Enable IN endpoint 0\nEnable IN endpoint 1\nField <code>IN1</code> reader - Enable IN endpoint 1\nField <code>IN1</code> writer - Enable IN endpoint 1\nEnable IN endpoint 2\nField <code>IN2</code> reader - Enable IN endpoint 2\nField <code>IN2</code> writer - Enable IN endpoint 2\nEnable IN endpoint 3\nField <code>IN3</code> reader - Enable IN endpoint 3\nField <code>IN3</code> writer - Enable IN endpoint 3\nEnable IN endpoint 4\nField <code>IN4</code> reader - Enable IN endpoint 4\nField <code>IN4</code> writer - Enable IN endpoint 4\nEnable IN endpoint 5\nField <code>IN5</code> reader - Enable IN endpoint 5\nField <code>IN5</code> writer - Enable IN endpoint 5\nEnable IN endpoint 6\nField <code>IN6</code> reader - Enable IN endpoint 6\nField <code>IN6</code> writer - Enable IN endpoint 6\nEnable IN endpoint 7\nField <code>IN7</code> reader - Enable IN endpoint 7\nField <code>IN7</code> writer - Enable IN endpoint 7\nEnable ISO IN endpoint\nField <code>ISOIN</code> reader - Enable ISO IN endpoint\nField <code>ISOIN</code> writer - Enable ISO IN endpoint\nRegister <code>EPINEN</code> reader\nRegister <code>EPINEN</code> writer\nWrites raw bits to the register.\nDisable endpoint IN 0 (no response to IN tokens)\nDisable endpoint IN 1 (no response to IN tokens)\nDisable endpoint IN 2 (no response to IN tokens)\nDisable endpoint IN 3 (no response to IN tokens)\nDisable endpoint IN 4 (no response to IN tokens)\nDisable endpoint IN 5 (no response to IN tokens)\nDisable endpoint IN 6 (no response to IN tokens)\nDisable endpoint IN 7 (no response to IN tokens)\nDisable ISO IN endpoint 8\nEnable endpoint IN 0 (response to IN tokens)\nEnable endpoint IN 1 (response to IN tokens)\nEnable endpoint IN 2 (response to IN tokens)\nEnable endpoint IN 3 (response to IN tokens)\nEnable endpoint IN 4 (response to IN tokens)\nEnable endpoint IN 5 (response to IN tokens)\nEnable endpoint IN 6 (response to IN tokens)\nEnable endpoint IN 7 (response to IN tokens)\nEnable ISO IN endpoint 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Enable IN endpoint 0\nBit 0 - Enable IN endpoint 0\nBit 1 - Enable IN endpoint 1\nBit 1 - Enable IN endpoint 1\nBit 2 - Enable IN endpoint 2\nBit 2 - Enable IN endpoint 2\nBit 3 - Enable IN endpoint 3\nBit 3 - Enable IN endpoint 3\nBit 4 - Enable IN endpoint 4\nBit 4 - Enable IN endpoint 4\nBit 5 - Enable IN endpoint 5\nBit 5 - Enable IN endpoint 5\nBit 6 - Enable IN endpoint 6\nBit 6 - Enable IN endpoint 6\nBit 7 - Enable IN endpoint 7\nBit 7 - Enable IN endpoint 7\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nBit 8 - Enable ISO IN endpoint\nBit 8 - Enable ISO IN endpoint\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nDescription cluster[n]: Number of bytes transferred in the …\n0x08 - Description cluster[n]: Number of bytes transferred …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster[n]: Maximum number of bytes to transfer\n0x04 - Description cluster[n]: Maximum number of bytes to …\nDescription cluster[n]: Data pointer\n0x00 - Description cluster[n]: Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nDescription cluster[n]: Number of bytes transferred in the …\nRegister <code>AMOUNT</code> reader\nBits 0:6 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nDescription cluster[n]: Maximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - Maximum number of bytes to transfer\nBits 0:6 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer. Accepts any address in …\nDescription cluster[n]: Data pointer\nField <code>PTR</code> writer - Data pointer. Accepts any address in …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\n0: Disable endpoint OUT 0 (no response to OUT tokens)\n0: Disable endpoint OUT 1 (no response to OUT tokens)\n0: Disable endpoint OUT 2 (no response to OUT tokens)\n0: Disable endpoint OUT 3 (no response to OUT tokens)\n0: Disable endpoint OUT 4 (no response to OUT tokens)\n0: Disable endpoint OUT 5 (no response to OUT tokens)\n0: Disable endpoint OUT 6 (no response to OUT tokens)\n0: Disable endpoint OUT 7 (no response to OUT tokens)\n0: Disable ISO OUT endpoint 8\n1: Enable endpoint OUT 0 (response to OUT tokens)\n1: Enable endpoint OUT 1 (response to OUT tokens)\n1: Enable endpoint OUT 2 (response to OUT tokens)\n1: Enable endpoint OUT 3 (response to OUT tokens)\n1: Enable endpoint OUT 4 (response to OUT tokens)\n1: Enable endpoint OUT 5 (response to OUT tokens)\n1: Enable endpoint OUT 6 (response to OUT tokens)\n1: Enable endpoint OUT 7 (response to OUT tokens)\n1: Enable ISO OUT endpoint 8\nEndpoint OUT enable\nEnable ISO OUT endpoint 8\nField <code>ISOOUT</code> reader - Enable ISO OUT endpoint 8\nField <code>ISOOUT</code> writer - Enable ISO OUT endpoint 8\nEnable OUT endpoint 0\nField <code>OUT0</code> reader - Enable OUT endpoint 0\nField <code>OUT0</code> writer - Enable OUT endpoint 0\nEnable OUT endpoint 1\nField <code>OUT1</code> reader - Enable OUT endpoint 1\nField <code>OUT1</code> writer - Enable OUT endpoint 1\nEnable OUT endpoint 2\nField <code>OUT2</code> reader - Enable OUT endpoint 2\nField <code>OUT2</code> writer - Enable OUT endpoint 2\nEnable OUT endpoint 3\nField <code>OUT3</code> reader - Enable OUT endpoint 3\nField <code>OUT3</code> writer - Enable OUT endpoint 3\nEnable OUT endpoint 4\nField <code>OUT4</code> reader - Enable OUT endpoint 4\nField <code>OUT4</code> writer - Enable OUT endpoint 4\nEnable OUT endpoint 5\nField <code>OUT5</code> reader - Enable OUT endpoint 5\nField <code>OUT5</code> writer - Enable OUT endpoint 5\nEnable OUT endpoint 6\nField <code>OUT6</code> reader - Enable OUT endpoint 6\nField <code>OUT6</code> writer - Enable OUT endpoint 6\nEnable OUT endpoint 7\nField <code>OUT7</code> reader - Enable OUT endpoint 7\nField <code>OUT7</code> writer - Enable OUT endpoint 7\nRegister <code>EPOUTEN</code> reader\nRegister <code>EPOUTEN</code> writer\nWrites raw bits to the register.\nDisable endpoint OUT 0 (no response to OUT tokens)\nDisable endpoint OUT 1 (no response to OUT tokens)\nDisable endpoint OUT 2 (no response to OUT tokens)\nDisable endpoint OUT 3 (no response to OUT tokens)\nDisable endpoint OUT 4 (no response to OUT tokens)\nDisable endpoint OUT 5 (no response to OUT tokens)\nDisable endpoint OUT 6 (no response to OUT tokens)\nDisable endpoint OUT 7 (no response to OUT tokens)\nDisable ISO OUT endpoint 8\nEnable endpoint OUT 0 (response to OUT tokens)\nEnable endpoint OUT 1 (response to OUT tokens)\nEnable endpoint OUT 2 (response to OUT tokens)\nEnable endpoint OUT 3 (response to OUT tokens)\nEnable endpoint OUT 4 (response to OUT tokens)\nEnable endpoint OUT 5 (response to OUT tokens)\nEnable endpoint OUT 6 (response to OUT tokens)\nEnable endpoint OUT 7 (response to OUT tokens)\nEnable ISO OUT endpoint 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nBit 8 - Enable ISO OUT endpoint 8\nBit 8 - Enable ISO OUT endpoint 8\nBit 0 - Enable OUT endpoint 0\nBit 0 - Enable OUT endpoint 0\nBit 1 - Enable OUT endpoint 1\nBit 1 - Enable OUT endpoint 1\nBit 2 - Enable OUT endpoint 2\nBit 2 - Enable OUT endpoint 2\nBit 3 - Enable OUT endpoint 3\nBit 3 - Enable OUT endpoint 3\nBit 4 - Enable OUT endpoint 4\nBit 4 - Enable OUT endpoint 4\nBit 5 - Enable OUT endpoint 5\nBit 5 - Enable OUT endpoint 5\nBit 6 - Enable OUT endpoint 6\nBit 6 - Enable OUT endpoint 6\nBit 7 - Enable OUT endpoint 7\nBit 7 - Enable OUT endpoint 7\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSTALL endpoints\nField <code>EP</code> writer - Select endpoint number\n1: Selects IN endpoint\nSelects IN or OUT endpoint\nField <code>IO</code> writer - Selects IN or OUT endpoint\n0: Selects OUT endpoint\n1: Stall selected endpoint\nStall selected endpoint\nField <code>STALL</code> writer - Stall selected endpoint\n0: Don’t stall selected endpoint\nRegister <code>EPSTALL</code> writer\nWrites raw bits to the register.\nBits 0:2 - Select endpoint number\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSelects IN endpoint\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 7 - Selects IN or OUT endpoint\nSelects OUT endpoint\nBit 8 - Stall selected endpoint\nStall selected endpoint\nDon’t stall selected endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\n1: EasyDMA registers have been captured for this endpoint\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN0</code> reader - Captured state of endpoint’s …\nField <code>EPIN0</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN1</code> reader - Captured state of endpoint’s …\nField <code>EPIN1</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN2</code> reader - Captured state of endpoint’s …\nField <code>EPIN2</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN3</code> reader - Captured state of endpoint’s …\nField <code>EPIN3</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN4</code> reader - Captured state of endpoint’s …\nField <code>EPIN4</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN5</code> reader - Captured state of endpoint’s …\nField <code>EPIN5</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN6</code> reader - Captured state of endpoint’s …\nField <code>EPIN6</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN7</code> reader - Captured state of endpoint’s …\nField <code>EPIN7</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPIN8</code> reader - Captured state of endpoint’s …\nField <code>EPIN8</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT0</code> reader - Captured state of endpoint’s …\nField <code>EPOUT0</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT1</code> reader - Captured state of endpoint’s …\nField <code>EPOUT1</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT2</code> reader - Captured state of endpoint’s …\nField <code>EPOUT2</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT3</code> reader - Captured state of endpoint’s …\nField <code>EPOUT3</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT4</code> reader - Captured state of endpoint’s …\nField <code>EPOUT4</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT5</code> reader - Captured state of endpoint’s …\nField <code>EPOUT5</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT6</code> reader - Captured state of endpoint’s …\nField <code>EPOUT6</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT7</code> reader - Captured state of endpoint’s …\nField <code>EPOUT7</code> writer - Captured state of endpoint’s …\nCaptured state of endpoint’s EasyDMA registers. Write ‘…\nField <code>EPOUT8</code> reader - Captured state of endpoint’s …\nField <code>EPOUT8</code> writer - Captured state of endpoint’s …\nProvides information on which endpoint’s EasyDMA …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\n0: EasyDMA registers have not been captured for this …\nRegister <code>EPSTATUS</code> reader\nRegister <code>EPSTATUS</code> writer\nWrites raw bits to the register.\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nEasyDMA registers have been captured for this endpoint\nBit 0 - Captured state of endpoint’s EasyDMA registers. …\nBit 0 - Captured state of endpoint’s EasyDMA registers. …\nBit 1 - Captured state of endpoint’s EasyDMA registers. …\nBit 1 - Captured state of endpoint’s EasyDMA registers. …\nBit 2 - Captured state of endpoint’s EasyDMA registers. …\nBit 2 - Captured state of endpoint’s EasyDMA registers. …\nBit 3 - Captured state of endpoint’s EasyDMA registers. …\nBit 3 - Captured state of endpoint’s EasyDMA registers. …\nBit 4 - Captured state of endpoint’s EasyDMA registers. …\nBit 4 - Captured state of endpoint’s EasyDMA registers. …\nBit 5 - Captured state of endpoint’s EasyDMA registers. …\nBit 5 - Captured state of endpoint’s EasyDMA registers. …\nBit 6 - Captured state of endpoint’s EasyDMA registers. …\nBit 6 - Captured state of endpoint’s EasyDMA registers. …\nBit 7 - Captured state of endpoint’s EasyDMA registers. …\nBit 7 - Captured state of endpoint’s EasyDMA registers. …\nBit 8 - Captured state of endpoint’s EasyDMA registers. …\nBit 8 - Captured state of endpoint’s EasyDMA registers. …\nBit 16 - Captured state of endpoint’s EasyDMA registers. …\nBit 16 - Captured state of endpoint’s EasyDMA registers. …\nBit 17 - Captured state of endpoint’s EasyDMA registers. …\nBit 17 - Captured state of endpoint’s EasyDMA registers. …\nBit 18 - Captured state of endpoint’s EasyDMA registers. …\nBit 18 - Captured state of endpoint’s EasyDMA registers. …\nBit 19 - Captured state of endpoint’s EasyDMA registers. …\nBit 19 - Captured state of endpoint’s EasyDMA registers. …\nBit 20 - Captured state of endpoint’s EasyDMA registers. …\nBit 20 - Captured state of endpoint’s EasyDMA registers. …\nBit 21 - Captured state of endpoint’s EasyDMA registers. …\nBit 21 - Captured state of endpoint’s EasyDMA registers. …\nBit 22 - Captured state of endpoint’s EasyDMA registers. …\nBit 22 - Captured state of endpoint’s EasyDMA registers. …\nBit 23 - Captured state of endpoint’s EasyDMA registers. …\nBit 23 - Captured state of endpoint’s EasyDMA registers. …\nBit 24 - Captured state of endpoint’s EasyDMA registers. …\nBit 24 - Captured state of endpoint’s EasyDMA registers. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>DATA_DONE</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nChecks if the value of the field is <code>NO_DATA</code>\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nEasyDMA registers have not been captured for this endpoint\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Wake up allowed\n1: Error detected\n1: Suspend detected\n1: Resume detected\nDetails on what caused the USBEVENT event\nCRC error was detected on isochronous OUT endpoint 8. …\nField <code>ISOOUTCRC</code> reader - CRC error was detected on …\nField <code>ISOOUTCRC</code> writer - CRC error was detected on …\n0: Wake up not allowed\n0: No error detected\n0: Suspend not detected\n0: Resume not detected\n0: USBEVENT was not issued due to USBD peripheral ready\nRegister <code>EVENTCAUSE</code> reader\n1: USBD peripheral is ready\nUSB device is ready for normal operation. Write ‘1’ to …\nField <code>READY</code> reader - USB device is ready for normal …\nField <code>READY</code> writer - USB device is ready for normal …\nSignals that a RESUME condition (K state or activity …\nField <code>RESUME</code> reader - Signals that a RESUME condition (K …\nField <code>RESUME</code> writer - Signals that a RESUME condition (K …\nSignals that USB lines have been idle long enough for the …\nField <code>SUSPEND</code> reader - Signals that USB lines have been …\nField <code>SUSPEND</code> writer - Signals that USB lines have been …\nUSB MAC has been woken up and operational. Write ‘1’ …\nField <code>USBWUALLOWED</code> reader - USB MAC has been woken up and …\nField <code>USBWUALLOWED</code> writer - USB MAC has been woken up and …\nRegister <code>EVENTCAUSE</code> writer\nWake up allowed\nWrites raw bits to the register.\nError detected\nSuspend detected\nResume detected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ALLOWED</code>\nChecks if the value of the field is <code>DETECTED</code>\nChecks if the value of the field is <code>DETECTED</code>\nChecks if the value of the field is <code>DETECTED</code>\nChecks if the value of the field is <code>NOT_ALLOWED</code>\nChecks if the value of the field is <code>NOT_DETECTED</code>\nChecks if the value of the field is <code>NOT_DETECTED</code>\nChecks if the value of the field is <code>NOT_DETECTED</code>\nChecks if the value of the field is <code>NOT_DETECTED</code>\nChecks if the value of the field is <code>READY</code>\nBit 0 - CRC error was detected on isochronous OUT endpoint …\nBit 0 - CRC error was detected on isochronous OUT endpoint …\nWake up not allowed\nNo error detected\nSuspend not detected\nResume not detected\nUSBEVENT was not issued due to USBD peripheral ready\nBit 11 - USB device is ready for normal operation. Write …\nBit 11 - USB device is ready for normal operation. Write …\nUSBD peripheral is ready\nBit 9 - Signals that a RESUME condition (K state or …\nBit 9 - Signals that a RESUME condition (K state or …\nBit 8 - Signals that USB lines have been idle long enough …\nBit 8 - Signals that USB lines have been idle long enough …\nBit 10 - USB MAC has been woken up and operational. Write …\nBit 10 - USB MAC has been woken up and operational. Write …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>EVENTS_ENDEPIN</code> reader -\nDescription collection[n]: The whole EPIN[n] buffer has …\nField <code>EVENTS_ENDEPIN</code> writer -\nRegister <code>EVENTS_ENDEPIN[%s]</code> reader\nRegister <code>EVENTS_ENDEPIN[%s]</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ENDEPOUT</code> reader -\nDescription collection[n]: The whole EPOUT[n] buffer has …\nField <code>EVENTS_ENDEPOUT</code> writer -\nRegister <code>EVENTS_ENDEPOUT[%s]</code> reader\nRegister <code>EVENTS_ENDEPOUT[%s]</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ENDISOIN</code> reader -\nThe whole ISOIN buffer has been consumed. The RAM buffer …\nField <code>EVENTS_ENDISOIN</code> writer -\nRegister <code>EVENTS_ENDISOIN</code> reader\nRegister <code>EVENTS_ENDISOIN</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ENDISOOUT</code> reader -\nThe whole ISOOUT buffer has been consumed. The RAM buffer …\nField <code>EVENTS_ENDISOOUT</code> writer -\nRegister <code>EVENTS_ENDISOOUT</code> reader\nRegister <code>EVENTS_ENDISOOUT</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_EP0DATADONE</code> reader -\nAn acknowledged data transfer has taken place on the …\nField <code>EVENTS_EP0DATADONE</code> writer -\nRegister <code>EVENTS_EP0DATADONE</code> reader\nRegister <code>EVENTS_EP0DATADONE</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_EP0SETUP</code> reader -\nA valid SETUP token has been received (and acknowledged) …\nField <code>EVENTS_EP0SETUP</code> writer -\nRegister <code>EVENTS_EP0SETUP</code> reader\nRegister <code>EVENTS_EP0SETUP</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_EPDATA</code> reader -\nA data transfer has occurred on a data endpoint, indicated …\nField <code>EVENTS_EPDATA</code> writer -\nRegister <code>EVENTS_EPDATA</code> reader\nRegister <code>EVENTS_EPDATA</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_SOF</code> reader -\nSignals that a SOF (start of frame) condition has been …\nField <code>EVENTS_SOF</code> writer -\nRegister <code>EVENTS_SOF</code> reader\nRegister <code>EVENTS_SOF</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_STARTED</code> reader -\nConfirms that the EPIN[n].PTR and EPIN[n].MAXCNT, or EPOUT…\nField <code>EVENTS_STARTED</code> writer -\nRegister <code>EVENTS_STARTED</code> reader\nRegister <code>EVENTS_STARTED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_USBEVENT</code> reader -\nAn event or an error not covered by specific events has …\nField <code>EVENTS_USBEVENT</code> writer -\nRegister <code>EVENTS_USBEVENT</code> reader\nRegister <code>EVENTS_USBEVENT</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_USBRESET</code> reader -\nSignals that a USB reset condition has been detected on …\nField <code>EVENTS_USBRESET</code> writer -\nRegister <code>EVENTS_USBRESET</code> reader\nRegister <code>EVENTS_USBRESET</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>FRAMECNTR</code> reader - Returns the current value of the …\nReturns the current value of the start of frame counter\nRegister <code>FRAMECNTR</code> reader\nBits 0:10 - Returns the current value of the start of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEPIN (r) register accessor: an alias for <code>Reg&lt;EPIN_SPEC&gt;</code>\nEPOUT (r) register accessor: an alias for <code>Reg&lt;EPOUT_SPEC&gt;</code>\nRegister block\nDescription collection[n]: IN endpoint halted status. Can …\n0x00..0x20 - Description collection[n]: IN endpoint halted …\nDescription collection[n]: OUT endpoint halted status. Can …\n0x24..0x44 - Description collection[n]: OUT endpoint …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription collection[n]: IN endpoint halted status. Can …\nIN endpoint halted status. Can be used as is as response …\nField <code>GETSTATUS</code> reader - IN endpoint halted status. Can be …\n1: Endpoint is halted\n0: Endpoint is not halted\nRegister <code>EPIN[%s]</code> reader\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:15 - IN endpoint halted status. Can be used as is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HALTED</code>\nChecks if the value of the field is <code>NOT_HALTED</code>\nGet enumerated values variant\nDescription collection[n]: OUT endpoint halted status. Can …\nOUT endpoint halted status. Can be used as is as response …\nField <code>GETSTATUS</code> reader - OUT endpoint halted status. Can …\n1: Endpoint is halted\n0: Endpoint is not halted\nRegister <code>EPOUT[%s]</code> reader\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:15 - OUT endpoint halted status. Can be used as is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HALTED</code>\nChecks if the value of the field is <code>NOT_HALTED</code>\nGet enumerated values variant\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable interrupt for ENDEPIN[0] event\nField <code>ENDEPIN0</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN0</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[1] event\nField <code>ENDEPIN1</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN1</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[2] event\nField <code>ENDEPIN2</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN2</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[3] event\nField <code>ENDEPIN3</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN3</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[4] event\nField <code>ENDEPIN4</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN4</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[5] event\nField <code>ENDEPIN5</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN5</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[6] event\nField <code>ENDEPIN6</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN6</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPIN[7] event\nField <code>ENDEPIN7</code> reader - Enable or disable interrupt for …\nField <code>ENDEPIN7</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[0] event\nField <code>ENDEPOUT0</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT0</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[1] event\nField <code>ENDEPOUT1</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT1</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[2] event\nField <code>ENDEPOUT2</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT2</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[3] event\nField <code>ENDEPOUT3</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT3</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[4] event\nField <code>ENDEPOUT4</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT4</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[5] event\nField <code>ENDEPOUT5</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT5</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[6] event\nField <code>ENDEPOUT6</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT6</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDEPOUT[7] event\nField <code>ENDEPOUT7</code> reader - Enable or disable interrupt for …\nField <code>ENDEPOUT7</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDISOIN event\nField <code>ENDISOIN</code> reader - Enable or disable interrupt for …\nField <code>ENDISOIN</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for ENDISOOUT event\nField <code>ENDISOOUT</code> reader - Enable or disable interrupt for …\nField <code>ENDISOOUT</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for EP0DATADONE event\nField <code>EP0DATADONE</code> reader - Enable or disable interrupt for …\nField <code>EP0DATADONE</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for EP0SETUP event\nField <code>EP0SETUP</code> reader - Enable or disable interrupt for …\nField <code>EP0SETUP</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for EPDATA event\nField <code>EPDATA</code> reader - Enable or disable interrupt for …\nField <code>EPDATA</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt\nRegister <code>INTEN</code> reader\nEnable or disable interrupt for SOF event\nField <code>SOF</code> reader - Enable or disable interrupt for SOF …\nField <code>SOF</code> writer - Enable or disable interrupt for SOF …\nEnable or disable interrupt for STARTED event\nField <code>STARTED</code> reader - Enable or disable interrupt for …\nField <code>STARTED</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for USBEVENT event\nField <code>USBEVENT</code> reader - Enable or disable interrupt for …\nField <code>USBEVENT</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for USBRESET event\nField <code>USBRESET</code> reader - Enable or disable interrupt for …\nField <code>USBRESET</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 2 - Enable or disable interrupt for ENDEPIN[0] event\nBit 2 - Enable or disable interrupt for ENDEPIN[0] event\nBit 3 - Enable or disable interrupt for ENDEPIN[1] event\nBit 3 - Enable or disable interrupt for ENDEPIN[1] event\nBit 4 - Enable or disable interrupt for ENDEPIN[2] event\nBit 4 - Enable or disable interrupt for ENDEPIN[2] event\nBit 5 - Enable or disable interrupt for ENDEPIN[3] event\nBit 5 - Enable or disable interrupt for ENDEPIN[3] event\nBit 6 - Enable or disable interrupt for ENDEPIN[4] event\nBit 6 - Enable or disable interrupt for ENDEPIN[4] event\nBit 7 - Enable or disable interrupt for ENDEPIN[5] event\nBit 7 - Enable or disable interrupt for ENDEPIN[5] event\nBit 8 - Enable or disable interrupt for ENDEPIN[6] event\nBit 8 - Enable or disable interrupt for ENDEPIN[6] event\nBit 9 - Enable or disable interrupt for ENDEPIN[7] event\nBit 9 - Enable or disable interrupt for ENDEPIN[7] event\nBit 12 - Enable or disable interrupt for ENDEPOUT[0] event\nBit 12 - Enable or disable interrupt for ENDEPOUT[0] event\nBit 13 - Enable or disable interrupt for ENDEPOUT[1] event\nBit 13 - Enable or disable interrupt for ENDEPOUT[1] event\nBit 14 - Enable or disable interrupt for ENDEPOUT[2] event\nBit 14 - Enable or disable interrupt for ENDEPOUT[2] event\nBit 15 - Enable or disable interrupt for ENDEPOUT[3] event\nBit 15 - Enable or disable interrupt for ENDEPOUT[3] event\nBit 16 - Enable or disable interrupt for ENDEPOUT[4] event\nBit 16 - Enable or disable interrupt for ENDEPOUT[4] event\nBit 17 - Enable or disable interrupt for ENDEPOUT[5] event\nBit 17 - Enable or disable interrupt for ENDEPOUT[5] event\nBit 18 - Enable or disable interrupt for ENDEPOUT[6] event\nBit 18 - Enable or disable interrupt for ENDEPOUT[6] event\nBit 19 - Enable or disable interrupt for ENDEPOUT[7] event\nBit 19 - Enable or disable interrupt for ENDEPOUT[7] event\nBit 11 - Enable or disable interrupt for ENDISOIN event\nBit 11 - Enable or disable interrupt for ENDISOIN event\nBit 20 - Enable or disable interrupt for ENDISOOUT event\nBit 20 - Enable or disable interrupt for ENDISOOUT event\nBit 10 - Enable or disable interrupt for EP0DATADONE event\nBit 10 - Enable or disable interrupt for EP0DATADONE event\nBit 23 - Enable or disable interrupt for EP0SETUP event\nBit 23 - Enable or disable interrupt for EP0SETUP event\nBit 24 - Enable or disable interrupt for EPDATA event\nBit 24 - Enable or disable interrupt for EPDATA event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 21 - Enable or disable interrupt for SOF event\nBit 21 - Enable or disable interrupt for SOF event\nBit 1 - Enable or disable interrupt for STARTED event\nBit 1 - Enable or disable interrupt for STARTED event\nBit 22 - Enable or disable interrupt for USBEVENT event\nBit 22 - Enable or disable interrupt for USBEVENT event\nBit 0 - Enable or disable interrupt for USBRESET event\nBit 0 - Enable or disable interrupt for USBRESET event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for ENDEPIN[0] event\nWrite ‘1’ to disable interrupt for ENDEPIN[0] event\nField <code>ENDEPIN0</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN0</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[1] event\nWrite ‘1’ to disable interrupt for ENDEPIN[1] event\nField <code>ENDEPIN1</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN1</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[2] event\nWrite ‘1’ to disable interrupt for ENDEPIN[2] event\nField <code>ENDEPIN2</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN2</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[3] event\nWrite ‘1’ to disable interrupt for ENDEPIN[3] event\nField <code>ENDEPIN3</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN3</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[4] event\nWrite ‘1’ to disable interrupt for ENDEPIN[4] event\nField <code>ENDEPIN4</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN4</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[5] event\nWrite ‘1’ to disable interrupt for ENDEPIN[5] event\nField <code>ENDEPIN5</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN5</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[6] event\nWrite ‘1’ to disable interrupt for ENDEPIN[6] event\nField <code>ENDEPIN6</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN6</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPIN[7] event\nWrite ‘1’ to disable interrupt for ENDEPIN[7] event\nField <code>ENDEPIN7</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDEPIN7</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDEPOUT[0] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[0] event\nField <code>ENDEPOUT0</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT0</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[1] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[1] event\nField <code>ENDEPOUT1</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT1</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[2] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[2] event\nField <code>ENDEPOUT2</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT2</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[3] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[3] event\nField <code>ENDEPOUT3</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT3</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[4] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[4] event\nField <code>ENDEPOUT4</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT4</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[5] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[5] event\nField <code>ENDEPOUT5</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT5</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[6] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[6] event\nField <code>ENDEPOUT6</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT6</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDEPOUT[7] event\nWrite ‘1’ to disable interrupt for ENDEPOUT[7] event\nField <code>ENDEPOUT7</code> reader - Write ‘1’ to disable …\nField <code>ENDEPOUT7</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for ENDISOIN event\nWrite ‘1’ to disable interrupt for ENDISOIN event\nField <code>ENDISOIN</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDISOIN</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDISOOUT event\nWrite ‘1’ to disable interrupt for ENDISOOUT event\nField <code>ENDISOOUT</code> reader - Write ‘1’ to disable …\nField <code>ENDISOOUT</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for EP0DATADONE event\nWrite ‘1’ to disable interrupt for EP0DATADONE event\nField <code>EP0DATADONE</code> reader - Write ‘1’ to disable …\nField <code>EP0DATADONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for EP0SETUP event\nWrite ‘1’ to disable interrupt for EP0SETUP event\nField <code>EP0SETUP</code> reader - Write ‘1’ to disable interrupt …\nField <code>EP0SETUP</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for EPDATA event\nWrite ‘1’ to disable interrupt for EPDATA event\nField <code>EPDATA</code> reader - Write ‘1’ to disable interrupt …\nField <code>EPDATA</code> writer - Write ‘1’ to disable interrupt …\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for SOF event\nWrite ‘1’ to disable interrupt for SOF event\nField <code>SOF</code> reader - Write ‘1’ to disable interrupt for …\nField <code>SOF</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for STARTED event\nWrite ‘1’ to disable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for USBEVENT event\nWrite ‘1’ to disable interrupt for USBEVENT event\nField <code>USBEVENT</code> reader - Write ‘1’ to disable interrupt …\nField <code>USBEVENT</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for USBRESET event\nWrite ‘1’ to disable interrupt for USBRESET event\nField <code>USBRESET</code> reader - Write ‘1’ to disable interrupt …\nField <code>USBRESET</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Write ‘1’ to disable interrupt for ENDEPIN[0] …\nBit 2 - Write ‘1’ to disable interrupt for ENDEPIN[0] …\nBit 3 - Write ‘1’ to disable interrupt for ENDEPIN[1] …\nBit 3 - Write ‘1’ to disable interrupt for ENDEPIN[1] …\nBit 4 - Write ‘1’ to disable interrupt for ENDEPIN[2] …\nBit 4 - Write ‘1’ to disable interrupt for ENDEPIN[2] …\nBit 5 - Write ‘1’ to disable interrupt for ENDEPIN[3] …\nBit 5 - Write ‘1’ to disable interrupt for ENDEPIN[3] …\nBit 6 - Write ‘1’ to disable interrupt for ENDEPIN[4] …\nBit 6 - Write ‘1’ to disable interrupt for ENDEPIN[4] …\nBit 7 - Write ‘1’ to disable interrupt for ENDEPIN[5] …\nBit 7 - Write ‘1’ to disable interrupt for ENDEPIN[5] …\nBit 8 - Write ‘1’ to disable interrupt for ENDEPIN[6] …\nBit 8 - Write ‘1’ to disable interrupt for ENDEPIN[6] …\nBit 9 - Write ‘1’ to disable interrupt for ENDEPIN[7] …\nBit 9 - Write ‘1’ to disable interrupt for ENDEPIN[7] …\nBit 12 - Write ‘1’ to disable interrupt for ENDEPOUT[0]\nBit 12 - Write ‘1’ to disable interrupt for ENDEPOUT[0]\nBit 13 - Write ‘1’ to disable interrupt for ENDEPOUT[1]\nBit 13 - Write ‘1’ to disable interrupt for ENDEPOUT[1]\nBit 14 - Write ‘1’ to disable interrupt for ENDEPOUT[2]\nBit 14 - Write ‘1’ to disable interrupt for ENDEPOUT[2]\nBit 15 - Write ‘1’ to disable interrupt for ENDEPOUT[3]\nBit 15 - Write ‘1’ to disable interrupt for ENDEPOUT[3]\nBit 16 - Write ‘1’ to disable interrupt for ENDEPOUT[4]\nBit 16 - Write ‘1’ to disable interrupt for ENDEPOUT[4]\nBit 17 - Write ‘1’ to disable interrupt for ENDEPOUT[5]\nBit 17 - Write ‘1’ to disable interrupt for ENDEPOUT[5]\nBit 18 - Write ‘1’ to disable interrupt for ENDEPOUT[6]\nBit 18 - Write ‘1’ to disable interrupt for ENDEPOUT[6]\nBit 19 - Write ‘1’ to disable interrupt for ENDEPOUT[7]\nBit 19 - Write ‘1’ to disable interrupt for ENDEPOUT[7]\nBit 11 - Write ‘1’ to disable interrupt for ENDISOIN …\nBit 11 - Write ‘1’ to disable interrupt for ENDISOIN …\nBit 20 - Write ‘1’ to disable interrupt for ENDISOOUT …\nBit 20 - Write ‘1’ to disable interrupt for ENDISOOUT …\nBit 10 - Write ‘1’ to disable interrupt for …\nBit 10 - Write ‘1’ to disable interrupt for …\nBit 23 - Write ‘1’ to disable interrupt for EP0SETUP …\nBit 23 - Write ‘1’ to disable interrupt for EP0SETUP …\nBit 24 - Write ‘1’ to disable interrupt for EPDATA …\nBit 24 - Write ‘1’ to disable interrupt for EPDATA …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 21 - Write ‘1’ to disable interrupt for SOF event\nBit 21 - Write ‘1’ to disable interrupt for SOF event\nBit 1 - Write ‘1’ to disable interrupt for STARTED …\nBit 1 - Write ‘1’ to disable interrupt for STARTED …\nBit 22 - Write ‘1’ to disable interrupt for USBEVENT …\nBit 22 - Write ‘1’ to disable interrupt for USBEVENT …\nBit 0 - Write ‘1’ to disable interrupt for USBRESET …\nBit 0 - Write ‘1’ to disable interrupt for USBRESET …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for ENDEPIN[0] event\nWrite ‘1’ to enable interrupt for ENDEPIN[0] event\nField <code>ENDEPIN0</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[1] event\nWrite ‘1’ to enable interrupt for ENDEPIN[1] event\nField <code>ENDEPIN1</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[2] event\nWrite ‘1’ to enable interrupt for ENDEPIN[2] event\nField <code>ENDEPIN2</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[3] event\nWrite ‘1’ to enable interrupt for ENDEPIN[3] event\nField <code>ENDEPIN3</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN3</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[4] event\nWrite ‘1’ to enable interrupt for ENDEPIN[4] event\nField <code>ENDEPIN4</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN4</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[5] event\nWrite ‘1’ to enable interrupt for ENDEPIN[5] event\nField <code>ENDEPIN5</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN5</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[6] event\nWrite ‘1’ to enable interrupt for ENDEPIN[6] event\nField <code>ENDEPIN6</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN6</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPIN[7] event\nWrite ‘1’ to enable interrupt for ENDEPIN[7] event\nField <code>ENDEPIN7</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPIN7</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[0] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[0] event\nField <code>ENDEPOUT0</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[1] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[1] event\nField <code>ENDEPOUT1</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[2] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[2] event\nField <code>ENDEPOUT2</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[3] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[3] event\nField <code>ENDEPOUT3</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT3</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[4] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[4] event\nField <code>ENDEPOUT4</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT4</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[5] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[5] event\nField <code>ENDEPOUT5</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT5</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[6] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[6] event\nField <code>ENDEPOUT6</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT6</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDEPOUT[7] event\nWrite ‘1’ to enable interrupt for ENDEPOUT[7] event\nField <code>ENDEPOUT7</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDEPOUT7</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDISOIN event\nWrite ‘1’ to enable interrupt for ENDISOIN event\nField <code>ENDISOIN</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDISOIN</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for ENDISOOUT event\nWrite ‘1’ to enable interrupt for ENDISOOUT event\nField <code>ENDISOOUT</code> reader - Write ‘1’ to enable interrupt …\nField <code>ENDISOOUT</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for EP0DATADONE event\nWrite ‘1’ to enable interrupt for EP0DATADONE event\nField <code>EP0DATADONE</code> reader - Write ‘1’ to enable …\nField <code>EP0DATADONE</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for EP0SETUP event\nWrite ‘1’ to enable interrupt for EP0SETUP event\nField <code>EP0SETUP</code> reader - Write ‘1’ to enable interrupt …\nField <code>EP0SETUP</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for EPDATA event\nWrite ‘1’ to enable interrupt for EPDATA event\nField <code>EPDATA</code> reader - Write ‘1’ to enable interrupt …\nField <code>EPDATA</code> writer - Write ‘1’ to enable interrupt …\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for SOF event\nWrite ‘1’ to enable interrupt for SOF event\nField <code>SOF</code> reader - Write ‘1’ to enable interrupt for …\nField <code>SOF</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for STARTED event\nWrite ‘1’ to enable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for USBEVENT event\nWrite ‘1’ to enable interrupt for USBEVENT event\nField <code>USBEVENT</code> reader - Write ‘1’ to enable interrupt …\nField <code>USBEVENT</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for USBRESET event\nWrite ‘1’ to enable interrupt for USBRESET event\nField <code>USBRESET</code> reader - Write ‘1’ to enable interrupt …\nField <code>USBRESET</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 2 - Write ‘1’ to enable interrupt for ENDEPIN[0] …\nBit 2 - Write ‘1’ to enable interrupt for ENDEPIN[0] …\nBit 3 - Write ‘1’ to enable interrupt for ENDEPIN[1] …\nBit 3 - Write ‘1’ to enable interrupt for ENDEPIN[1] …\nBit 4 - Write ‘1’ to enable interrupt for ENDEPIN[2] …\nBit 4 - Write ‘1’ to enable interrupt for ENDEPIN[2] …\nBit 5 - Write ‘1’ to enable interrupt for ENDEPIN[3] …\nBit 5 - Write ‘1’ to enable interrupt for ENDEPIN[3] …\nBit 6 - Write ‘1’ to enable interrupt for ENDEPIN[4] …\nBit 6 - Write ‘1’ to enable interrupt for ENDEPIN[4] …\nBit 7 - Write ‘1’ to enable interrupt for ENDEPIN[5] …\nBit 7 - Write ‘1’ to enable interrupt for ENDEPIN[5] …\nBit 8 - Write ‘1’ to enable interrupt for ENDEPIN[6] …\nBit 8 - Write ‘1’ to enable interrupt for ENDEPIN[6] …\nBit 9 - Write ‘1’ to enable interrupt for ENDEPIN[7] …\nBit 9 - Write ‘1’ to enable interrupt for ENDEPIN[7] …\nBit 12 - Write ‘1’ to enable interrupt for ENDEPOUT[0] …\nBit 12 - Write ‘1’ to enable interrupt for ENDEPOUT[0] …\nBit 13 - Write ‘1’ to enable interrupt for ENDEPOUT[1] …\nBit 13 - Write ‘1’ to enable interrupt for ENDEPOUT[1] …\nBit 14 - Write ‘1’ to enable interrupt for ENDEPOUT[2] …\nBit 14 - Write ‘1’ to enable interrupt for ENDEPOUT[2] …\nBit 15 - Write ‘1’ to enable interrupt for ENDEPOUT[3] …\nBit 15 - Write ‘1’ to enable interrupt for ENDEPOUT[3] …\nBit 16 - Write ‘1’ to enable interrupt for ENDEPOUT[4] …\nBit 16 - Write ‘1’ to enable interrupt for ENDEPOUT[4] …\nBit 17 - Write ‘1’ to enable interrupt for ENDEPOUT[5] …\nBit 17 - Write ‘1’ to enable interrupt for ENDEPOUT[5] …\nBit 18 - Write ‘1’ to enable interrupt for ENDEPOUT[6] …\nBit 18 - Write ‘1’ to enable interrupt for ENDEPOUT[6] …\nBit 19 - Write ‘1’ to enable interrupt for ENDEPOUT[7] …\nBit 19 - Write ‘1’ to enable interrupt for ENDEPOUT[7] …\nBit 11 - Write ‘1’ to enable interrupt for ENDISOIN …\nBit 11 - Write ‘1’ to enable interrupt for ENDISOIN …\nBit 20 - Write ‘1’ to enable interrupt for ENDISOOUT …\nBit 20 - Write ‘1’ to enable interrupt for ENDISOOUT …\nBit 10 - Write ‘1’ to enable interrupt for EP0DATADONE …\nBit 10 - Write ‘1’ to enable interrupt for EP0DATADONE …\nBit 23 - Write ‘1’ to enable interrupt for EP0SETUP …\nBit 23 - Write ‘1’ to enable interrupt for EP0SETUP …\nBit 24 - Write ‘1’ to enable interrupt for EPDATA event\nBit 24 - Write ‘1’ to enable interrupt for EPDATA event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 21 - Write ‘1’ to enable interrupt for SOF event\nBit 21 - Write ‘1’ to enable interrupt for SOF event\nBit 1 - Write ‘1’ to enable interrupt for STARTED event\nBit 1 - Write ‘1’ to enable interrupt for STARTED event\nBit 22 - Write ‘1’ to enable interrupt for USBEVENT …\nBit 22 - Write ‘1’ to enable interrupt for USBEVENT …\nBit 0 - Write ‘1’ to enable interrupt for USBRESET …\nBit 0 - Write ‘1’ to enable interrupt for USBRESET …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of bytes to transfer\n0x04 - Maximum number of bytes to transfer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:9 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nMaximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Maximum number of bytes to transfer\nBits 0:9 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer. Accepts any address in …\nData pointer\nField <code>PTR</code> writer - Data pointer. Accepts any address in …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\nControls the response of the ISO IN endpoint to an IN …\n0: Endpoint does not respond in that case\nRegister <code>ISOINCONFIG</code> reader\nControls the response of the ISO IN endpoint to an IN …\nField <code>RESPONSE</code> reader - Controls the response of the ISO …\nField <code>RESPONSE</code> writer - Controls the response of the ISO …\nRegister <code>ISOINCONFIG</code> writer\n1: Endpoint responds with a zero-length data packet in …\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NO_RESP</code>\nChecks if the value of the field is <code>ZERO_DATA</code>\nEndpoint does not respond in that case\nBit 0 - Controls the response of the ISO IN endpoint to an …\nBit 0 - Controls the response of the ISO IN endpoint to an …\nGet enumerated values variant\nEndpoint responds with a zero-length data packet in that …\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nRegister block\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of bytes to transfer\n0x04 - Maximum number of bytes to transfer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:9 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of bytes to transfer\nMaximum number of bytes to transfer\nField <code>MAXCNT</code> writer - Maximum number of bytes to transfer\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Maximum number of bytes to transfer\nBits 0:9 - Maximum number of bytes to transfer\nField <code>PTR</code> reader - Data pointer. Accepts any address in …\nData pointer\nField <code>PTR</code> writer - Data pointer. Accepts any address in …\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\nBits 0:31 - Data pointer. Accepts any address in Data RAM.\n128: Lower half for IN, upper half for OUT\nControls the split of ISO buffers\n0: Full buffer dedicated to either iso IN or OUT\nRegister <code>ISOSPLIT</code> reader\nControls the split of ISO buffers\nField <code>SPLIT</code> reader - Controls the split of ISO buffers\nField <code>SPLIT</code> writer - Controls the split of ISO buffers\nRegister <code>ISOSPLIT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLower half for IN, upper half for OUT\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HALF_IN</code>\nChecks if the value of the field is <code>ONE_DIR</code>\nFull buffer dedicated to either iso IN or OUT\nBits 0:15 - Controls the split of ISO buffers\nBits 0:15 - Controls the split of ISO buffers\nGet enumerated values variant\n0: Software must write this value to exit low power mode …\nControls USBD peripheral low-power mode during USB suspend\nField <code>LOWPOWER</code> reader - Controls USBD peripheral low-power …\nControls USBD peripheral low power mode during USB suspend\nField <code>LOWPOWER</code> writer - Controls USBD peripheral low-power …\n1: Software must write this value to enter low power mode …\nRegister <code>LOWPOWER</code> reader\nRegister <code>LOWPOWER</code> writer\nWrites raw bits to the register.\nSoftware must write this value to exit low power mode and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>FORCE_NORMAL</code>\nChecks if the value of the field is <code>LOW_POWER</code>\nSoftware must write this value to enter low power mode …\nBit 0 - Controls USBD peripheral low-power mode during USB …\nBit 0 - Controls USBD peripheral low-power mode during USB …\nGet enumerated values variant\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nShortcut between ENDEPOUT[0] event and EP0RCVOUT task\nField <code>ENDEPOUT0_EP0RCVOUT</code> reader - Shortcut between …\nField <code>ENDEPOUT0_EP0RCVOUT</code> writer - Shortcut between …\nShortcut between ENDEPOUT[0] event and EP0STATUS task\nField <code>ENDEPOUT0_EP0STATUS</code> reader - Shortcut between …\nField <code>ENDEPOUT0_EP0STATUS</code> writer - Shortcut between …\nShortcut between EP0DATADONE event and EP0STATUS task\nField <code>EP0DATADONE_EP0STATUS</code> reader - Shortcut between …\nField <code>EP0DATADONE_EP0STATUS</code> writer - Shortcut between …\nShortcut between EP0DATADONE event and STARTEPIN[0] task\nField <code>EP0DATADONE_STARTEPIN0</code> reader - Shortcut between …\nField <code>EP0DATADONE_STARTEPIN0</code> writer - Shortcut between …\nShortcut between EP0DATADONE event and STARTEPOUT[0] task\nField <code>EP0DATADONE_STARTEPOUT0</code> reader - Shortcut between …\nField <code>EP0DATADONE_STARTEPOUT0</code> writer - Shortcut between …\nRegister <code>SHORTS</code> reader\nShortcut register\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nBit 4 - Shortcut between ENDEPOUT[0] event and EP0RCVOUT …\nBit 4 - Shortcut between ENDEPOUT[0] event and EP0RCVOUT …\nBit 3 - Shortcut between ENDEPOUT[0] event and EP0STATUS …\nBit 3 - Shortcut between ENDEPOUT[0] event and EP0STATUS …")