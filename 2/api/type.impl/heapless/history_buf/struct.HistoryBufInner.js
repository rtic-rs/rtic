(function() {
    var type_impls = Object.fromEntries([["heapless",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#583-588\">Source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#585-587\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#590-597\">Source</a><a href=\"#impl-Debug-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#594-596\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#575-581\">Source</a><a href=\"#impl-Deref-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#576\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#578-580\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#569-573\">Source</a><a href=\"#impl-Drop-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#570-572\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#542-552\">Source</a><a href=\"#impl-Extend%3C%26T%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#546-551\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#531-540\">Source</a><a href=\"#impl-Extend%3CT%3E-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#532-539\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#288-312\">Source</a><a href=\"#impl-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_view\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#291-293\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.as_view\" class=\"fn\">as_view</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"heapless/history_buf/type.HistoryBufView.html\" title=\"type heapless::history_buf::HistoryBufView\">HistoryBufView</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the <code>HistoryBuf</code>, erasing the <code>N</code> const-generic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_view\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#297-299\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.as_mut_view\" class=\"fn\">as_mut_view</a>(&amp;mut self) -&gt; &amp;mut <a class=\"type\" href=\"heapless/history_buf/type.HistoryBufView.html\" title=\"type heapless::history_buf::HistoryBufView\">HistoryBufView</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the <code>HistoryBuf</code>, erasing the <code>N</code> const-generic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_with\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#302-311\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.clear_with\" class=\"fn\">clear_with</a>(&amp;mut self, t: T)</h4></section></summary><div class=\"docblock\"><p>Clears the buffer, replacing every element with the given value.</p>\n</div></details></div></details>",0,"heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#314-322\">Source</a><a href=\"#impl-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#316-321\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the buffer</p>\n</div></details></div></details>",0,"heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#324-529\">Source</a><a href=\"#impl-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#336-342\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the current fill level of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#355-357\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the buffer is empty.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span>x: HistoryBuf&lt;u8, <span class=\"number\">16</span>&gt; = HistoryBuf::new();\n<span class=\"macro\">assert!</span>(x.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#362-364\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the capacity of the buffer, which is the length of the\nunderlying backing array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_full\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#368-370\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.is_full\" class=\"fn\">is_full</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the buffer is full</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#373-385\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, t: T)</h4></section></summary><div class=\"docblock\"><p>Writes an element to the buffer, overwriting the oldest value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#391-398\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.extend_from_slice\" class=\"fn\">extend_from_slice</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Clones and writes all elements in a slice to the buffer.</p>\n<p>If the slice is longer than the buffer, only the last <code>self.len()</code>\nelements will actually be stored.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recent\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#412-415\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.recent\" class=\"fn\">recent</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the most recently written value.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: HistoryBuf&lt;u8, <span class=\"number\">16</span>&gt; = HistoryBuf::new();\nx.write(<span class=\"number\">4</span>);\nx.write(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.recent(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recent_index\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#429-439\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.recent_index\" class=\"fn\">recent_index</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns index of the most recently written value in the underlying slice.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: HistoryBuf&lt;u8, <span class=\"number\">16</span>&gt; = HistoryBuf::new();\nx.write(<span class=\"number\">4</span>);\nx.write(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.recent_index(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.oldest\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#453-456\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.oldest\" class=\"fn\">oldest</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the oldest value in the buffer.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: HistoryBuf&lt;u8, <span class=\"number\">16</span>&gt; = HistoryBuf::new();\nx.write(<span class=\"number\">4</span>);\nx.write(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.oldest(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.oldest_index\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#470-478\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.oldest_index\" class=\"fn\">oldest_index</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns index of the oldest value in the underlying slice.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>x: HistoryBuf&lt;u8, <span class=\"number\">16</span>&gt; = HistoryBuf::new();\nx.write(<span class=\"number\">4</span>);\nx.write(<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(x.oldest_index(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#482-484\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns the array slice backing the buffer, without keeping track\nof the write position. Therefore, the element order is unspecified.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slices\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#498-506\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.as_slices\" class=\"fn\">as_slices</a>(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Returns a pair of slices which contain, in order, the contents of the buffer.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buffer: HistoryBuf&lt;u8, <span class=\"number\">6</span>&gt; = HistoryBuf::new();\nbuffer.extend([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]);\nbuffer.extend([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(buffer.as_slices(), (<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>][..], <span class=\"kw-2\">&amp;</span>[<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>][..]));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.oldest_ordered\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#523-528\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/history_buf/struct.HistoryBufInner.html#tymethod.oldest_ordered\" class=\"fn\">oldest_ordered</a>(&amp;self) -&gt; <a class=\"struct\" href=\"heapless/history_buf/struct.OldestOrdered.html\" title=\"struct heapless::history_buf::OldestOrdered\">OldestOrdered</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"OldestOrdered&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns double ended iterator for iterating over the buffer from\nthe oldest to the newest and back.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::HistoryBuf;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buffer: HistoryBuf&lt;u8, <span class=\"number\">6</span>&gt; = HistoryBuf::new();\nbuffer.extend([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n<span class=\"kw\">let </span>expected = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n<span class=\"kw\">for </span>(x, y) <span class=\"kw\">in </span>buffer.oldest_ordered().zip(expected.iter()) {\n    <span class=\"macro\">assert_eq!</span>(x, y)\n}</code></pre></div>\n</div></details></div></details>",0,"heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-HistoryBufInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#605-612\">Source</a><a href=\"#impl-PartialEq-for-HistoryBufInner%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/history_buf/trait.HistoryBufStorage.html\" title=\"trait heapless::history_buf::HistoryBufStorage\">HistoryBufStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"heapless/history_buf/struct.HistoryBufInner.html\" title=\"struct heapless::history_buf::HistoryBufInner\">HistoryBufInner</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/history_buf.rs.html#609-611\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","heapless::history_buf::HistoryBuf","heapless::history_buf::HistoryBufView"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[38165]}