(function() {
    var type_impls = Object.fromEntries([["fugit",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#641-652\">Source</a><a href=\"#impl-Add%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#642\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#645-651\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Rate<u32, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Add-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Add-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#655-662\">Source</a><a href=\"#impl-AddAssign%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#659-661\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Rate<u32, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-AddAssign-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-AddAssign-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#11\">Source</a><a href=\"#impl-Clone-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;T, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#11\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;T, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#11\">Source</a><a href=\"#impl-Debug-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;T, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#11\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Display-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Display-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Div%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Rate<u32, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Div%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Rate<u64, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Div%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Div%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-DivAssign%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-DivAssign%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#594-599\">Source</a><a href=\"#impl-From%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#596-598\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;) -&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rate<u32, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Mul%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Mul%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-MulAssign%3Cu32%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-MulAssign%3Cu32%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<u32>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Ord-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1010-1012\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1049-1051\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1075-1077\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Ord-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1010-1012\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1049-1051\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1075-1077\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-PartialEq%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rate<u32, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#673-680\">Source</a><a href=\"#impl-PartialEq%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#677-679\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rate<u32, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#691-698\">Source</a><a href=\"#impl-PartialEq%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#695-697\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rate<u64, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-PartialEq%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rate<u64, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-PartialOrd%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1384\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1402\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1420\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1438\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Rate<u32, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#664-671\">Source</a><a href=\"#impl-PartialOrd%3CRate%3Cu32,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#668-670\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1384\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1402\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1420\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1438\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Rate<u32, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#682-689\">Source</a><a href=\"#impl-PartialOrd%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu32,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#686-688\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1384\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1402\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1420\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1438\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Rate<u64, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-PartialOrd%3CRate%3Cu64,+R_NOM,+R_DENOM%3E%3E-for-Rate%3Cu64,+L_NOM,+L_DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const L_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, L_NOM, L_DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1384\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1402\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1420\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#1438\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Rate<u64, R_NOM, R_DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a <code>Rate</code> from a raw value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>_d = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Extract the raw value from a <code>Rate</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>d = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">234</span>);\n\n<span class=\"macro\">assert_eq!</span>(d.raw(), <span class=\"number\">234</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.checked_add\" class=\"fn\">checked_add</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Add two rates while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r3 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(u32::MAX);\n\n<span class=\"macro\">assert_eq!</span>(r1.checked_add(r2).unwrap().raw(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(r1.checked_add(r3), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Subtract two rates while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r3 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(u32::MAX);\n\n<span class=\"macro\">assert_eq!</span>(r2.checked_sub(r1).unwrap().raw(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(r1.checked_sub(r3), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_partial_cmp\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_partial_cmp\" class=\"fn\">const_partial_cmp</a>&lt;const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Const partial comparison.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(r1.const_partial_cmp(r2), <span class=\"prelude-val\">Some</span>(core::cmp::Ordering::Greater));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_eq\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_eq\" class=\"fn\">const_eq</a>&lt;const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, R_NOM, R_DENOM&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Const equality check.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert!</span>(r1.const_eq(r2));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_try_from\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_try_from\" class=\"fn\">const_try_from</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    rate: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, I_NOM, I_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Const try from, checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::const_try_from(r1);\n\n<span class=\"macro\">assert_eq!</span>(r2.unwrap().raw(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_try_into\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_try_into\" class=\"fn\">const_try_into</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Const try into, checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2: <span class=\"prelude-ty\">Option</span>&lt;Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;&gt; = r1.const_try_into();\n\n<span class=\"macro\">assert_eq!</span>(r2.unwrap().raw(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.try_into_duration\" class=\"fn\">try_into_duration</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Const try into duration, checking for divide-by-zero.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d1: <span class=\"prelude-ty\">Option</span>&lt;Duration::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;&gt; = r1.try_into_duration();\n\n<span class=\"macro\">assert_eq!</span>(d1.unwrap().ticks(), <span class=\"number\">1_000</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.into_duration\" class=\"fn\">into_duration</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Convert from rate to duration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.try_from_duration\" class=\"fn\">try_from_duration</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    duration: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, I_NOM, I_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Const try from duration, checking for divide-by-zero.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>d1 = Duration::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1</span>&gt;::try_from_duration(d1);\n\n<span class=\"macro\">assert_eq!</span>(r1.unwrap().raw(), <span class=\"number\">500</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.from_duration\" class=\"fn\">from_duration</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    duration: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, I_NOM, I_DENOM&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from duration to rate.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.convert\" class=\"fn\">convert</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, O_NOM, O_DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Convert between bases for a rate.</p>\n<p>Unfortunately not a <code>From</code> impl due to collision with the std lib.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2: Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt; = r1.convert();\n\n<span class=\"macro\">assert_eq!</span>(r2.raw(), <span class=\"number\">10</span>);</code></pre></div>\n<p>Can be used in const contexts. Compilation will fail if the conversion causes overflow</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">const </span>RAW: u32= u32::MAX - <span class=\"number\">10</span>;\n<span class=\"kw\">const </span>R1: Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt; = Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt;::from_raw(RAW);\n<span class=\"comment\">// Fails conversion due to overflow\n</span><span class=\"kw\">const </span>R2: Rate::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">200</span>&gt; = R1.convert();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_Hz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_Hz\" class=\"fn\">to_Hz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of Hz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_kHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_kHz\" class=\"fn\">to_kHz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of kHz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_MHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_MHz\" class=\"fn\">to_MHz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of MHz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.Hz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.Hz\" class=\"fn\">Hz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents hertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.kHz\" class=\"fn\">kHz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents kilohertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.MHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.MHz\" class=\"fn\">MHz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents megahertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nanos\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.nanos\" class=\"fn\">nanos</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents nanoseconds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.micros\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.micros\" class=\"fn\">micros</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents microseconds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.millis\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.millis\" class=\"fn\">millis</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents milliseconds.</p>\n</div></details></div></details>",0,"fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a <code>Rate</code> from a raw value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>_d = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Extract the raw value from a <code>Rate</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>d = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">234</span>);\n\n<span class=\"macro\">assert_eq!</span>(d.raw(), <span class=\"number\">234</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.checked_add\" class=\"fn\">checked_add</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Add two rates while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r3 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(u64::MAX);\n\n<span class=\"macro\">assert_eq!</span>(r1.checked_add(r2).unwrap().raw(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(r1.checked_add(r3), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Subtract two rates while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r3 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(u64::MAX);\n\n<span class=\"macro\">assert_eq!</span>(r2.checked_sub(r1).unwrap().raw(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(r1.checked_sub(r3), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_partial_cmp\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_partial_cmp\" class=\"fn\">const_partial_cmp</a>&lt;const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Const partial comparison.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(r1.const_partial_cmp(r2), <span class=\"prelude-val\">Some</span>(core::cmp::Ordering::Greater));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_eq\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_eq\" class=\"fn\">const_eq</a>&lt;const R_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const R_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, R_NOM, R_DENOM&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Const equality check.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_raw(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert!</span>(r1.const_eq(r2));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_try_from\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_try_from\" class=\"fn\">const_try_from</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    rate: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, I_NOM, I_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Const try from, checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::const_try_from(r1);\n\n<span class=\"macro\">assert_eq!</span>(r2.unwrap().raw(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_try_into\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.const_try_into\" class=\"fn\">const_try_into</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Const try into, checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_00</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2: <span class=\"prelude-ty\">Option</span>&lt;Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;&gt; = r1.const_try_into();\n\n<span class=\"macro\">assert_eq!</span>(r2.unwrap().raw(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.try_into_duration\" class=\"fn\">try_into_duration</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Const try into duration, checking for divide-by-zero.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d1: <span class=\"prelude-ty\">Option</span>&lt;Duration::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;&gt; = r1.try_into_duration();\n\n<span class=\"macro\">assert_eq!</span>(d1.unwrap().ticks(), <span class=\"number\">1_000</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.into_duration\" class=\"fn\">into_duration</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Convert from rate to duration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.try_from_duration\" class=\"fn\">try_from_duration</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    duration: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, I_NOM, I_DENOM&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Const try from duration, checking for divide-by-zero.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>d1 = Duration::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1</span>&gt;::try_from_duration(d1);\n\n<span class=\"macro\">assert_eq!</span>(r1.unwrap().raw(), <span class=\"number\">500</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.from_duration\" class=\"fn\">from_duration</a>&lt;const I_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const I_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    duration: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, I_NOM, I_DENOM&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from duration to rate.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.convert\" class=\"fn\">convert</a>&lt;const O_NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const O_DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, O_NOM, O_DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Convert between bases for a rate.</p>\n<p>Unfortunately not a <code>From</code> impl due to collision with the std lib.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r1 = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt;::from_raw(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>r2: Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt; = r1.convert();\n\n<span class=\"macro\">assert_eq!</span>(r2.raw(), <span class=\"number\">10</span>);</code></pre></div>\n<p>Can be used in const contexts. Compilation will fail if the conversion causes overflow</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">const </span>RAW: u64= u64::MAX - <span class=\"number\">10</span>;\n<span class=\"kw\">const </span>R1: Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt; = Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">100</span>&gt;::from_raw(RAW);\n<span class=\"comment\">// Fails conversion due to overflow\n</span><span class=\"kw\">const </span>R2: Rate::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">200</span>&gt; = R1.convert();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_Hz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_Hz\" class=\"fn\">to_Hz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of Hz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_kHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_kHz\" class=\"fn\">to_kHz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of kHz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_MHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.to_MHz\" class=\"fn\">to_MHz</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Convert the Rate to an interger number of MHz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.Hz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.Hz\" class=\"fn\">Hz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents hertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.kHz\" class=\"fn\">kHz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents kilohertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.MHz\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.MHz\" class=\"fn\">MHz</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents megahertz.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nanos\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.nanos\" class=\"fn\">nanos</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents nanoseconds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.micros\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.micros\" class=\"fn\">micros</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents microseconds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.millis\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Rate.html#tymethod.millis\" class=\"fn\">millis</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Shorthand for creating a rate which represents milliseconds.</p>\n</div></details></div></details>",0,"fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#616-627\">Source</a><a href=\"#impl-Sub%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#617\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#620-626\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Rate<u32, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Sub-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Sub-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#630-637\">Source</a><a href=\"#impl-SubAssign%3CRate%3Cu32,+NOM,+DENOM%3E%3E-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#634-636\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Rate<u32, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CRate%3Cu64,+NOM,+DENOM%3E%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#601-612\">Source</a><a href=\"#impl-TryFrom%3CRate%3Cu64,+NOM,+DENOM%3E%3E-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#604\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#607-611\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(val: <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Rate<u64, NOM, DENOM>>","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<section id=\"impl-Copy-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#11\">Source</a><a href=\"#impl-Copy-for-Rate%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;T, NOM, DENOM&gt;</h3></section>","Copy","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32","fugit::aliases::TimerRateU64"],["<section id=\"impl-Eq-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#587\">Source</a><a href=\"#impl-Eq-for-Rate%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, NOM, DENOM&gt;</h3></section>","Eq","fugit::aliases::Hertz","fugit::aliases::HertzU32","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU32","fugit::aliases::Megahertz","fugit::aliases::MegahertzU32","fugit::aliases::TimerRate","fugit::aliases::TimerRateU32"],["<section id=\"impl-Eq-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/rate.rs.html#588\">Source</a><a href=\"#impl-Eq-for-Rate%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>, const DENOM: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.u64.html\">u64</a>, NOM, DENOM&gt;</h3></section>","Eq","fugit::aliases::Hertz","fugit::aliases::HertzU64","fugit::aliases::Kilohertz","fugit::aliases::KilohertzU64","fugit::aliases::Megahertz","fugit::aliases::MegahertzU64","fugit::aliases::TimerRate","fugit::aliases::TimerRateU64"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[172717]}