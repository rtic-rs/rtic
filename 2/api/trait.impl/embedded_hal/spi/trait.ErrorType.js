(function() {
    var implementors = Object.fromEntries([["embedded_hal",[]],["embedded_hal_async",[]],["embedded_hal_bus",[["impl&lt;BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embedded_hal_bus/spi/struct.AtomicDevice.html\" title=\"struct embedded_hal_bus::spi::AtomicDevice\">AtomicDevice</a>&lt;'_, BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"],["impl&lt;BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embedded_hal_bus/spi/struct.CriticalSectionDevice.html\" title=\"struct embedded_hal_bus::spi::CriticalSectionDevice\">CriticalSectionDevice</a>&lt;'_, BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"],["impl&lt;BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embedded_hal_bus/spi/struct.ExclusiveDevice.html\" title=\"struct embedded_hal_bus::spi::ExclusiveDevice\">ExclusiveDevice</a>&lt;BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"],["impl&lt;BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embedded_hal_bus/spi/struct.RefCellDevice.html\" title=\"struct embedded_hal_bus::spi::RefCellDevice\">RefCellDevice</a>&lt;'_, BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"]]],["rtic_sync",[["impl&lt;'a, BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"rtic_sync/arbiter/spi/struct.BlockingArbiterDevice.html\" title=\"struct rtic_sync::arbiter::spi::BlockingArbiterDevice\">BlockingArbiterDevice</a>&lt;'a, BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"],["impl&lt;BUS, CS, D&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"rtic_sync/arbiter/spi/struct.ArbiterDevice.html\" title=\"struct rtic_sync::arbiter::spi::ArbiterDevice\">ArbiterDevice</a>&lt;'_, BUS, CS, D&gt;<div class=\"where\">where\n    BUS: <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a>,\n    CS: <a class=\"trait\" href=\"embedded_hal/digital/trait.OutputPin.html\" title=\"trait embedded_hal::digital::OutputPin\">OutputPin</a>,</div>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[19,26,2594,1324]}