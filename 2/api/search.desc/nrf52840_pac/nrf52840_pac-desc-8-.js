searchState.loadedDescShard("nrf52840_pac", 8, "Field <code>TICK</code> writer - Write ‘1’ to enable event routing …\nRegister <code>EVTENSET</code> writer\nWrites raw bits to the register.\nBit 16 - Write ‘1’ to enable event routing for COMPARE…\nBit 16 - Write ‘1’ to enable event routing for COMPARE…\nBit 17 - Write ‘1’ to enable event routing for COMPARE…\nBit 17 - Write ‘1’ to enable event routing for COMPARE…\nBit 18 - Write ‘1’ to enable event routing for COMPARE…\nBit 18 - Write ‘1’ to enable event routing for COMPARE…\nBit 19 - Write ‘1’ to enable event routing for COMPARE…\nBit 19 - Write ‘1’ to enable event routing for COMPARE…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable event routing for OVRFLW …\nBit 1 - Write ‘1’ to enable event routing for OVRFLW …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable event routing for TICK …\nBit 0 - Write ‘1’ to enable event routing for TICK …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for COMPARE[0] event\nWrite ‘1’ to disable interrupt for COMPARE[0] event\nField <code>COMPARE0</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE0</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for COMPARE[1] event\nWrite ‘1’ to disable interrupt for COMPARE[1] event\nField <code>COMPARE1</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE1</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for COMPARE[2] event\nWrite ‘1’ to disable interrupt for COMPARE[2] event\nField <code>COMPARE2</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE2</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for COMPARE[3] event\nWrite ‘1’ to disable interrupt for COMPARE[3] event\nField <code>COMPARE3</code> reader - Write ‘1’ to disable interrupt …\nField <code>COMPARE3</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable interrupt\nWrite ‘1’ to disable interrupt for OVRFLW event\nWrite ‘1’ to disable interrupt for OVRFLW event\nField <code>OVRFLW</code> reader - Write ‘1’ to disable interrupt …\nField <code>OVRFLW</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for TICK event\nWrite ‘1’ to disable interrupt for TICK event\nField <code>TICK</code> reader - Write ‘1’ to disable interrupt for …\nField <code>TICK</code> writer - Write ‘1’ to disable interrupt for …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 16 - Write ‘1’ to disable interrupt for COMPARE[0] …\nBit 16 - Write ‘1’ to disable interrupt for COMPARE[0] …\nBit 17 - Write ‘1’ to disable interrupt for COMPARE[1] …\nBit 17 - Write ‘1’ to disable interrupt for COMPARE[1] …\nBit 18 - Write ‘1’ to disable interrupt for COMPARE[2] …\nBit 18 - Write ‘1’ to disable interrupt for COMPARE[2] …\nBit 19 - Write ‘1’ to disable interrupt for COMPARE[3] …\nBit 19 - Write ‘1’ to disable interrupt for COMPARE[3] …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable interrupt for OVRFLW event\nBit 1 - Write ‘1’ to disable interrupt for OVRFLW event\nBit 0 - Write ‘1’ to disable interrupt for TICK event\nBit 0 - Write ‘1’ to disable interrupt for TICK event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for COMPARE[0] event\nWrite ‘1’ to enable interrupt for COMPARE[0] event\nField <code>COMPARE0</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE0</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for COMPARE[1] event\nWrite ‘1’ to enable interrupt for COMPARE[1] event\nField <code>COMPARE1</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE1</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for COMPARE[2] event\nWrite ‘1’ to enable interrupt for COMPARE[2] event\nField <code>COMPARE2</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE2</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for COMPARE[3] event\nWrite ‘1’ to enable interrupt for COMPARE[3] event\nField <code>COMPARE3</code> reader - Write ‘1’ to enable interrupt …\nField <code>COMPARE3</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable interrupt\nWrite ‘1’ to enable interrupt for OVRFLW event\nWrite ‘1’ to enable interrupt for OVRFLW event\nField <code>OVRFLW</code> reader - Write ‘1’ to enable interrupt …\nField <code>OVRFLW</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for TICK event\nWrite ‘1’ to enable interrupt for TICK event\nField <code>TICK</code> reader - Write ‘1’ to enable interrupt for …\nField <code>TICK</code> writer - Write ‘1’ to enable interrupt for …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 16 - Write ‘1’ to enable interrupt for COMPARE[0] …\nBit 16 - Write ‘1’ to enable interrupt for COMPARE[0] …\nBit 17 - Write ‘1’ to enable interrupt for COMPARE[1] …\nBit 17 - Write ‘1’ to enable interrupt for COMPARE[1] …\nBit 18 - Write ‘1’ to enable interrupt for COMPARE[2] …\nBit 18 - Write ‘1’ to enable interrupt for COMPARE[2] …\nBit 19 - Write ‘1’ to enable interrupt for COMPARE[3] …\nBit 19 - Write ‘1’ to enable interrupt for COMPARE[3] …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to enable interrupt for OVRFLW event\nBit 1 - Write ‘1’ to enable interrupt for OVRFLW event\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable interrupt for TICK event\nBit 0 - Write ‘1’ to enable interrupt for TICK event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>PRESCALER</code> reader - Prescaler value\n12 bit prescaler for COUNTER frequency …\nField <code>PRESCALER</code> writer - Prescaler value\nRegister <code>PRESCALER</code> reader\nRegister <code>PRESCALER</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:11 - Prescaler value\nBits 0:11 - Prescaler value\nClear RTC COUNTER\nField <code>TASKS_CLEAR</code> writer -\nRegister <code>TASKS_CLEAR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart RTC COUNTER\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop RTC COUNTER\nField <code>TASKS_STOP</code> writer -\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nSet COUNTER to 0xFFFFF0\nField <code>TASKS_TRIGOVRFLW</code> writer -\nRegister <code>TASKS_TRIGOVRFLW</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nUnspecified\nENABLE (rw) register accessor: an alias for …\nEVENTS_CALIBRATEDONE (rw) register accessor: an alias for …\nUnspecified\nEVENTS_DONE (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_RESULTDONE (rw) register accessor: an alias for …\nEVENTS_STARTED (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nINTEN (rw) register accessor: an alias for <code>Reg&lt;INTEN_SPEC&gt;</code>\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nOVERSAMPLE (rw) register accessor: an alias for …\nRESOLUTION (rw) register accessor: an alias for …\nRESULT EasyDMA channel\nRegister block\nSAMPLERATE (rw) register accessor: an alias for …\nSTATUS (r) register accessor: an alias for <code>Reg&lt;STATUS_SPEC&gt;</code>\nTASKS_CALIBRATEOFFSET (w) register accessor: an alias for …\nTASKS_SAMPLE (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nCluster Unspecified\n0x510..0x590 - Unspecified\nEnable or disable SAADC\n0x500 - Enable or disable SAADC\nCalibration is complete\n0x110 - Calibration is complete\nCluster Unspecified\n0x118..0x158 - Unspecified\nA conversion task has been completed. Depending on the …\n0x108 - A conversion task has been completed. Depending on …\nThe SAADC has filled up the result buffer\n0x104 - The SAADC has filled up the result buffer\nResult ready for transfer to RAM\n0x10c - Result ready for transfer to RAM\nThe SAADC has started\n0x100 - The SAADC has started\nThe SAADC has stopped\n0x114 - The SAADC has stopped\nReturns the argument unchanged.\nEnable or disable interrupt\n0x300 - Enable or disable interrupt\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nOversampling configuration. The RESOLUTION is applied …\n0x5f4 - Oversampling configuration. The RESOLUTION is …\nResolution configuration\n0x5f0 - Resolution configuration\nCluster RESULT EasyDMA channel\n0x62c..0x638 - RESULT EasyDMA channel\nControls normal or continuous sample rate\n0x5f8 - Controls normal or continuous sample rate\nStatus\n0x400 - Status\nStarts offset auto-calibration\n0x0c - Starts offset auto-calibration\nTakes one SAADC sample\n0x04 - Takes one SAADC sample\nStarts the SAADC and prepares the result buffer in RAM\n0x00 - Starts the SAADC and prepares the result buffer in …\nStops the SAADC and terminates all on-going conversions\n0x08 - Stops the SAADC and terminates all on-going …\nRegister block\nCONFIG (rw) register accessor: an alias for …\nLIMIT (rw) register accessor: an alias for <code>Reg&lt;LIMIT_SPEC&gt;</code>\nPSELN (rw) register accessor: an alias for <code>Reg&lt;PSELN_SPEC&gt;</code>\nPSELP (rw) register accessor: an alias for <code>Reg&lt;PSELP_SPEC&gt;</code>\nDescription cluster[n]: Input configuration for CH[n]\n0x08 - Description cluster[n]: Input configuration for CH[n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster[n]: High/low limits for event …\n0x0c - Description cluster[n]: High/low limits for event …\nDescription cluster[n]: Input negative pin selection for CH…\n0x04 - Description cluster[n]: Input negative pin …\nDescription cluster[n]: Input positive pin selection for CH…\n0x00 - Description cluster[n]: Input positive pin …\nEnable burst mode\nField <code>BURST</code> reader - Enable burst mode\nField <code>BURST</code> writer - Enable burst mode\n0: Bypass resistor ladder\n0: Bypass resistor ladder\nDescription cluster[n]: Input configuration for CH[n]\n1: Differential\n0: Burst mode is disabled (normal operation)\n1: Burst mode is enabled. SAADC takes 2^OVERSAMPLE number …\n5: 1\n4: 1/2\n3: 1/3\n2: 1/4\n1: 1/5\n0: 1/6\n6: 2\n7: 4\nGain control\nField <code>GAIN</code> reader - Gain control\nField <code>GAIN</code> writer - Gain control\n0: Internal reference (0.6 V)\nEnable differential mode\nField <code>MODE</code> reader - Enable differential mode\nField <code>MODE</code> writer - Enable differential mode\n1: Pull-down to GND\n1: Pull-down to GND\n2: Pull-up to VDD\n2: Pull-up to VDD\nRegister <code>CONFIG</code> reader\nReference control\nField <code>REFSEL</code> reader - Reference control\nField <code>REFSEL</code> writer - Reference control\nNegative channel resistor control\nField <code>RESN</code> reader - Negative channel resistor control\nField <code>RESN</code> writer - Negative channel resistor control\nPositive channel resistor control\nField <code>RESP</code> reader - Positive channel resistor control\nField <code>RESP</code> writer - Positive channel resistor control\n0: Single-ended, PSELN will be ignored, negative input to …\nAcquisition time, the time the SAADC uses to sample the …\nField <code>TACQ</code> reader - Acquisition time, the time the SAADC …\nField <code>TACQ</code> writer - Acquisition time, the time the SAADC …\n3: Set input at VDD/2\n3: Set input at VDD/2\n1: VDD/4 as reference\nRegister <code>CONFIG</code> writer\n2: 10 us\n10 us\n3: 15 us\n15 us\n4: 20 us\n20 us\n0: 3 us\n3 us\n5: 40 us\n40 us\n1: 5 us\n5 us\nWrites raw bits to the register.\nBit 24 - Enable burst mode\nBit 24 - Enable burst mode\nBypass resistor ladder\nBypass resistor ladder\nDifferential\nBurst mode is disabled (normal operation)\nBurst mode is enabled. SAADC takes 2^OVERSAMPLE number of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 8:10 - Gain control\nBits 8:10 - Gain control\n1\n1/2\n1/3\n1/4\n1/5\n1/6\n2\n4\nInternal reference (0.6 V)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_10US</code>\nChecks if the value of the field is <code>_15US</code>\nChecks if the value of the field is <code>_20US</code>\nChecks if the value of the field is <code>_3US</code>\nChecks if the value of the field is <code>_40US</code>\nChecks if the value of the field is <code>_5US</code>\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>DIFF</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>GAIN1</code>\nChecks if the value of the field is <code>GAIN1_2</code>\nChecks if the value of the field is <code>GAIN1_3</code>\nChecks if the value of the field is <code>GAIN1_4</code>\nChecks if the value of the field is <code>GAIN1_5</code>\nChecks if the value of the field is <code>GAIN1_6</code>\nChecks if the value of the field is <code>GAIN2</code>\nChecks if the value of the field is <code>GAIN4</code>\nChecks if the value of the field is <code>INTERNAL</code>\nChecks if the value of the field is <code>PULLDOWN</code>\nChecks if the value of the field is <code>PULLDOWN</code>\nChecks if the value of the field is <code>PULLUP</code>\nChecks if the value of the field is <code>PULLUP</code>\nChecks if the value of the field is <code>SE</code>\nChecks if the value of the field is <code>VDD1_2</code>\nChecks if the value of the field is <code>VDD1_2</code>\nChecks if the value of the field is <code>VDD1_4</code>\nBit 20 - Enable differential mode\nBit 20 - Enable differential mode\nPull-down to GND\nPull-down to GND\nPull-up to VDD\nPull-up to VDD\nBit 12 - Reference control\nBit 12 - Reference control\nBits 4:5 - Negative channel resistor control\nBits 4:5 - Negative channel resistor control\nBits 0:1 - Positive channel resistor control\nBits 0:1 - Positive channel resistor control\nSingle-ended, PSELN will be ignored, negative input to …\nBits 16:18 - Acquisition time, the time the SAADC uses to …\nBits 16:18 - Acquisition time, the time the SAADC uses to …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSet input at VDD/2\nSet input at VDD/2\nVDD/4 as reference\nField <code>HIGH</code> reader - High level limit\nField <code>HIGH</code> writer - High level limit\nDescription cluster[n]: High/low limits for event …\nField <code>LOW</code> reader - Low level limit\nField <code>LOW</code> writer - Low level limit\nRegister <code>LIMIT</code> reader\nRegister <code>LIMIT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 16:31 - High level limit\nBits 16:31 - High level limit\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Low level limit\nBits 0:15 - Low level limit\n1: AIN0\n2: AIN1\n3: AIN2\n4: AIN3\n5: AIN4\n6: AIN5\n7: AIN6\n8: AIN7\n0: Not connected\nAnalog negative input, enables differential channel\nField <code>PSELN</code> reader - Analog negative input, enables …\nDescription cluster[n]: Input negative pin selection for CH…\nField <code>PSELN</code> writer - Analog negative input, enables …\nRegister <code>PSELN</code> reader\n9: VDD\n13: VDDH/5\nRegister <code>PSELN</code> writer\nAIN0\nAIN1\nAIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_INPUT0</code>\nChecks if the value of the field is <code>ANALOG_INPUT1</code>\nChecks if the value of the field is <code>ANALOG_INPUT2</code>\nChecks if the value of the field is <code>ANALOG_INPUT3</code>\nChecks if the value of the field is <code>ANALOG_INPUT4</code>\nChecks if the value of the field is <code>ANALOG_INPUT5</code>\nChecks if the value of the field is <code>ANALOG_INPUT6</code>\nChecks if the value of the field is <code>ANALOG_INPUT7</code>\nChecks if the value of the field is <code>NC</code>\nChecks if the value of the field is <code>VDD</code>\nChecks if the value of the field is <code>VDDHDIV5</code>\nNot connected\nBits 0:4 - Analog negative input, enables differential …\nBits 0:4 - Analog negative input, enables differential …\nGet enumerated values variant\nVDD\nVDDH/5\n1: AIN0\n2: AIN1\n3: AIN2\n4: AIN3\n5: AIN4\n6: AIN5\n7: AIN6\n8: AIN7\n0: Not connected\nAnalog positive input channel\nField <code>PSELP</code> reader - Analog positive input channel\nDescription cluster[n]: Input positive pin selection for CH…\nField <code>PSELP</code> writer - Analog positive input channel\nRegister <code>PSELP</code> reader\n9: VDD\n13: VDDH/5\nRegister <code>PSELP</code> writer\nAIN0\nAIN1\nAIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ANALOG_INPUT0</code>\nChecks if the value of the field is <code>ANALOG_INPUT1</code>\nChecks if the value of the field is <code>ANALOG_INPUT2</code>\nChecks if the value of the field is <code>ANALOG_INPUT3</code>\nChecks if the value of the field is <code>ANALOG_INPUT4</code>\nChecks if the value of the field is <code>ANALOG_INPUT5</code>\nChecks if the value of the field is <code>ANALOG_INPUT6</code>\nChecks if the value of the field is <code>ANALOG_INPUT7</code>\nChecks if the value of the field is <code>NC</code>\nChecks if the value of the field is <code>VDD</code>\nChecks if the value of the field is <code>VDDHDIV5</code>\nNot connected\nBits 0:4 - Analog positive input channel\nBits 0:4 - Analog positive input channel\nGet enumerated values variant\nVDD\nVDDH/5\n0: Disable SAADC\n1: Enable SAADC\nEnable or disable SAADC\nField <code>ENABLE</code> reader - Enable or disable SAADC\nEnable or disable SAADC\nField <code>ENABLE</code> writer - Enable or disable SAADC\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SAADC\nBit 0 - Enable or disable SAADC\nBit 0 - Enable or disable SAADC\nEnable SAADC\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nField <code>EVENTS_CALIBRATEDONE</code> reader -\nCalibration is complete\nField <code>EVENTS_CALIBRATEDONE</code> writer -\nRegister <code>EVENTS_CALIBRATEDONE</code> reader\nRegister <code>EVENTS_CALIBRATEDONE</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister block\nLIMITH (rw) register accessor: an alias for …\nLIMITL (rw) register accessor: an alias for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription cluster[n]: Last result is equal or above CH[n…\n0x00 - Description cluster[n]: Last result is equal or …\nDescription cluster[n]: Last result is equal or below CH[n…\n0x04 - Description cluster[n]: Last result is equal or …\nField <code>LIMITH</code> reader -\nDescription cluster[n]: Last result is equal or above CH[n…\nField <code>LIMITH</code> writer -\nRegister <code>LIMITH</code> reader\nRegister <code>LIMITH</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nBit 0\nField <code>LIMITL</code> reader -\nDescription cluster[n]: Last result is equal or below CH[n…\nField <code>LIMITL</code> writer -\nRegister <code>LIMITL</code> reader\nRegister <code>LIMITL</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nBit 0\nField <code>EVENTS_DONE</code> reader -\nA conversion task has been completed. Depending on the …\nField <code>EVENTS_DONE</code> writer -\nRegister <code>EVENTS_DONE</code> reader\nRegister <code>EVENTS_DONE</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_END</code> reader -\nThe SAADC has filled up the result buffer\nField <code>EVENTS_END</code> writer -\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_RESULTDONE</code> reader -\nResult ready for transfer to RAM\nField <code>EVENTS_RESULTDONE</code> writer -\nRegister <code>EVENTS_RESULTDONE</code> reader\nRegister <code>EVENTS_RESULTDONE</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_STARTED</code> reader -\nThe SAADC has started\nField <code>EVENTS_STARTED</code> writer -\nRegister <code>EVENTS_STARTED</code> reader\nRegister <code>EVENTS_STARTED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_STOPPED</code> reader -\nThe SAADC has stopped\nField <code>EVENTS_STOPPED</code> writer -\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnable or disable interrupt for CALIBRATEDONE event\nField <code>CALIBRATEDONE</code> reader - Enable or disable interrupt …\nField <code>CALIBRATEDONE</code> writer - Enable or disable interrupt …\nEnable or disable interrupt for CH[0].LIMITH event\nField <code>CH0LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH0LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[0].LIMITL event\nField <code>CH0LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH0LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[1].LIMITH event\nField <code>CH1LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH1LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[1].LIMITL event\nField <code>CH1LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH1LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[2].LIMITH event\nField <code>CH2LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH2LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[2].LIMITL event\nField <code>CH2LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH2LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[3].LIMITH event\nField <code>CH3LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH3LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[3].LIMITL event\nField <code>CH3LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH3LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[4].LIMITH event\nField <code>CH4LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH4LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[4].LIMITL event\nField <code>CH4LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH4LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[5].LIMITH event\nField <code>CH5LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH5LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[5].LIMITL event\nField <code>CH5LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH5LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[6].LIMITH event\nField <code>CH6LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH6LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[6].LIMITL event\nField <code>CH6LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH6LIMITL</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[7].LIMITH event\nField <code>CH7LIMITH</code> reader - Enable or disable interrupt for CH…\nField <code>CH7LIMITH</code> writer - Enable or disable interrupt for CH…\nEnable or disable interrupt for CH[7].LIMITL event\nField <code>CH7LIMITL</code> reader - Enable or disable interrupt for CH…\nField <code>CH7LIMITL</code> writer - Enable or disable interrupt for CH…\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\nEnable or disable interrupt for DONE event\nField <code>DONE</code> reader - Enable or disable interrupt for DONE …\nField <code>DONE</code> writer - Enable or disable interrupt for DONE …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable interrupt for END event\nField <code>END</code> reader - Enable or disable interrupt for END …\nField <code>END</code> writer - Enable or disable interrupt for END …\nEnable or disable interrupt\nRegister <code>INTEN</code> reader\nEnable or disable interrupt for RESULTDONE event\nField <code>RESULTDONE</code> reader - Enable or disable interrupt for …\nField <code>RESULTDONE</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for STARTED event\nField <code>STARTED</code> reader - Enable or disable interrupt for …\nField <code>STARTED</code> writer - Enable or disable interrupt for …\nEnable or disable interrupt for STOPPED event\nField <code>STOPPED</code> reader - Enable or disable interrupt for …\nField <code>STOPPED</code> writer - Enable or disable interrupt for …\nRegister <code>INTEN</code> writer\nWrites raw bits to the register.\nBit 4 - Enable or disable interrupt for CALIBRATEDONE event\nBit 4 - Enable or disable interrupt for CALIBRATEDONE event\nBit 6 - Enable or disable interrupt for CH[0].LIMITH event\nBit 6 - Enable or disable interrupt for CH[0].LIMITH event\nBit 7 - Enable or disable interrupt for CH[0].LIMITL event\nBit 7 - Enable or disable interrupt for CH[0].LIMITL event\nBit 8 - Enable or disable interrupt for CH[1].LIMITH event\nBit 8 - Enable or disable interrupt for CH[1].LIMITH event\nBit 9 - Enable or disable interrupt for CH[1].LIMITL event\nBit 9 - Enable or disable interrupt for CH[1].LIMITL event\nBit 10 - Enable or disable interrupt for CH[2].LIMITH event\nBit 10 - Enable or disable interrupt for CH[2].LIMITH event\nBit 11 - Enable or disable interrupt for CH[2].LIMITL event\nBit 11 - Enable or disable interrupt for CH[2].LIMITL event\nBit 12 - Enable or disable interrupt for CH[3].LIMITH event\nBit 12 - Enable or disable interrupt for CH[3].LIMITH event\nBit 13 - Enable or disable interrupt for CH[3].LIMITL event\nBit 13 - Enable or disable interrupt for CH[3].LIMITL event\nBit 14 - Enable or disable interrupt for CH[4].LIMITH event\nBit 14 - Enable or disable interrupt for CH[4].LIMITH event\nBit 15 - Enable or disable interrupt for CH[4].LIMITL event\nBit 15 - Enable or disable interrupt for CH[4].LIMITL event\nBit 16 - Enable or disable interrupt for CH[5].LIMITH event\nBit 16 - Enable or disable interrupt for CH[5].LIMITH event\nBit 17 - Enable or disable interrupt for CH[5].LIMITL event\nBit 17 - Enable or disable interrupt for CH[5].LIMITL event\nBit 18 - Enable or disable interrupt for CH[6].LIMITH event\nBit 18 - Enable or disable interrupt for CH[6].LIMITH event\nBit 19 - Enable or disable interrupt for CH[6].LIMITL event\nBit 19 - Enable or disable interrupt for CH[6].LIMITL event\nBit 20 - Enable or disable interrupt for CH[7].LIMITH event\nBit 20 - Enable or disable interrupt for CH[7].LIMITH event\nBit 21 - Enable or disable interrupt for CH[7].LIMITL event\nBit 21 - Enable or disable interrupt for CH[7].LIMITL event\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Enable or disable interrupt for DONE event\nBit 2 - Enable or disable interrupt for DONE event\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 1 - Enable or disable interrupt for END event\nBit 1 - Enable or disable interrupt for END event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Enable or disable interrupt for RESULTDONE event\nBit 3 - Enable or disable interrupt for RESULTDONE event\nBit 0 - Enable or disable interrupt for STARTED event\nBit 0 - Enable or disable interrupt for STARTED event\nBit 5 - Enable or disable interrupt for STOPPED event\nBit 5 - Enable or disable interrupt for STOPPED event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to disable interrupt for CALIBRATEDONE event\nWrite ‘1’ to disable interrupt for CALIBRATEDONE event\nField <code>CALIBRATEDONE</code> reader - Write ‘1’ to disable …\nField <code>CALIBRATEDONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[0].LIMITH event\nWrite ‘1’ to disable interrupt for CH[0].LIMITH event\nField <code>CH0LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH0LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[0].LIMITL event\nWrite ‘1’ to disable interrupt for CH[0].LIMITL event\nField <code>CH0LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH0LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[1].LIMITH event\nWrite ‘1’ to disable interrupt for CH[1].LIMITH event\nField <code>CH1LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH1LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[1].LIMITL event\nWrite ‘1’ to disable interrupt for CH[1].LIMITL event\nField <code>CH1LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH1LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[2].LIMITH event\nWrite ‘1’ to disable interrupt for CH[2].LIMITH event\nField <code>CH2LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH2LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[2].LIMITL event\nWrite ‘1’ to disable interrupt for CH[2].LIMITL event\nField <code>CH2LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH2LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[3].LIMITH event\nWrite ‘1’ to disable interrupt for CH[3].LIMITH event\nField <code>CH3LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH3LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[3].LIMITL event\nWrite ‘1’ to disable interrupt for CH[3].LIMITL event\nField <code>CH3LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH3LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[4].LIMITH event\nWrite ‘1’ to disable interrupt for CH[4].LIMITH event\nField <code>CH4LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH4LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[4].LIMITL event\nWrite ‘1’ to disable interrupt for CH[4].LIMITL event\nField <code>CH4LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH4LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[5].LIMITH event\nWrite ‘1’ to disable interrupt for CH[5].LIMITH event\nField <code>CH5LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH5LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[5].LIMITL event\nWrite ‘1’ to disable interrupt for CH[5].LIMITL event\nField <code>CH5LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH5LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[6].LIMITH event\nWrite ‘1’ to disable interrupt for CH[6].LIMITH event\nField <code>CH6LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH6LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[6].LIMITL event\nWrite ‘1’ to disable interrupt for CH[6].LIMITL event\nField <code>CH6LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH6LIMITL</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[7].LIMITH event\nWrite ‘1’ to disable interrupt for CH[7].LIMITH event\nField <code>CH7LIMITH</code> reader - Write ‘1’ to disable …\nField <code>CH7LIMITH</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for CH[7].LIMITL event\nWrite ‘1’ to disable interrupt for CH[7].LIMITL event\nField <code>CH7LIMITL</code> reader - Write ‘1’ to disable …\nField <code>CH7LIMITL</code> writer - Write ‘1’ to disable …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to disable interrupt for DONE event\nWrite ‘1’ to disable interrupt for DONE event\nField <code>DONE</code> reader - Write ‘1’ to disable interrupt for …\nField <code>DONE</code> writer - Write ‘1’ to disable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for END event\nWrite ‘1’ to disable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to disable interrupt for …\nField <code>END</code> writer - Write ‘1’ to disable interrupt for …\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for RESULTDONE event\nWrite ‘1’ to disable interrupt for RESULTDONE event\nField <code>RESULTDONE</code> reader - Write ‘1’ to disable …\nField <code>RESULTDONE</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for STARTED event\nWrite ‘1’ to disable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for STOPPED event\nWrite ‘1’ to disable interrupt for STOPPED event\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nBit 4 - Write ‘1’ to disable interrupt for …\nBit 4 - Write ‘1’ to disable interrupt for …\nBit 6 - Write ‘1’ to disable interrupt for CH[0…\nBit 6 - Write ‘1’ to disable interrupt for CH[0…\nBit 7 - Write ‘1’ to disable interrupt for CH[0…\nBit 7 - Write ‘1’ to disable interrupt for CH[0…\nBit 8 - Write ‘1’ to disable interrupt for CH[1…\nBit 8 - Write ‘1’ to disable interrupt for CH[1…\nBit 9 - Write ‘1’ to disable interrupt for CH[1…\nBit 9 - Write ‘1’ to disable interrupt for CH[1…\nBit 10 - Write ‘1’ to disable interrupt for CH[2…\nBit 10 - Write ‘1’ to disable interrupt for CH[2…\nBit 11 - Write ‘1’ to disable interrupt for CH[2…\nBit 11 - Write ‘1’ to disable interrupt for CH[2…\nBit 12 - Write ‘1’ to disable interrupt for CH[3…\nBit 12 - Write ‘1’ to disable interrupt for CH[3…\nBit 13 - Write ‘1’ to disable interrupt for CH[3…\nBit 13 - Write ‘1’ to disable interrupt for CH[3…\nBit 14 - Write ‘1’ to disable interrupt for CH[4…\nBit 14 - Write ‘1’ to disable interrupt for CH[4…\nBit 15 - Write ‘1’ to disable interrupt for CH[4…\nBit 15 - Write ‘1’ to disable interrupt for CH[4…\nBit 16 - Write ‘1’ to disable interrupt for CH[5…\nBit 16 - Write ‘1’ to disable interrupt for CH[5…\nBit 17 - Write ‘1’ to disable interrupt for CH[5…\nBit 17 - Write ‘1’ to disable interrupt for CH[5…\nBit 18 - Write ‘1’ to disable interrupt for CH[6…\nBit 18 - Write ‘1’ to disable interrupt for CH[6…\nBit 19 - Write ‘1’ to disable interrupt for CH[6…\nBit 19 - Write ‘1’ to disable interrupt for CH[6…\nBit 20 - Write ‘1’ to disable interrupt for CH[7…\nBit 20 - Write ‘1’ to disable interrupt for CH[7…\nBit 21 - Write ‘1’ to disable interrupt for CH[7…\nBit 21 - Write ‘1’ to disable interrupt for CH[7…\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 2 - Write ‘1’ to disable interrupt for DONE event\nBit 2 - Write ‘1’ to disable interrupt for DONE event\nBit 1 - Write ‘1’ to disable interrupt for END event\nBit 1 - Write ‘1’ to disable interrupt for END event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Write ‘1’ to disable interrupt for RESULTDONE …\nBit 3 - Write ‘1’ to disable interrupt for RESULTDONE …\nBit 0 - Write ‘1’ to disable interrupt for STARTED …\nBit 0 - Write ‘1’ to disable interrupt for STARTED …\nBit 5 - Write ‘1’ to disable interrupt for STOPPED …\nBit 5 - Write ‘1’ to disable interrupt for STOPPED …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for CALIBRATEDONE event\nWrite ‘1’ to enable interrupt for CALIBRATEDONE event\nField <code>CALIBRATEDONE</code> reader - Write ‘1’ to enable …\nField <code>CALIBRATEDONE</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for CH[0].LIMITH event\nWrite ‘1’ to enable interrupt for CH[0].LIMITH event\nField <code>CH0LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH0LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[0].LIMITL event\nWrite ‘1’ to enable interrupt for CH[0].LIMITL event\nField <code>CH0LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH0LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[1].LIMITH event\nWrite ‘1’ to enable interrupt for CH[1].LIMITH event\nField <code>CH1LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH1LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[1].LIMITL event\nWrite ‘1’ to enable interrupt for CH[1].LIMITL event\nField <code>CH1LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH1LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[2].LIMITH event\nWrite ‘1’ to enable interrupt for CH[2].LIMITH event\nField <code>CH2LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH2LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[2].LIMITL event\nWrite ‘1’ to enable interrupt for CH[2].LIMITL event\nField <code>CH2LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH2LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[3].LIMITH event\nWrite ‘1’ to enable interrupt for CH[3].LIMITH event\nField <code>CH3LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH3LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[3].LIMITL event\nWrite ‘1’ to enable interrupt for CH[3].LIMITL event\nField <code>CH3LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH3LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[4].LIMITH event\nWrite ‘1’ to enable interrupt for CH[4].LIMITH event\nField <code>CH4LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH4LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[4].LIMITL event\nWrite ‘1’ to enable interrupt for CH[4].LIMITL event\nField <code>CH4LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH4LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[5].LIMITH event\nWrite ‘1’ to enable interrupt for CH[5].LIMITH event\nField <code>CH5LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH5LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[5].LIMITL event\nWrite ‘1’ to enable interrupt for CH[5].LIMITL event\nField <code>CH5LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH5LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[6].LIMITH event\nWrite ‘1’ to enable interrupt for CH[6].LIMITH event\nField <code>CH6LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH6LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[6].LIMITL event\nWrite ‘1’ to enable interrupt for CH[6].LIMITL event\nField <code>CH6LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH6LIMITL</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[7].LIMITH event\nWrite ‘1’ to enable interrupt for CH[7].LIMITH event\nField <code>CH7LIMITH</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH7LIMITH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CH[7].LIMITL event\nWrite ‘1’ to enable interrupt for CH[7].LIMITL event\nField <code>CH7LIMITL</code> reader - Write ‘1’ to enable interrupt …\nField <code>CH7LIMITL</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to enable interrupt for DONE event\nWrite ‘1’ to enable interrupt for DONE event\nField <code>DONE</code> reader - Write ‘1’ to enable interrupt for …\nField <code>DONE</code> writer - Write ‘1’ to enable interrupt for …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for END event\nWrite ‘1’ to enable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to enable interrupt for …\nField <code>END</code> writer - Write ‘1’ to enable interrupt for …\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for RESULTDONE event\nWrite ‘1’ to enable interrupt for RESULTDONE event\nField <code>RESULTDONE</code> reader - Write ‘1’ to enable …\nField <code>RESULTDONE</code> writer - Write ‘1’ to enable …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for STARTED event\nWrite ‘1’ to enable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for STOPPED event\nWrite ‘1’ to enable interrupt for STOPPED event\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 4 - Write ‘1’ to enable interrupt for …\nBit 4 - Write ‘1’ to enable interrupt for …\nBit 6 - Write ‘1’ to enable interrupt for CH[0].LIMITH …\nBit 6 - Write ‘1’ to enable interrupt for CH[0].LIMITH …\nBit 7 - Write ‘1’ to enable interrupt for CH[0].LIMITL …\nBit 7 - Write ‘1’ to enable interrupt for CH[0].LIMITL …\nBit 8 - Write ‘1’ to enable interrupt for CH[1].LIMITH …\nBit 8 - Write ‘1’ to enable interrupt for CH[1].LIMITH …\nBit 9 - Write ‘1’ to enable interrupt for CH[1].LIMITL …\nBit 9 - Write ‘1’ to enable interrupt for CH[1].LIMITL …\nBit 10 - Write ‘1’ to enable interrupt for CH[2…\nBit 10 - Write ‘1’ to enable interrupt for CH[2…\nBit 11 - Write ‘1’ to enable interrupt for CH[2…\nBit 11 - Write ‘1’ to enable interrupt for CH[2…\nBit 12 - Write ‘1’ to enable interrupt for CH[3…\nBit 12 - Write ‘1’ to enable interrupt for CH[3…\nBit 13 - Write ‘1’ to enable interrupt for CH[3…\nBit 13 - Write ‘1’ to enable interrupt for CH[3…\nBit 14 - Write ‘1’ to enable interrupt for CH[4…\nBit 14 - Write ‘1’ to enable interrupt for CH[4…\nBit 15 - Write ‘1’ to enable interrupt for CH[4…\nBit 15 - Write ‘1’ to enable interrupt for CH[4…\nBit 16 - Write ‘1’ to enable interrupt for CH[5…\nBit 16 - Write ‘1’ to enable interrupt for CH[5…\nBit 17 - Write ‘1’ to enable interrupt for CH[5…\nBit 17 - Write ‘1’ to enable interrupt for CH[5…\nBit 18 - Write ‘1’ to enable interrupt for CH[6…\nBit 18 - Write ‘1’ to enable interrupt for CH[6…\nBit 19 - Write ‘1’ to enable interrupt for CH[6…\nBit 19 - Write ‘1’ to enable interrupt for CH[6…\nBit 20 - Write ‘1’ to enable interrupt for CH[7…\nBit 20 - Write ‘1’ to enable interrupt for CH[7…\nBit 21 - Write ‘1’ to enable interrupt for CH[7…\nBit 21 - Write ‘1’ to enable interrupt for CH[7…\nBit 2 - Write ‘1’ to enable interrupt for DONE event\nBit 2 - Write ‘1’ to enable interrupt for DONE event\nBit 1 - Write ‘1’ to enable interrupt for END event\nBit 1 - Write ‘1’ to enable interrupt for END event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 3 - Write ‘1’ to enable interrupt for RESULTDONE …\nBit 3 - Write ‘1’ to enable interrupt for RESULTDONE …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 0 - Write ‘1’ to enable interrupt for STARTED event\nBit 0 - Write ‘1’ to enable interrupt for STARTED event\nBit 5 - Write ‘1’ to enable interrupt for STOPPED event\nBit 5 - Write ‘1’ to enable interrupt for STOPPED event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Bypass oversampling\n7: Oversample 128x\n4: Oversample 16x\n8: Oversample 256x\n1: Oversample 2x\n5: Oversample 32x\n2: Oversample 4x\n6: Oversample 64x\n3: Oversample 8x\nOversample control\nField <code>OVERSAMPLE</code> reader - Oversample control\nOversampling configuration. The RESOLUTION is applied …\nField <code>OVERSAMPLE</code> writer - Oversample control\nRegister <code>OVERSAMPLE</code> reader\nRegister <code>OVERSAMPLE</code> writer\nWrites raw bits to the register.\nBypass oversampling\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BYPASS</code>\nChecks if the value of the field is <code>OVER128X</code>\nChecks if the value of the field is <code>OVER16X</code>\nChecks if the value of the field is <code>OVER256X</code>\nChecks if the value of the field is <code>OVER2X</code>\nChecks if the value of the field is <code>OVER32X</code>\nChecks if the value of the field is <code>OVER4X</code>\nChecks if the value of the field is <code>OVER64X</code>\nChecks if the value of the field is <code>OVER8X</code>\nOversample 128x\nOversample 16x\nOversample 256x\nOversample 2x\nOversample 32x\nOversample 4x\nOversample 64x\nOversample 8x\nBits 0:3 - Oversample control\nBits 0:3 - Oversample control\nGet enumerated values variant\nRegister <code>RESOLUTION</code> reader\nResolution configuration\nSet the resolution\nField <code>VAL</code> reader - Set the resolution\nField <code>VAL</code> writer - Set the resolution\nRegister <code>RESOLUTION</code> writer\n1: 10 bits\n10 bits\n2: 12 bits\n12 bits\n3: 14 bits\n14 bits\n0: 8 bits\n8 bits\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_10BIT</code>\nChecks if the value of the field is <code>_12BIT</code>\nChecks if the value of the field is <code>_14BIT</code>\nChecks if the value of the field is <code>_8BIT</code>\nBits 0:2 - Set the resolution\nBits 0:2 - Set the resolution\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nNumber of 16-bit samples written to output RAM buffer …\n0x08 - Number of 16-bit samples written to output RAM …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of 16-bit samples to be written to output …\n0x04 - Maximum number of 16-bit samples to be written to …\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of 16-bit samples written to …\nNumber of 16-bit samples written to output RAM buffer …\nRegister <code>AMOUNT</code> reader\nBits 0:14 - Number of 16-bit samples written to output RAM …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>MAXCNT</code> reader - Maximum number of 16-bit samples to …\nMaximum number of 16-bit samples to be written to output …\nField <code>MAXCNT</code> writer - Maximum number of 16-bit samples to …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:14 - Maximum number of 16-bit samples to be written …\nBits 0:14 - Maximum number of 16-bit samples to be written …\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\nField <code>CC</code> reader - Capture and compare value. Sample rate …\nField <code>CC</code> writer - Capture and compare value. Sample rate …\nSelect mode for sample rate control\nField <code>MODE</code> reader - Select mode for sample rate control\nField <code>MODE</code> writer - Select mode for sample rate control\nRegister <code>SAMPLERATE</code> reader\nControls normal or continuous sample rate\n0: Rate is controlled from SAMPLE task\n1: Rate is controlled from local timer (use CC to control …\nRegister <code>SAMPLERATE</code> writer\nWrites raw bits to the register.\nBits 0:10 - Capture and compare value. Sample rate is 16 …\nBits 0:10 - Capture and compare value. Sample rate is 16 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>TASK</code>\nChecks if the value of the field is <code>TIMERS</code>\nBit 12 - Select mode for sample rate control\nBit 12 - Select mode for sample rate control\nRate is controlled from SAMPLE task\nRate is controlled from local timer (use CC to control the …\nGet enumerated values variant\n1: SAADC is busy. Conversion in progress.\nRegister <code>STATUS</code> reader\n0: SAADC is ready. No on-going conversions.\nStatus\nField <code>STATUS</code> reader - Status\nStatus\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BUSY</code>\nChecks if the value of the field is <code>READY</code>\nBit 0 - Status\nGet enumerated values variant\nStarts offset auto-calibration\nField <code>TASKS_CALIBRATEOFFSET</code> writer -\nRegister <code>TASKS_CALIBRATEOFFSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nTakes one SAADC sample\nField <code>TASKS_SAMPLE</code> writer -\nRegister <code>TASKS_SAMPLE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStarts the SAADC and prepares the result buffer in RAM\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStops the SAADC and terminates all on-going conversions\nField <code>TASKS_STOP</code> writer -\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nCONFIG (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_READY (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nUnspecified\nRXD (r) register accessor: an alias for <code>Reg&lt;RXD_SPEC&gt;</code>\nRegister block\nTXD (rw) register accessor: an alias for <code>Reg&lt;TXD_SPEC&gt;</code>\nConfiguration register\n0x554 - Configuration register\nEnable SPI\n0x500 - Enable SPI\nTXD byte sent and RXD byte received\n0x108 - TXD byte sent and RXD byte received\nSPI frequency. Accuracy depends on the HFCLK source …\n0x524 - SPI frequency. Accuracy depends on the HFCLK …\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nCluster Unspecified\n0x508..0x514 - Unspecified\nRXD register\n0x518 - RXD register\nTXD register\n0x51c - TXD register\n0: Active high\n1: Active low\nConfiguration register\nSerial clock (SCK) phase\nField <code>CPHA</code> reader - Serial clock (SCK) phase\nField <code>CPHA</code> writer - Serial clock (SCK) phase\nSerial clock (SCK) polarity\nField <code>CPOL</code> reader - Serial clock (SCK) polarity\nField <code>CPOL</code> writer - Serial clock (SCK) polarity\n0: Sample on leading edge of clock, shift serial data on …\n1: Least significant bit shifted out first\n0: Most significant bit shifted out first\nBit order\nField <code>ORDER</code> reader - Bit order\nField <code>ORDER</code> writer - Bit order\nRegister <code>CONFIG</code> reader\n1: Sample on trailing edge of clock, shift serial data on …\nRegister <code>CONFIG</code> writer\nActive high\nActive low\nWrites raw bits to the register.\nBit 1 - Serial clock (SCK) phase\nBit 1 - Serial clock (SCK) phase\nBit 2 - Serial clock (SCK) polarity\nBit 2 - Serial clock (SCK) polarity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ACTIVE_HIGH</code>\nChecks if the value of the field is <code>ACTIVE_LOW</code>\nChecks if the value of the field is <code>LEADING</code>\nChecks if the value of the field is <code>LSB_FIRST</code>\nChecks if the value of the field is <code>MSB_FIRST</code>\nChecks if the value of the field is <code>TRAILING</code>\nSample on leading edge of clock, shift serial data on …\nLeast significant bit shifted out first\nMost significant bit shifted out first\nBit 0 - Bit order\nBit 0 - Bit order\nSample on trailing edge of clock, shift serial data on …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Disable SPI\n1: Enable SPI\nEnable or disable SPI\nField <code>ENABLE</code> reader - Enable or disable SPI\nEnable SPI\nField <code>ENABLE</code> writer - Enable or disable SPI\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SPI\nBits 0:3 - Enable or disable SPI\nBits 0:3 - Enable or disable SPI\nEnable SPI\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nField <code>EVENTS_READY</code> reader -\nTXD byte sent and RXD byte received\nField <code>EVENTS_READY</code> writer -\nRegister <code>EVENTS_READY</code> reader\nRegister <code>EVENTS_READY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSPI master data rate\nField <code>FREQUENCY</code> reader - SPI master data rate\nSPI frequency. Accuracy depends on the HFCLK source …\nField <code>FREQUENCY</code> writer - SPI master data rate\n33554432: 125 kbps\n67108864: 250 kbps\n134217728: 500 kbps\n268435456: 1 Mbps\n536870912: 2 Mbps\n1073741824: 4 Mbps\n2147483648: 8 Mbps\nRegister <code>FREQUENCY</code> reader\nRegister <code>FREQUENCY</code> writer\nWrites raw bits to the register.\nBits 0:31 - SPI master data rate\nBits 0:31 - SPI master data rate\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>K125</code>\nChecks if the value of the field is <code>K250</code>\nChecks if the value of the field is <code>K500</code>\nChecks if the value of the field is <code>M1</code>\nChecks if the value of the field is <code>M2</code>\nChecks if the value of the field is <code>M4</code>\nChecks if the value of the field is <code>M8</code>\n125 kbps\n250 kbps\n500 kbps\n1 Mbps\n2 Mbps\n4 Mbps\n8 Mbps\nGet enumerated values variant\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for READY event\nWrite ‘1’ to disable interrupt for READY event\nField <code>READY</code> reader - Write ‘1’ to disable interrupt …\nField <code>READY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Write ‘1’ to disable interrupt for READY event\nBit 2 - Write ‘1’ to disable interrupt for READY event\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for READY event\nWrite ‘1’ to enable interrupt for READY event\nField <code>READY</code> reader - Write ‘1’ to enable interrupt for …\nField <code>READY</code> writer - Write ‘1’ to enable interrupt for …\n1: Enable\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 2 - Write ‘1’ to enable interrupt for READY event\nBit 2 - Write ‘1’ to enable interrupt for READY event\nEnable\nGet enumerated values variant\nMISO (rw) register accessor: an alias for <code>Reg&lt;MISO_SPEC&gt;</code>\nMOSI (rw) register accessor: an alias for <code>Reg&lt;MOSI_SPEC&gt;</code>\nRegister block\nSCK (rw) register accessor: an alias for <code>Reg&lt;SCK_SPEC&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin select for MISO signal\n0x08 - Pin select for MISO signal\nPin select for MOSI signal\n0x04 - Pin select for MOSI signal\nPin select for SCK\n0x00 - Pin select for SCK\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MISO signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MISO</code> reader\nRegister <code>MISO</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MOSI signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MOSI</code> reader\nRegister <code>MOSI</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SCK</code> reader\nPin select for SCK\nRegister <code>SCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nRegister <code>RXD</code> reader\nField <code>RXD</code> reader - RX data received. Double buffered\nRXD register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - RX data received. Double buffered\nRegister <code>TXD</code> reader\nField <code>TXD</code> reader - TX data to send. Double buffered\nTXD register\nField <code>TXD</code> writer - TX data to send. Double buffered\nRegister <code>TXD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - TX data to send. Double buffered\nBits 0:7 - TX data to send. Double buffered\nCONFIG (rw) register accessor: an alias for …\nCSNPOL (rw) register accessor: an alias for …\nDCXCNT (rw) register accessor: an alias for …\nENABLE (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_ENDRX (rw) register accessor: an alias for …\nEVENTS_ENDTX (rw) register accessor: an alias for …\nEVENTS_STARTED (rw) register accessor: an alias for …\nEVENTS_STOPPED (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nUnspecified\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nORC (rw) register accessor: an alias for <code>Reg&lt;ORC_SPEC&gt;</code>\nUnspecified\nPSELDCX (rw) register accessor: an alias for …\nRXD EasyDMA channel\nRegister block\nSHORTS (rw) register accessor: an alias for …\nSTALLSTAT (rw) register accessor: an alias for …\nTASKS_RESUME (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_SUSPEND (w) register accessor: an alias for …\nTXD EasyDMA channel\nConfiguration register\n0x554 - Configuration register\nPolarity of CSN output\n0x568 - Polarity of CSN output\nDCX configuration\n0x570 - DCX configuration\nEnable SPIM\n0x500 - Enable SPIM\nEnd of RXD buffer and TXD buffer reached\n0x118 - End of RXD buffer and TXD buffer reached\nEnd of RXD buffer reached\n0x110 - End of RXD buffer reached\nEnd of TXD buffer reached\n0x120 - End of TXD buffer reached\nTransaction started\n0x14c - Transaction started\nSPI transaction has stopped\n0x104 - SPI transaction has stopped\nSPI frequency. Accuracy depends on the HFCLK source …\n0x524 - SPI frequency. Accuracy depends on the HFCLK …\nReturns the argument unchanged.\nCluster Unspecified\n0x560..0x568 - Unspecified\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nByte transmitted after TXD.MAXCNT bytes have been …\n0x5c0 - Byte transmitted after TXD.MAXCNT bytes have been …\nCluster Unspecified\n0x508..0x518 - Unspecified\nPin select for DCX signal\n0x56c - Pin select for DCX signal\nCluster RXD EasyDMA channel\n0x534..0x544 - RXD EasyDMA channel\nShortcut register\n0x200 - Shortcut register\nStall status for EasyDMA RAM accesses. The fields in this …\n0x400 - Stall status for EasyDMA RAM accesses. The fields …\nResume SPI transaction\n0x20 - Resume SPI transaction\nStart SPI transaction\n0x10 - Start SPI transaction\nStop SPI transaction\n0x14 - Stop SPI transaction\nSuspend SPI transaction\n0x1c - Suspend SPI transaction\nCluster TXD EasyDMA channel\n0x544..0x554 - TXD EasyDMA channel\n0: Active high\n1: Active low\nConfiguration register\nSerial clock (SCK) phase\nField <code>CPHA</code> reader - Serial clock (SCK) phase\nField <code>CPHA</code> writer - Serial clock (SCK) phase\nSerial clock (SCK) polarity\nField <code>CPOL</code> reader - Serial clock (SCK) polarity\nField <code>CPOL</code> writer - Serial clock (SCK) polarity\n0: Sample on leading edge of clock, shift serial data on …\n1: Least significant bit shifted out first\n0: Most significant bit shifted out first\nBit order\nField <code>ORDER</code> reader - Bit order\nField <code>ORDER</code> writer - Bit order\nRegister <code>CONFIG</code> reader\n1: Sample on trailing edge of clock, shift serial data on …\nRegister <code>CONFIG</code> writer\nActive high\nActive low\nWrites raw bits to the register.\nBit 1 - Serial clock (SCK) phase\nBit 1 - Serial clock (SCK) phase\nBit 2 - Serial clock (SCK) polarity\nBit 2 - Serial clock (SCK) polarity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ACTIVE_HIGH</code>\nChecks if the value of the field is <code>ACTIVE_LOW</code>\nChecks if the value of the field is <code>LEADING</code>\nChecks if the value of the field is <code>LSB_FIRST</code>\nChecks if the value of the field is <code>MSB_FIRST</code>\nChecks if the value of the field is <code>TRAILING</code>\nSample on leading edge of clock, shift serial data on …\nLeast significant bit shifted out first\nMost significant bit shifted out first\nBit 0 - Bit order\nBit 0 - Bit order\nSample on trailing edge of clock, shift serial data on …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nPolarity of CSN output\nField <code>CSNPOL</code> reader - Polarity of CSN output\nPolarity of CSN output\nField <code>CSNPOL</code> writer - Polarity of CSN output\n1: Active high (idle state low)\n0: Active low (idle state high)\nRegister <code>CSNPOL</code> reader\nRegister <code>CSNPOL</code> writer\nWrites raw bits to the register.\nBit 0 - Polarity of CSN output\nBit 0 - Polarity of CSN output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nActive high (idle state low)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>LOW</code>\nActive low (idle state high)\nGet enumerated values variant\nField <code>DCXCNT</code> reader - This register specifies the number …\nDCX configuration\nField <code>DCXCNT</code> writer - This register specifies the number …\nRegister <code>DCXCNT</code> reader\nRegister <code>DCXCNT</code> writer\nWrites raw bits to the register.\nBits 0:3 - This register specifies the number of command …\nBits 0:3 - This register specifies the number of command …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Disable SPIM\n7: Enable SPIM\nEnable or disable SPIM\nField <code>ENABLE</code> reader - Enable or disable SPIM\nEnable SPIM\nField <code>ENABLE</code> writer - Enable or disable SPIM\nRegister <code>ENABLE</code> reader\nRegister <code>ENABLE</code> writer\nWrites raw bits to the register.\nDisable SPIM\nBits 0:3 - Enable or disable SPIM\nBits 0:3 - Enable or disable SPIM\nEnable SPIM\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nField <code>EVENTS_END</code> reader -\nEnd of RXD buffer and TXD buffer reached\nField <code>EVENTS_END</code> writer -\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ENDRX</code> reader -\nEnd of RXD buffer reached\nField <code>EVENTS_ENDRX</code> writer -\nRegister <code>EVENTS_ENDRX</code> reader\nRegister <code>EVENTS_ENDRX</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ENDTX</code> reader -\nEnd of TXD buffer reached\nField <code>EVENTS_ENDTX</code> writer -\nRegister <code>EVENTS_ENDTX</code> reader\nRegister <code>EVENTS_ENDTX</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_STARTED</code> reader -\nTransaction started\nField <code>EVENTS_STARTED</code> writer -\nRegister <code>EVENTS_STARTED</code> reader\nRegister <code>EVENTS_STARTED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_STOPPED</code> reader -\nSPI transaction has stopped\nField <code>EVENTS_STOPPED</code> writer -\nRegister <code>EVENTS_STOPPED</code> reader\nRegister <code>EVENTS_STOPPED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSPI master data rate\nField <code>FREQUENCY</code> reader - SPI master data rate\nSPI frequency. Accuracy depends on the HFCLK source …\nField <code>FREQUENCY</code> writer - SPI master data rate\n33554432: 125 kbps\n67108864: 250 kbps\n134217728: 500 kbps\n268435456: 1 Mbps\n167772160: 16 Mbps\n536870912: 2 Mbps\n335544320: 32 Mbps\n1073741824: 4 Mbps\n2147483648: 8 Mbps\nRegister <code>FREQUENCY</code> reader\nRegister <code>FREQUENCY</code> writer\nWrites raw bits to the register.\nBits 0:31 - SPI master data rate\nBits 0:31 - SPI master data rate\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>K125</code>\nChecks if the value of the field is <code>K250</code>\nChecks if the value of the field is <code>K500</code>\nChecks if the value of the field is <code>M1</code>\nChecks if the value of the field is <code>M16</code>\nChecks if the value of the field is <code>M2</code>\nChecks if the value of the field is <code>M32</code>\nChecks if the value of the field is <code>M4</code>\nChecks if the value of the field is <code>M8</code>\n125 kbps\n250 kbps\n500 kbps\n1 Mbps\n16 Mbps\n2 Mbps\n32 Mbps\n4 Mbps\n8 Mbps\nGet enumerated values variant\nCSNDUR (rw) register accessor: an alias for …\nRegister block\nRXDELAY (rw) register accessor: an alias for …\nMinimum duration between edge of CSN and edge of SCK and …\n0x04 - Minimum duration between edge of CSN and edge of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSample delay for input serial data on MISO\n0x00 - Sample delay for input serial data on MISO\nField <code>CSNDUR</code> reader - Minimum duration between edge of CSN …\nMinimum duration between edge of CSN and edge of SCK and …\nField <code>CSNDUR</code> writer - Minimum duration between edge of CSN …\nRegister <code>CSNDUR</code> reader\nRegister <code>CSNDUR</code> writer\nWrites raw bits to the register.\nBits 0:7 - Minimum duration between edge of CSN and edge …\nBits 0:7 - Minimum duration between edge of CSN and edge …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>RXDELAY</code> reader\nField <code>RXDELAY</code> reader - Sample delay for input serial data …\nSample delay for input serial data on MISO\nField <code>RXDELAY</code> writer - Sample delay for input serial data …\nRegister <code>RXDELAY</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Sample delay for input serial data on MISO. The …\nBits 0:2 - Sample delay for input serial data on MISO. The …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for ENDRX event\nWrite ‘1’ to disable interrupt for ENDRX event\nField <code>ENDRX</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDRX</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for ENDTX event\nWrite ‘1’ to disable interrupt for ENDTX event\nField <code>ENDTX</code> reader - Write ‘1’ to disable interrupt …\nField <code>ENDTX</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for END event\nWrite ‘1’ to disable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to disable interrupt for …\nField <code>END</code> writer - Write ‘1’ to disable interrupt for …\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for STARTED event\nWrite ‘1’ to disable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for STOPPED event\nWrite ‘1’ to disable interrupt for STOPPED event\nField <code>STOPPED</code> reader - Write ‘1’ to disable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 6 - Write ‘1’ to disable interrupt for END event\nBit 6 - Write ‘1’ to disable interrupt for END event\nBit 4 - Write ‘1’ to disable interrupt for ENDRX event\nBit 4 - Write ‘1’ to disable interrupt for ENDRX event\nBit 8 - Write ‘1’ to disable interrupt for ENDTX event\nBit 8 - Write ‘1’ to disable interrupt for ENDTX event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 19 - Write ‘1’ to disable interrupt for STARTED …\nBit 19 - Write ‘1’ to disable interrupt for STARTED …\nBit 1 - Write ‘1’ to disable interrupt for STOPPED …\nBit 1 - Write ‘1’ to disable interrupt for STOPPED …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for ENDRX event\nWrite ‘1’ to enable interrupt for ENDRX event\nField <code>ENDRX</code> reader - Write ‘1’ to enable interrupt for …\nField <code>ENDRX</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for ENDTX event\nWrite ‘1’ to enable interrupt for ENDTX event\nField <code>ENDTX</code> reader - Write ‘1’ to enable interrupt for …\nField <code>ENDTX</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for END event\nWrite ‘1’ to enable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to enable interrupt for …\nField <code>END</code> writer - Write ‘1’ to enable interrupt for …\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for STARTED event\nWrite ‘1’ to enable interrupt for STARTED event\nField <code>STARTED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STARTED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for STOPPED event\nWrite ‘1’ to enable interrupt for STOPPED event\nField <code>STOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>STOPPED</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nBit 6 - Write ‘1’ to enable interrupt for END event\nBit 6 - Write ‘1’ to enable interrupt for END event\nBit 4 - Write ‘1’ to enable interrupt for ENDRX event\nBit 4 - Write ‘1’ to enable interrupt for ENDRX event\nBit 8 - Write ‘1’ to enable interrupt for ENDTX event\nBit 8 - Write ‘1’ to enable interrupt for ENDTX event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 19 - Write ‘1’ to enable interrupt for STARTED …\nBit 19 - Write ‘1’ to enable interrupt for STARTED …\nBit 1 - Write ‘1’ to enable interrupt for STOPPED event\nBit 1 - Write ‘1’ to enable interrupt for STOPPED event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>ORC</code> reader - Byte transmitted after TXD.MAXCNT bytes …\nByte transmitted after TXD.MAXCNT bytes have been …\nField <code>ORC</code> writer - Byte transmitted after TXD.MAXCNT bytes …\nRegister <code>ORC</code> reader\nRegister <code>ORC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Byte transmitted after TXD.MAXCNT bytes have …\nBits 0:7 - Byte transmitted after TXD.MAXCNT bytes have …\nCSN (rw) register accessor: an alias for <code>Reg&lt;CSN_SPEC&gt;</code>\nMISO (rw) register accessor: an alias for <code>Reg&lt;MISO_SPEC&gt;</code>\nMOSI (rw) register accessor: an alias for <code>Reg&lt;MOSI_SPEC&gt;</code>\nRegister block\nSCK (rw) register accessor: an alias for <code>Reg&lt;SCK_SPEC&gt;</code>\nPin select for CSN\n0x0c - Pin select for CSN\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPin select for MISO signal\n0x08 - Pin select for MISO signal\nPin select for MOSI signal\n0x04 - Pin select for MOSI signal\nPin select for SCK\n0x00 - Pin select for SCK\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\nPin select for CSN\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>CSN</code> reader\nRegister <code>CSN</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MISO signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MISO</code> reader\nRegister <code>MISO</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nPin select for MOSI signal\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>MOSI</code> reader\nRegister <code>MOSI</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nRegister <code>SCK</code> reader\nPin select for SCK\nRegister <code>SCK</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\n0: Connect\nConnection\nField <code>CONNECT</code> reader - Connection\nField <code>CONNECT</code> writer - Connection\n1: Disconnect\nField <code>PIN</code> reader - Pin number\nField <code>PIN</code> writer - Pin number\nField <code>PORT</code> reader - Port number\nField <code>PORT</code> writer - Port number\nPin select for DCX signal\nRegister <code>PSELDCX</code> reader\nRegister <code>PSELDCX</code> writer\nWrites raw bits to the register.\nBit 31 - Connection\nBit 31 - Connection\nConnect\nDisconnect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CONNECTED</code>\nChecks if the value of the field is <code>DISCONNECTED</code>\nBits 0:4 - Pin number\nBits 0:4 - Pin number\nBit 5 - Port number\nBit 5 - Port number\nGet enumerated values variant\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nLIST (rw) register accessor: an alias for <code>Reg&lt;LIST_SPEC&gt;</code>\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEasyDMA list type\n0x0c - EasyDMA list type\nMaximum number of bytes in receive buffer\n0x04 - Maximum number of bytes in receive buffer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:15 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1: Use array list\n0: Disable EasyDMA list\nList type\nField <code>LIST</code> reader - List type\nEasyDMA list type\nField <code>LIST</code> writer - List type\nRegister <code>LIST</code> reader\nRegister <code>LIST</code> writer\nUse array list\nWrites raw bits to the register.\nDisable EasyDMA list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ARRAY_LIST</code>\nChecks if the value of the field is <code>DISABLED</code>\nBits 0:1 - List type\nBits 0:1 - List type\nGet enumerated values variant\nField <code>MAXCNT</code> reader - Maximum number of bytes in receive …\nMaximum number of bytes in receive buffer\nField <code>MAXCNT</code> writer - Maximum number of bytes in receive …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Maximum number of bytes in receive buffer\nBits 0:15 - Maximum number of bytes in receive buffer\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\n0: Disable shortcut\n1: Enable shortcut\nShortcut between END event and START task\nField <code>END_START</code> reader - Shortcut between END event and …\nField <code>END_START</code> writer - Shortcut between END event and …\nRegister <code>SHORTS</code> reader\nShortcut register\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nEnable shortcut\nBit 17 - Shortcut between END event and START task\nBit 17 - Shortcut between END event and START task\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\n0: No stall\n0: No stall\nRegister <code>STALLSTAT</code> reader\nStall status for EasyDMA RAM writes\nField <code>RX</code> reader - Stall status for EasyDMA RAM writes\nField <code>RX</code> writer - Stall status for EasyDMA RAM writes\n1: A stall has occurred\n1: A stall has occurred\nStall status for EasyDMA RAM accesses. The fields in this …\nStall status for EasyDMA RAM reads\nField <code>TX</code> reader - Stall status for EasyDMA RAM reads\nField <code>TX</code> writer - Stall status for EasyDMA RAM reads\nRegister <code>STALLSTAT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>NOSTALL</code>\nChecks if the value of the field is <code>NOSTALL</code>\nChecks if the value of the field is <code>STALL</code>\nChecks if the value of the field is <code>STALL</code>\nNo stall\nNo stall\nBit 1 - Stall status for EasyDMA RAM writes\nBit 1 - Stall status for EasyDMA RAM writes\nA stall has occurred\nA stall has occurred\nBit 0 - Stall status for EasyDMA RAM reads\nBit 0 - Stall status for EasyDMA RAM reads\nGet enumerated values variant\nGet enumerated values variant\nResume SPI transaction\nField <code>TASKS_RESUME</code> writer -\nRegister <code>TASKS_RESUME</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart SPI transaction\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop SPI transaction\nField <code>TASKS_STOP</code> writer -\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nSuspend SPI transaction\nField <code>TASKS_SUSPEND</code> writer -\nRegister <code>TASKS_SUSPEND</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nAMOUNT (r) register accessor: an alias for <code>Reg&lt;AMOUNT_SPEC&gt;</code>\nLIST (rw) register accessor: an alias for <code>Reg&lt;LIST_SPEC&gt;</code>\nMAXCNT (rw) register accessor: an alias for …\nPTR (rw) register accessor: an alias for <code>Reg&lt;PTR_SPEC&gt;</code>\nRegister block\nNumber of bytes transferred in the last transaction\n0x08 - Number of bytes transferred in the last transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEasyDMA list type\n0x0c - EasyDMA list type\nNumber of bytes in transmit buffer\n0x04 - Number of bytes in transmit buffer\nData pointer\n0x00 - Data pointer\nField <code>AMOUNT</code> reader - Number of bytes transferred in the …\nNumber of bytes transferred in the last transaction\nRegister <code>AMOUNT</code> reader\nBits 0:15 - Number of bytes transferred in the last …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1: Use array list\n0: Disable EasyDMA list\nList type\nField <code>LIST</code> reader - List type\nEasyDMA list type\nField <code>LIST</code> writer - List type\nRegister <code>LIST</code> reader\nRegister <code>LIST</code> writer\nUse array list\nWrites raw bits to the register.\nDisable EasyDMA list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>ARRAY_LIST</code>\nChecks if the value of the field is <code>DISABLED</code>\nBits 0:1 - List type\nBits 0:1 - List type\nGet enumerated values variant\nField <code>MAXCNT</code> reader - Maximum number of bytes in transmit …\nNumber of bytes in transmit buffer\nField <code>MAXCNT</code> writer - Maximum number of bytes in transmit …\nRegister <code>MAXCNT</code> reader\nRegister <code>MAXCNT</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Maximum number of bytes in transmit buffer\nBits 0:15 - Maximum number of bytes in transmit buffer\nField <code>PTR</code> reader - Data pointer\nData pointer\nField <code>PTR</code> writer - Data pointer\nRegister <code>PTR</code> reader\nRegister <code>PTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Data pointer\nBits 0:31 - Data pointer\nCONFIG (rw) register accessor: an alias for …\nDEF (rw) register accessor: an alias for <code>Reg&lt;DEF_SPEC&gt;</code>\nENABLE (rw) register accessor: an alias for …\nEVENTS_ACQUIRED (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_ENDRX (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nORC (rw) register accessor: an alias for <code>Reg&lt;ORC_SPEC&gt;</code>\nUnspecified\nUnspecified\nRegister block\nSEMSTAT (r) register accessor: an alias for …\nSHORTS (rw) register accessor: an alias for …\nSTATUS (rw) register accessor: an alias for …\nTASKS_ACQUIRE (w) register accessor: an alias for …\nTASKS_RELEASE (w) register accessor: an alias for …\nUnspecified\nConfiguration register\n0x554 - Configuration register\nDefault character. Character clocked out in case of an …\n0x55c - Default character. Character clocked out in case …\nEnable SPI slave\n0x500 - Enable SPI slave\nSemaphore acquired\n0x128 - Semaphore acquired\nGranted transaction completed\n0x104 - Granted transaction completed\nEnd of RXD buffer reached\n0x110 - End of RXD buffer reached\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nOver-read character\n0x5c0 - Over-read character\nCluster Unspecified\n0x508..0x518 - Unspecified\nCluster Unspecified\n0x534..0x540 - Unspecified\nSemaphore status register\n0x400 - Semaphore status register\nShortcut register\n0x200 - Shortcut register\nStatus from last transaction\n0x440 - Status from last transaction\nAcquire SPI semaphore\n0x24 - Acquire SPI semaphore\nRelease SPI semaphore, enabling the SPI slave to acquire it\n0x28 - Release SPI semaphore, enabling the SPI slave to …\nCluster Unspecified\n0x544..0x550 - Unspecified\n0: Active high\n1: Active low\nConfiguration register\nSerial clock (SCK) phase\nField <code>CPHA</code> reader - Serial clock (SCK) phase\nField <code>CPHA</code> writer - Serial clock (SCK) phase\nSerial clock (SCK) polarity\nField <code>CPOL</code> reader - Serial clock (SCK) polarity")