[package]
authors = [
  "The Real-Time Interrupt-driven Concurrency developers",
  "Emil Fresk <emil.fresk@gmail.com>",
  "Henrik Tj√§der <henrik@tjaders.com>",
  "Jorge Aparicio <jorge@japaric.io>",
  "Per Lindgren <per.lindgren@ltu.se>",
]
categories = ["concurrency", "embedded", "no-std", "asynchronous"]
description = "Real-Time Interrupt-driven Concurrency (RTIC): a concurrency framework for building real-time systems"
documentation = "https://rtic.rs/"
edition = "2021"
keywords = ["embedded", "async", "runtime", "no-std", "rtos"]
license = "MIT OR Apache-2.0"
name = "rtic"
readme = "../README.md"
repository = "https://github.com/rtic-rs/rtic"

version = "2.1.1"

[package.metadata.docs.rs]
features = ["rtic-macros/test-template"]

[lib]
name = "rtic"

[dependencies]
riscv-slic = { version = "0.1.1", optional = true }
esp32c3 = { version = "0.21.0", optional = true }
riscv = { version = "0.11.0", optional = true }
cortex-m = { version = "0.7.0", optional = true }
bare-metal = "1.0.0"
# portable-atomic = { version = "0.3.19" }
atomic-polyfill = "1"
rtic-macros = { path = "../rtic-macros", version = "=2.1.0" }
rtic-core = "1"
critical-section = "1"

[dev-dependencies]
lm3s6965 = "0.2"
cortex-m-semihosting = "0.5.0"

[dev-dependencies.futures]
version = "0.3.26"
default-features = false
features = ["async-await"]

[dev-dependencies.panic-semihosting]
features = ["exit"]
version = "0.6.0"

[target.x86_64-unknown-linux-gnu.dev-dependencies]
trybuild = "1"

[features]
default = []
thumbv6-backend = ["cortex-m", "rtic-macros/cortex-m-source-masking"]
thumbv7-backend = ["cortex-m", "rtic-macros/cortex-m-basepri"]
thumbv8base-backend = ["cortex-m", "rtic-macros/cortex-m-source-masking"]
thumbv8main-backend = ["cortex-m", "rtic-macros/cortex-m-basepri"]
# riscv-clic-backend = ["rtic-macros/riscv-clic"]
# riscv-ch32-backend = ["rtic-macros/riscv-ch32"]
riscv-esp32c3-backend = ["esp32c3", "riscv", "rtic-macros/riscv-esp32c3"]
riscv-clint-backend = [
  "riscv",
  "riscv-slic/clint-backend",
  "rtic-macros/riscv-slic",
]

# needed for testing
test-critical-section = ["cortex-m/critical-section-single-core"]
