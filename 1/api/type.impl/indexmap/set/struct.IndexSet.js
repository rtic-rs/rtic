(function() {
    var type_impls = Object.fromEntries([["rtic_syntax",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#71-74\">Source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#76\">Source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#82\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#113-115\">Source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#117\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#953-955\">Source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#958\">Source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <code>IndexSet</code></p>\n</div></details></div></details>","Default","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#942-945\">Source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#947\">Source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#931-934\">Source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#936\">Source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#913-915\">Source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#926\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span>set1 = IndexSet::from([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>set2: IndexSet&lt;<span class=\"kw\">_</span>&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>].into();\n<span class=\"macro\">assert_eq!</span>(set1, set2);</code></pre></div>\n</div></details></div></details>","From<[T; N]>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#899-902\">Source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#904\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#752\">Source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3><div class=\"docblock\"><p>Access <code>IndexSet</code> values at indexed positions.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">โ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#758\">Source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#753\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#128\">Source</a><a href=\"#impl-IndexSet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#130\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set. (Does not allocate.)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#140\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#147\">Source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#152\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#162\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#169\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#174\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the setโs <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#181\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#188\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#202\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#209\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the setโs current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#226-228\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'_, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <code>RangeBounds&lt;usize&gt;</code>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#242-244\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details></div></details>",0,"rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#252-255\">Source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#260\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#267\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#274\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#286\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#299\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#315-317\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#330-335\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#345-347\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;'a, S2&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;,\n) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S2&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#359-361\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;'a, S2&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;<div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#371-373\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#382-384\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#390-392\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#398-400\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#410\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#419\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#438-440\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <code>.swap_remove(value)</code>, if you want\nto preserve the order of the values in the set, use <code>.shift_remove(value)</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#454-456\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#470-472\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#485-487\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <code>.swap_take(value)</code>, if you need to\npreserve the order of the values in the set, use <code>.shift_take(value)</code>\ninstead.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#502-504\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#519-521\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#533-535\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#547-549\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"indexmap/equivalent/trait.Equivalent.html\" title=\"trait indexmap::equivalent::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#559\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#570-572\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#580-582\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the setโs values by their default ordering.</p>\n<p>See <a href=\"indexmap/set/struct.IndexSet.html#method.sort_by\" title=\"method indexmap::set::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#590-592\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the setโs values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#601-603\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#615-617\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the setโs values by their default ordering.</p>\n<p>See <a href=\"indexmap/set/struct.IndexSet.html#method.sort_unstable_by\" title=\"method indexmap::set::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#625-627\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the setโs values in place using the comparison funtion <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#634-636\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#648\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the setโs values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details></div></details>",0,"rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#653\">Source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#659\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#666\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#673\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#686\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#699\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#712\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#719\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n</div></details></div></details>",0,"rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#983-986\">Source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#989-991\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#1001-1003\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#1009-1011\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexmap/set/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#888\">Source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#889\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#890\">Source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#892\">Source</a><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#965-969\">Source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#971\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexmap/set.rs.html#976-979\">Source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","rtic_syntax::analyze::UsedSharedResource","rtic_syntax::analyze::UsedLocalResource","rtic_syntax::Set"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[89539]}