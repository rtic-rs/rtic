searchState.loadedDescShard("rtic_common", 0, "Utility structs that can be useful to other subcrates.\nA drop implementation runner.\nA wait queue implementation using a doubly linked list.\nWaker registration utility.\nRuns a closure on drop.\nMake it not run drop.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMake a new droppper given a closure.\nAn atomic, doubly linked, FIFO list for a wait queue.\nA link in the linked list.\nA helper definition of a wait queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the queue is empty.\nReturn true if this link has been poped from the list.\nCreate a new linked list.\nCreate a new link.\nPop the first element in the queue.\nPut an element at the back of the queue.\nRemove this link from a linked list.\nWait until <code>f</code> returns <code>Some</code>.\nA critical section based waker handler.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new waker registration.\nRegister a waker. This will overwrite the previous waker â€¦\nWake the waker.")