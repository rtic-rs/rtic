searchState.loadedDescShard("nrf52840_pac", 7, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DST</code> reader - Word-aligned flash destination address.\nFlash destination address\nField <code>DST</code> writer - Word-aligned flash destination address.\nRegister <code>DST</code> reader\nRegister <code>DST</code> writer\nWrites raw bits to the register.\nBits 0:31 - Word-aligned flash destination address.\nBits 0:31 - Word-aligned flash destination address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>SRC</code> reader\nField <code>SRC</code> reader - Word-aligned RAM source address.\nRAM source address\nField <code>SRC</code> writer - Word-aligned RAM source address.\nRegister <code>SRC</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Word-aligned RAM source address.\nBits 0:31 - Word-aligned RAM source address.\nRegister <code>XIPOFFSET</code> reader\nRegister <code>XIPOFFSET</code> writer\nField <code>XIPOFFSET</code> reader - Address offset into the external …\nAddress offset into the external memory for Execute in …\nField <code>XIPOFFSET</code> writer - Address offset into the external …\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Address offset into the external memory for …\nBits 0:31 - Address offset into the external memory for …\nBASE0 (rw) register accessor: an alias for <code>Reg&lt;BASE0_SPEC&gt;</code>\nBASE1 (rw) register accessor: an alias for <code>Reg&lt;BASE1_SPEC&gt;</code>\nBCC (rw) register accessor: an alias for <code>Reg&lt;BCC_SPEC&gt;</code>\nCCACTRL (rw) register accessor: an alias for …\nCRCCNF (rw) register accessor: an alias for …\nCRCINIT (rw) register accessor: an alias for …\nCRCPOLY (rw) register accessor: an alias for …\nCRCSTATUS (r) register accessor: an alias for …\nDAB (rw) register accessor: an alias for <code>Reg&lt;DAB_SPEC&gt;</code>\nDACNF (rw) register accessor: an alias for <code>Reg&lt;DACNF_SPEC&gt;</code>\nDAI (r) register accessor: an alias for <code>Reg&lt;DAI_SPEC&gt;</code>\nDAP (rw) register accessor: an alias for <code>Reg&lt;DAP_SPEC&gt;</code>\nDATAWHITEIV (rw) register accessor: an alias for …\nEDCNT (rw) register accessor: an alias for <code>Reg&lt;EDCNT_SPEC&gt;</code>\nEDSAMPLE (rw) register accessor: an alias for …\nEVENTS_ADDRESS (rw) register accessor: an alias for …\nEVENTS_BCMATCH (rw) register accessor: an alias for …\nEVENTS_CCABUSY (rw) register accessor: an alias for …\nEVENTS_CCAIDLE (rw) register accessor: an alias for …\nEVENTS_CCASTOPPED (rw) register accessor: an alias for …\nEVENTS_CRCERROR (rw) register accessor: an alias for …\nEVENTS_CRCOK (rw) register accessor: an alias for …\nEVENTS_DEVMATCH (rw) register accessor: an alias for …\nEVENTS_DEVMISS (rw) register accessor: an alias for …\nEVENTS_DISABLED (rw) register accessor: an alias for …\nEVENTS_EDEND (rw) register accessor: an alias for …\nEVENTS_EDSTOPPED (rw) register accessor: an alias for …\nEVENTS_END (rw) register accessor: an alias for …\nEVENTS_FRAMESTART (rw) register accessor: an alias for …\nEVENTS_MHRMATCH (rw) register accessor: an alias for …\nEVENTS_PAYLOAD (rw) register accessor: an alias for …\nEVENTS_PHYEND (rw) register accessor: an alias for …\nEVENTS_RATEBOOST (rw) register accessor: an alias for …\nEVENTS_READY (rw) register accessor: an alias for …\nEVENTS_RSSIEND (rw) register accessor: an alias for …\nEVENTS_RXREADY (rw) register accessor: an alias for …\nEVENTS_TXREADY (rw) register accessor: an alias for …\nFREQUENCY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nMHRMATCHCONF (rw) register accessor: an alias for …\nMHRMATCHMAS (rw) register accessor: an alias for …\nMODE (rw) register accessor: an alias for <code>Reg&lt;MODE_SPEC&gt;</code>\nMODECNF0 (rw) register accessor: an alias for …\nPACKETPTR (rw) register accessor: an alias for …\nPCNF0 (rw) register accessor: an alias for <code>Reg&lt;PCNF0_SPEC&gt;</code>\nPCNF1 (rw) register accessor: an alias for <code>Reg&lt;PCNF1_SPEC&gt;</code>\nPDUSTAT (r) register accessor: an alias for …\nPOWER (rw) register accessor: an alias for <code>Reg&lt;POWER_SPEC&gt;</code>\nPREFIX0 (rw) register accessor: an alias for …\nPREFIX1 (rw) register accessor: an alias for …\nRSSISAMPLE (r) register accessor: an alias for …\nRXADDRESSES (rw) register accessor: an alias for …\nRXCRC (r) register accessor: an alias for <code>Reg&lt;RXCRC_SPEC&gt;</code>\nRXMATCH (r) register accessor: an alias for …\nRegister block\nSFD (rw) register accessor: an alias for <code>Reg&lt;SFD_SPEC&gt;</code>\nSHORTS (rw) register accessor: an alias for …\nSTATE (r) register accessor: an alias for <code>Reg&lt;STATE_SPEC&gt;</code>\nTASKS_BCSTART (w) register accessor: an alias for …\nTASKS_BCSTOP (w) register accessor: an alias for …\nTASKS_CCASTART (w) register accessor: an alias for …\nTASKS_CCASTOP (w) register accessor: an alias for …\nTASKS_DISABLE (w) register accessor: an alias for …\nTASKS_EDSTART (w) register accessor: an alias for …\nTASKS_EDSTOP (w) register accessor: an alias for …\nTASKS_RSSISTART (w) register accessor: an alias for …\nTASKS_RSSISTOP (w) register accessor: an alias for …\nTASKS_RXEN (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_TXEN (w) register accessor: an alias for …\nTIFS (rw) register accessor: an alias for <code>Reg&lt;TIFS_SPEC&gt;</code>\nTXADDRESS (rw) register accessor: an alias for …\nTXPOWER (rw) register accessor: an alias for …\nBase address 0\n0x51c - Base address 0\nBase address 1\n0x520 - Base address 1\nBit counter compare\n0x560 - Bit counter compare\nIEEE 802.15.4 clear channel assessment control\n0x66c - IEEE 802.15.4 clear channel assessment control\nCRC configuration\n0x534 - CRC configuration\nCRC initial value\n0x53c - CRC initial value\nCRC polynomial\n0x538 - CRC polynomial\nCRC status\n0x400 - CRC status\nDescription collection[n]: Device address base segment n\n0x600..0x620 - Description collection[n]: Device address …\nDevice address match configuration\n0x640 - Device address match configuration\nDevice address match index\n0x410 - Device address match index\nDescription collection[n]: Device address prefix n\n0x620..0x640 - Description collection[n]: Device address …\nData whitening initial value\n0x554 - Data whitening initial value\nIEEE 802.15.4 energy detect loop count\n0x664 - IEEE 802.15.4 energy detect loop count\nIEEE 802.15.4 energy detect level\n0x668 - IEEE 802.15.4 energy detect level\nAddress sent or received\n0x104 - Address sent or received\nBit counter reached bit count value\n0x128 - Bit counter reached bit count value\nWireless medium busy - do not send\n0x148 - Wireless medium busy - do not send\nWireless medium in idle - clear to send\n0x144 - Wireless medium in idle - clear to send\nThe CCA has stopped\n0x14c - The CCA has stopped\nPacket received with CRC error\n0x134 - Packet received with CRC error\nPacket received with CRC ok\n0x130 - Packet received with CRC ok\nA device address match occurred on the last received packet\n0x114 - A device address match occurred on the last …\nNo device address match occurred on the last received …\n0x118 - No device address match occurred on the last …\nRADIO has been disabled\n0x110 - RADIO has been disabled\nSampling of energy detection complete. A new ED sample is …\n0x13c - Sampling of energy detection complete. A new ED …\nThe sampling of energy detection has stopped\n0x140 - The sampling of energy detection has stopped\nPacket sent or received\n0x10c - Packet sent or received\nIEEE 802.15.4 length field received\n0x138 - IEEE 802.15.4 length field received\nMAC header match found\n0x15c - MAC header match found\nPacket payload sent or received\n0x108 - Packet payload sent or received\nGenerated in Ble_LR125Kbit, Ble_LR500Kbit and …\n0x16c - Generated in Ble_LR125Kbit, Ble_LR500Kbit and …\nBle_LR CI field received, receive mode is changed from …\n0x150 - Ble_LR CI field received, receive mode is changed …\nRADIO has ramped up and is ready to be started\n0x100 - RADIO has ramped up and is ready to be started\nSampling of receive signal strength complete\n0x11c - Sampling of receive signal strength complete\nRADIO has ramped up and is ready to be started RX path\n0x158 - RADIO has ramped up and is ready to be started RX …\nRADIO has ramped up and is ready to be started TX path\n0x154 - RADIO has ramped up and is ready to be started TX …\nFrequency\n0x508 - Frequency\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nSearch pattern configuration\n0x644 - Search pattern configuration\nPattern mask\n0x648 - Pattern mask\nData rate and modulation\n0x510 - Data rate and modulation\nRadio mode configuration register 0\n0x650 - Radio mode configuration register 0\nPacket pointer\n0x504 - Packet pointer\nPacket configuration register 0\n0x514 - Packet configuration register 0\nPacket configuration register 1\n0x518 - Packet configuration register 1\nPayload status\n0x414 - Payload status\nPeripheral power control\n0xffc - Peripheral power control\nPrefixes bytes for logical addresses 0-3\n0x524 - Prefixes bytes for logical addresses 0-3\nPrefixes bytes for logical addresses 4-7\n0x528 - Prefixes bytes for logical addresses 4-7\nRSSI sample\n0x548 - RSSI sample\nReceive address select\n0x530 - Receive address select\nCRC field of previously received packet\n0x40c - CRC field of previously received packet\nReceived address\n0x408 - Received address\nIEEE 802.15.4 start of frame delimiter\n0x660 - IEEE 802.15.4 start of frame delimiter\nShortcut register\n0x200 - Shortcut register\nCurrent radio state\n0x550 - Current radio state\nStart the bit counter\n0x1c - Start the bit counter\nStop the bit counter\n0x20 - Stop the bit counter\nStart the clear channel assessment used in IEEE 802.15.4 …\n0x2c - Start the clear channel assessment used in IEEE …\nStop the clear channel assessment\n0x30 - Stop the clear channel assessment\nDisable RADIO\n0x10 - Disable RADIO\nStart the energy detect measurement used in IEEE 802.15.4 …\n0x24 - Start the energy detect measurement used in IEEE …\nStop the energy detect measurement\n0x28 - Stop the energy detect measurement\nStart the RSSI and take one single sample of the receive …\n0x14 - Start the RSSI and take one single sample of the …\nStop the RSSI measurement\n0x18 - Stop the RSSI measurement\nEnable RADIO in RX mode\n0x04 - Enable RADIO in RX mode\nStart RADIO\n0x08 - Start RADIO\nStop RADIO\n0x0c - Stop RADIO\nEnable RADIO in TX mode\n0x00 - Enable RADIO in TX mode\nInterframe spacing in us\n0x544 - Interframe spacing in us\nTransmit address select\n0x52c - Transmit address select\nOutput power\n0x50c - Output power\nField <code>BASE0</code> reader - Base address 0\nBase address 0\nField <code>BASE0</code> writer - Base address 0\nRegister <code>BASE0</code> reader\nRegister <code>BASE0</code> writer\nBits 0:31 - Base address 0\nBits 0:31 - Base address 0\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BASE1</code> reader - Base address 1\nBase address 1\nField <code>BASE1</code> writer - Base address 1\nRegister <code>BASE1</code> reader\nRegister <code>BASE1</code> writer\nBits 0:31 - Base address 1\nBits 0:31 - Base address 1\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>BCC</code> reader - Bit counter compare\nBit counter compare\nField <code>BCC</code> writer - Bit counter compare\nRegister <code>BCC</code> reader\nRegister <code>BCC</code> writer\nBits 0:31 - Bit counter compare\nBits 0:31 - Bit counter compare\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n2: Energy above threshold AND carrier seen\n1: Carrier seen\n3: Energy above threshold OR carrier seen\nField <code>CCACORRCNT</code> reader - Limit for occurances above …\nField <code>CCACORRCNT</code> writer - Limit for occurances above …\nField <code>CCACORRTHRES</code> reader - CCA correlator busy threshold. …\nField <code>CCACORRTHRES</code> writer - CCA correlator busy threshold. …\nIEEE 802.15.4 clear channel assessment control\nField <code>CCAEDTHRES</code> reader - CCA energy busy threshold. Used …\nField <code>CCAEDTHRES</code> writer - CCA energy busy threshold. Used …\nCCA mode of operation\nField <code>CCAMODE</code> reader - CCA mode of operation\nField <code>CCAMODE</code> writer - CCA mode of operation\n0: Energy above threshold\n4: Energy above threshold test mode that will abort when …\nRegister <code>CCACTRL</code> reader\nRegister <code>CCACTRL</code> writer\nWrites raw bits to the register.\nEnergy above threshold AND carrier seen\nCarrier seen\nEnergy above threshold OR carrier seen\nBits 24:31 - Limit for occurances above CCACORRTHRES. When …\nBits 24:31 - Limit for occurances above CCACORRTHRES. When …\nBits 16:23 - CCA correlator busy threshold. Only relevant …\nBits 16:23 - CCA correlator busy threshold. Only relevant …\nBits 8:15 - CCA energy busy threshold. Used in all the CCA …\nBits 8:15 - CCA energy busy threshold. Used in all the CCA …\nBits 0:2 - CCA mode of operation\nBits 0:2 - CCA mode of operation\nEnergy above threshold\nEnergy above threshold test mode that will abort when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CARRIER_AND_ED_MODE</code>\nChecks if the value of the field is <code>CARRIER_MODE</code>\nChecks if the value of the field is <code>CARRIER_OR_ED_MODE</code>\nChecks if the value of the field is <code>ED_MODE</code>\nChecks if the value of the field is <code>ED_MODE_TEST1</code>\nGet enumerated values variant\nCRC configuration\n0: CRC length is zero and CRC calculation is disabled\n2: CRC calculation as per 802.15.4 standard. Starting at …\n0: CRC calculation includes address field\nCRC length in number of bytes.\nField <code>LEN</code> reader - CRC length in number of bytes.\nField <code>LEN</code> writer - CRC length in number of bytes.\n1: CRC length is one byte and CRC calculation is enabled\nRegister <code>CRCCNF</code> reader\n1: CRC calculation does not include address field. The CRC …\nInclude or exclude packet address field out of CRC …\nField <code>SKIPADDR</code> reader - Include or exclude packet address …\nField <code>SKIPADDR</code> writer - Include or exclude packet address …\n3: CRC length is three bytes and CRC calculation is enabled\n2: CRC length is two bytes and CRC calculation is enabled\nRegister <code>CRCCNF</code> writer\nWrites raw bits to the register.\nCRC length is zero and CRC calculation is disabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCRC calculation as per 802.15.4 standard. Starting at …\nCRC calculation includes address field\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>IEEE802154</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>ONE</code>\nChecks if the value of the field is <code>SKIP</code>\nChecks if the value of the field is <code>THREE</code>\nChecks if the value of the field is <code>TWO</code>\nBits 0:1 - CRC length in number of bytes.\nBits 0:1 - CRC length in number of bytes.\nCRC length is one byte and CRC calculation is enabled\nCRC calculation does not include address field. The CRC …\nBits 8:9 - Include or exclude packet address field out of …\nBits 8:9 - Include or exclude packet address field out of …\nCRC length is three bytes and CRC calculation is enabled\nCRC length is two bytes and CRC calculation is enabled\nGet enumerated values variant\nGet enumerated values variant\nField <code>CRCINIT</code> reader - CRC initial value\nCRC initial value\nField <code>CRCINIT</code> writer - CRC initial value\nRegister <code>CRCINIT</code> reader\nRegister <code>CRCINIT</code> writer\nWrites raw bits to the register.\nBits 0:23 - CRC initial value\nBits 0:23 - CRC initial value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>CRCPOLY</code> reader - CRC polynomial\nCRC polynomial\nField <code>CRCPOLY</code> writer - CRC polynomial\nRegister <code>CRCPOLY</code> reader\nRegister <code>CRCPOLY</code> writer\nWrites raw bits to the register.\nBits 0:23 - CRC polynomial\nBits 0:23 - CRC polynomial\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Packet received with CRC error\n1: Packet received with CRC ok\nCRC status of packet received\nField <code>CRCSTATUS</code> reader - CRC status of packet received\nCRC status\nRegister <code>CRCSTATUS</code> reader\nBit 0 - CRC status of packet received\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>CRCERROR</code>\nChecks if the value of the field is <code>CRCOK</code>\nGet enumerated values variant\nField <code>DAB</code> reader - Device address base segment n\nDescription collection[n]: Device address base segment n\nField <code>DAB</code> writer - Device address base segment n\nRegister <code>DAB[%s]</code> reader\nRegister <code>DAB[%s]</code> writer\nWrites raw bits to the register.\nBits 0:31 - Device address base segment n\nBits 0:31 - Device address base segment n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevice address match configuration\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\n0: Disabled\nEnable or disable device address matching using device …\nField <code>ENA0</code> reader - Enable or disable device address …\nField <code>ENA0</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA1</code> reader - Enable or disable device address …\nField <code>ENA1</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA2</code> reader - Enable or disable device address …\nField <code>ENA2</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA3</code> reader - Enable or disable device address …\nField <code>ENA3</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA4</code> reader - Enable or disable device address …\nField <code>ENA4</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA5</code> reader - Enable or disable device address …\nField <code>ENA5</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA6</code> reader - Enable or disable device address …\nField <code>ENA6</code> writer - Enable or disable device address …\nEnable or disable device address matching using device …\nField <code>ENA7</code> reader - Enable or disable device address …\nField <code>ENA7</code> writer - Enable or disable device address …\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\nRegister <code>DACNF</code> reader\nField <code>TXADD0</code> reader - TxAdd for device address 0\nField <code>TXADD0</code> writer - TxAdd for device address 0\nField <code>TXADD1</code> reader - TxAdd for device address 1\nField <code>TXADD1</code> writer - TxAdd for device address 1\nField <code>TXADD2</code> reader - TxAdd for device address 2\nField <code>TXADD2</code> writer - TxAdd for device address 2\nField <code>TXADD3</code> reader - TxAdd for device address 3\nField <code>TXADD3</code> writer - TxAdd for device address 3\nField <code>TXADD4</code> reader - TxAdd for device address 4\nField <code>TXADD4</code> writer - TxAdd for device address 4\nField <code>TXADD5</code> reader - TxAdd for device address 5\nField <code>TXADD5</code> writer - TxAdd for device address 5\nField <code>TXADD6</code> reader - TxAdd for device address 6\nField <code>TXADD6</code> writer - TxAdd for device address 6\nField <code>TXADD7</code> reader - TxAdd for device address 7\nField <code>TXADD7</code> writer - TxAdd for device address 7\nRegister <code>DACNF</code> writer\nWrites raw bits to the register.\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nDisabled\nBit 0 - Enable or disable device address matching using …\nBit 0 - Enable or disable device address matching using …\nBit 1 - Enable or disable device address matching using …\nBit 1 - Enable or disable device address matching using …\nBit 2 - Enable or disable device address matching using …\nBit 2 - Enable or disable device address matching using …\nBit 3 - Enable or disable device address matching using …\nBit 3 - Enable or disable device address matching using …\nBit 4 - Enable or disable device address matching using …\nBit 4 - Enable or disable device address matching using …\nBit 5 - Enable or disable device address matching using …\nBit 5 - Enable or disable device address matching using …\nBit 6 - Enable or disable device address matching using …\nBit 6 - Enable or disable device address matching using …\nBit 7 - Enable or disable device address matching using …\nBit 7 - Enable or disable device address matching using …\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 8 - TxAdd for device address 0\nBit 8 - TxAdd for device address 0\nBit 9 - TxAdd for device address 1\nBit 9 - TxAdd for device address 1\nBit 10 - TxAdd for device address 2\nBit 10 - TxAdd for device address 2\nBit 11 - TxAdd for device address 3\nBit 11 - TxAdd for device address 3\nBit 12 - TxAdd for device address 4\nBit 12 - TxAdd for device address 4\nBit 13 - TxAdd for device address 5\nBit 13 - TxAdd for device address 5\nBit 14 - TxAdd for device address 6\nBit 14 - TxAdd for device address 6\nBit 15 - TxAdd for device address 7\nBit 15 - TxAdd for device address 7\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>DAI</code> reader - Device address match index\nDevice address match index\nRegister <code>DAI</code> reader\nBits 0:2 - Device address match index\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DAP</code> reader - Device address prefix n\nDescription collection[n]: Device address prefix n\nField <code>DAP</code> writer - Device address prefix n\nRegister <code>DAP[%s]</code> reader\nRegister <code>DAP[%s]</code> writer\nWrites raw bits to the register.\nBits 0:15 - Device address prefix n\nBits 0:15 - Device address prefix n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>DATAWHITEIV</code> reader - Data whitening initial value. …\nData whitening initial value\nField <code>DATAWHITEIV</code> writer - Data whitening initial value. …\nRegister <code>DATAWHITEIV</code> reader\nRegister <code>DATAWHITEIV</code> writer\nWrites raw bits to the register.\nBits 0:6 - Data whitening initial value. Bit 6 is …\nBits 0:6 - Data whitening initial value. Bit 6 is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EDCNT</code> reader - IEEE 802.15.4 energy detect loop count\nIEEE 802.15.4 energy detect loop count\nField <code>EDCNT</code> writer - IEEE 802.15.4 energy detect loop count\nRegister <code>EDCNT</code> reader\nRegister <code>EDCNT</code> writer\nWrites raw bits to the register.\nBits 0:20 - IEEE 802.15.4 energy detect loop count\nBits 0:20 - IEEE 802.15.4 energy detect loop count\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EDLVL</code> reader - IEEE 802.15.4 energy detect level\nField <code>EDLVL</code> writer - IEEE 802.15.4 energy detect level\nIEEE 802.15.4 energy detect level\nRegister <code>EDSAMPLE</code> reader\nRegister <code>EDSAMPLE</code> writer\nWrites raw bits to the register.\nBits 0:7 - IEEE 802.15.4 energy detect level\nBits 0:7 - IEEE 802.15.4 energy detect level\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_ADDRESS</code> reader -\nAddress sent or received\nField <code>EVENTS_ADDRESS</code> writer -\nRegister <code>EVENTS_ADDRESS</code> reader\nRegister <code>EVENTS_ADDRESS</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_BCMATCH</code> reader -\nBit counter reached bit count value\nField <code>EVENTS_BCMATCH</code> writer -\nRegister <code>EVENTS_BCMATCH</code> reader\nRegister <code>EVENTS_BCMATCH</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_CCABUSY</code> reader -\nWireless medium busy - do not send\nField <code>EVENTS_CCABUSY</code> writer -\nRegister <code>EVENTS_CCABUSY</code> reader\nRegister <code>EVENTS_CCABUSY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_CCAIDLE</code> reader -\nWireless medium in idle - clear to send\nField <code>EVENTS_CCAIDLE</code> writer -\nRegister <code>EVENTS_CCAIDLE</code> reader\nRegister <code>EVENTS_CCAIDLE</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_CCASTOPPED</code> reader -\nThe CCA has stopped\nField <code>EVENTS_CCASTOPPED</code> writer -\nRegister <code>EVENTS_CCASTOPPED</code> reader\nRegister <code>EVENTS_CCASTOPPED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_CRCERROR</code> reader -\nPacket received with CRC error\nField <code>EVENTS_CRCERROR</code> writer -\nRegister <code>EVENTS_CRCERROR</code> reader\nRegister <code>EVENTS_CRCERROR</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_CRCOK</code> reader -\nPacket received with CRC ok\nField <code>EVENTS_CRCOK</code> writer -\nRegister <code>EVENTS_CRCOK</code> reader\nRegister <code>EVENTS_CRCOK</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_DEVMATCH</code> reader -\nA device address match occurred on the last received packet\nField <code>EVENTS_DEVMATCH</code> writer -\nRegister <code>EVENTS_DEVMATCH</code> reader\nRegister <code>EVENTS_DEVMATCH</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_DEVMISS</code> reader -\nNo device address match occurred on the last received …\nField <code>EVENTS_DEVMISS</code> writer -\nRegister <code>EVENTS_DEVMISS</code> reader\nRegister <code>EVENTS_DEVMISS</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_DISABLED</code> reader -\nRADIO has been disabled\nField <code>EVENTS_DISABLED</code> writer -\nRegister <code>EVENTS_DISABLED</code> reader\nRegister <code>EVENTS_DISABLED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_EDEND</code> reader -\nSampling of energy detection complete. A new ED sample is …\nField <code>EVENTS_EDEND</code> writer -\nRegister <code>EVENTS_EDEND</code> reader\nRegister <code>EVENTS_EDEND</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_EDSTOPPED</code> reader -\nThe sampling of energy detection has stopped\nField <code>EVENTS_EDSTOPPED</code> writer -\nRegister <code>EVENTS_EDSTOPPED</code> reader\nRegister <code>EVENTS_EDSTOPPED</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_END</code> reader -\nPacket sent or received\nField <code>EVENTS_END</code> writer -\nRegister <code>EVENTS_END</code> reader\nRegister <code>EVENTS_END</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_FRAMESTART</code> reader -\nIEEE 802.15.4 length field received\nField <code>EVENTS_FRAMESTART</code> writer -\nRegister <code>EVENTS_FRAMESTART</code> reader\nRegister <code>EVENTS_FRAMESTART</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_MHRMATCH</code> reader -\nMAC header match found\nField <code>EVENTS_MHRMATCH</code> writer -\nRegister <code>EVENTS_MHRMATCH</code> reader\nRegister <code>EVENTS_MHRMATCH</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_PAYLOAD</code> reader -\nPacket payload sent or received\nField <code>EVENTS_PAYLOAD</code> writer -\nRegister <code>EVENTS_PAYLOAD</code> reader\nRegister <code>EVENTS_PAYLOAD</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_PHYEND</code> reader -\nGenerated in Ble_LR125Kbit, Ble_LR500Kbit and …\nField <code>EVENTS_PHYEND</code> writer -\nRegister <code>EVENTS_PHYEND</code> reader\nRegister <code>EVENTS_PHYEND</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_RATEBOOST</code> reader -\nBle_LR CI field received, receive mode is changed from …\nField <code>EVENTS_RATEBOOST</code> writer -\nRegister <code>EVENTS_RATEBOOST</code> reader\nRegister <code>EVENTS_RATEBOOST</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_READY</code> reader -\nRADIO has ramped up and is ready to be started\nField <code>EVENTS_READY</code> writer -\nRegister <code>EVENTS_READY</code> reader\nRegister <code>EVENTS_READY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_RSSIEND</code> reader -\nSampling of receive signal strength complete\nField <code>EVENTS_RSSIEND</code> writer -\nRegister <code>EVENTS_RSSIEND</code> reader\nRegister <code>EVENTS_RSSIEND</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_RXREADY</code> reader -\nRADIO has ramped up and is ready to be started RX path\nField <code>EVENTS_RXREADY</code> writer -\nRegister <code>EVENTS_RXREADY</code> reader\nRegister <code>EVENTS_RXREADY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_TXREADY</code> reader -\nRADIO has ramped up and is ready to be started TX path\nField <code>EVENTS_TXREADY</code> writer -\nRegister <code>EVENTS_TXREADY</code> reader\nRegister <code>EVENTS_TXREADY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0: Channel map between 2400 MHZ .. 2500 MHz\nField <code>FREQUENCY</code> reader - Radio channel frequency\nFrequency\nField <code>FREQUENCY</code> writer - Radio channel frequency\n1: Channel map between 2360 MHZ .. 2460 MHz\nChannel map selection.\nField <code>MAP</code> reader - Channel map selection.\nField <code>MAP</code> writer - Channel map selection.\nRegister <code>FREQUENCY</code> reader\nRegister <code>FREQUENCY</code> writer\nWrites raw bits to the register.\nChannel map between 2400 MHZ .. 2500 MHz\nBits 0:6 - Radio channel frequency\nBits 0:6 - Radio channel frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DEFAULT</code>\nChecks if the value of the field is <code>LOW</code>\nChannel map between 2360 MHZ .. 2460 MHz\nBit 8 - Channel map selection.\nBit 8 - Channel map selection.\nGet enumerated values variant\nWrite ‘1’ to disable interrupt for ADDRESS event\nWrite ‘1’ to disable interrupt for ADDRESS event\nField <code>ADDRESS</code> reader - Write ‘1’ to disable interrupt …\nField <code>ADDRESS</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for BCMATCH event\nWrite ‘1’ to disable interrupt for BCMATCH event\nField <code>BCMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>BCMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for CCABUSY event\nWrite ‘1’ to disable interrupt for CCABUSY event\nField <code>CCABUSY</code> reader - Write ‘1’ to disable interrupt …\nField <code>CCABUSY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for CCAIDLE event\nWrite ‘1’ to disable interrupt for CCAIDLE event\nField <code>CCAIDLE</code> reader - Write ‘1’ to disable interrupt …\nField <code>CCAIDLE</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for CCASTOPPED event\nWrite ‘1’ to disable interrupt for CCASTOPPED event\nField <code>CCASTOPPED</code> reader - Write ‘1’ to disable …\nField <code>CCASTOPPED</code> writer - Write ‘1’ to disable …\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable interrupt for CRCERROR event\nWrite ‘1’ to disable interrupt for CRCERROR event\nField <code>CRCERROR</code> reader - Write ‘1’ to disable interrupt …\nField <code>CRCERROR</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for CRCOK event\nWrite ‘1’ to disable interrupt for CRCOK event\nField <code>CRCOK</code> reader - Write ‘1’ to disable interrupt …\nField <code>CRCOK</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for DEVMATCH event\nWrite ‘1’ to disable interrupt for DEVMATCH event\nField <code>DEVMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>DEVMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for DEVMISS event\nWrite ‘1’ to disable interrupt for DEVMISS event\nField <code>DEVMISS</code> reader - Write ‘1’ to disable interrupt …\nField <code>DEVMISS</code> writer - Write ‘1’ to disable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to disable interrupt for DISABLED event\nWrite ‘1’ to disable interrupt for DISABLED event\nField <code>DISABLED</code> reader - Write ‘1’ to disable interrupt …\nField <code>DISABLED</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for EDEND event\nWrite ‘1’ to disable interrupt for EDEND event\nField <code>EDEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>EDEND</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for EDSTOPPED event\nWrite ‘1’ to disable interrupt for EDSTOPPED event\nField <code>EDSTOPPED</code> reader - Write ‘1’ to disable …\nField <code>EDSTOPPED</code> writer - Write ‘1’ to disable …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to disable interrupt for END event\nWrite ‘1’ to disable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to disable interrupt for …\nField <code>END</code> writer - Write ‘1’ to disable interrupt for …\nWrite ‘1’ to disable interrupt for FRAMESTART event\nWrite ‘1’ to disable interrupt for FRAMESTART event\nField <code>FRAMESTART</code> reader - Write ‘1’ to disable …\nField <code>FRAMESTART</code> writer - Write ‘1’ to disable …\nDisable interrupt\nWrite ‘1’ to disable interrupt for MHRMATCH event\nWrite ‘1’ to disable interrupt for MHRMATCH event\nField <code>MHRMATCH</code> reader - Write ‘1’ to disable interrupt …\nField <code>MHRMATCH</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for PAYLOAD event\nWrite ‘1’ to disable interrupt for PAYLOAD event\nField <code>PAYLOAD</code> reader - Write ‘1’ to disable interrupt …\nField <code>PAYLOAD</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for PHYEND event\nWrite ‘1’ to disable interrupt for PHYEND event\nField <code>PHYEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>PHYEND</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for RATEBOOST event\nWrite ‘1’ to disable interrupt for RATEBOOST event\nField <code>RATEBOOST</code> reader - Write ‘1’ to disable …\nField <code>RATEBOOST</code> writer - Write ‘1’ to disable …\nWrite ‘1’ to disable interrupt for READY event\nWrite ‘1’ to disable interrupt for READY event\nField <code>READY</code> reader - Write ‘1’ to disable interrupt …\nField <code>READY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for RSSIEND event\nWrite ‘1’ to disable interrupt for RSSIEND event\nField <code>RSSIEND</code> reader - Write ‘1’ to disable interrupt …\nField <code>RSSIEND</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for RXREADY event\nWrite ‘1’ to disable interrupt for RXREADY event\nField <code>RXREADY</code> reader - Write ‘1’ to disable interrupt …\nField <code>RXREADY</code> writer - Write ‘1’ to disable interrupt …\nWrite ‘1’ to disable interrupt for TXREADY event\nWrite ‘1’ to disable interrupt for TXREADY event\nField <code>TXREADY</code> reader - Write ‘1’ to disable interrupt …\nField <code>TXREADY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Write ‘1’ to disable interrupt for ADDRESS …\nBit 1 - Write ‘1’ to disable interrupt for ADDRESS …\nBit 10 - Write ‘1’ to disable interrupt for BCMATCH …\nBit 10 - Write ‘1’ to disable interrupt for BCMATCH …\nWrites raw bits to the register.\nBit 18 - Write ‘1’ to disable interrupt for CCABUSY …\nBit 18 - Write ‘1’ to disable interrupt for CCABUSY …\nBit 17 - Write ‘1’ to disable interrupt for CCAIDLE …\nBit 17 - Write ‘1’ to disable interrupt for CCAIDLE …\nBit 19 - Write ‘1’ to disable interrupt for CCASTOPPED …\nBit 19 - Write ‘1’ to disable interrupt for CCASTOPPED …\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 13 - Write ‘1’ to disable interrupt for CRCERROR …\nBit 13 - Write ‘1’ to disable interrupt for CRCERROR …\nBit 12 - Write ‘1’ to disable interrupt for CRCOK event\nBit 12 - Write ‘1’ to disable interrupt for CRCOK event\nBit 5 - Write ‘1’ to disable interrupt for DEVMATCH …\nBit 5 - Write ‘1’ to disable interrupt for DEVMATCH …\nBit 6 - Write ‘1’ to disable interrupt for DEVMISS …\nBit 6 - Write ‘1’ to disable interrupt for DEVMISS …\nBit 4 - Write ‘1’ to disable interrupt for DISABLED …\nBit 4 - Write ‘1’ to disable interrupt for DISABLED …\nBit 15 - Write ‘1’ to disable interrupt for EDEND event\nBit 15 - Write ‘1’ to disable interrupt for EDEND event\nBit 16 - Write ‘1’ to disable interrupt for EDSTOPPED …\nBit 16 - Write ‘1’ to disable interrupt for EDSTOPPED …\nBit 3 - Write ‘1’ to disable interrupt for END event\nBit 3 - Write ‘1’ to disable interrupt for END event\nBit 14 - Write ‘1’ to disable interrupt for FRAMESTART …\nBit 14 - Write ‘1’ to disable interrupt for FRAMESTART …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 23 - Write ‘1’ to disable interrupt for MHRMATCH …\nBit 23 - Write ‘1’ to disable interrupt for MHRMATCH …\nBit 2 - Write ‘1’ to disable interrupt for PAYLOAD …\nBit 2 - Write ‘1’ to disable interrupt for PAYLOAD …\nBit 27 - Write ‘1’ to disable interrupt for PHYEND …\nBit 27 - Write ‘1’ to disable interrupt for PHYEND …\nBit 20 - Write ‘1’ to disable interrupt for RATEBOOST …\nBit 20 - Write ‘1’ to disable interrupt for RATEBOOST …\nBit 0 - Write ‘1’ to disable interrupt for READY event\nBit 0 - Write ‘1’ to disable interrupt for READY event\nBit 7 - Write ‘1’ to disable interrupt for RSSIEND …\nBit 7 - Write ‘1’ to disable interrupt for RSSIEND …\nBit 22 - Write ‘1’ to disable interrupt for RXREADY …\nBit 22 - Write ‘1’ to disable interrupt for RXREADY …\nBit 21 - Write ‘1’ to disable interrupt for TXREADY …\nBit 21 - Write ‘1’ to disable interrupt for TXREADY …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable interrupt for ADDRESS event\nWrite ‘1’ to enable interrupt for ADDRESS event\nField <code>ADDRESS</code> reader - Write ‘1’ to enable interrupt …\nField <code>ADDRESS</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for BCMATCH event\nWrite ‘1’ to enable interrupt for BCMATCH event\nField <code>BCMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>BCMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CCABUSY event\nWrite ‘1’ to enable interrupt for CCABUSY event\nField <code>CCABUSY</code> reader - Write ‘1’ to enable interrupt …\nField <code>CCABUSY</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CCAIDLE event\nWrite ‘1’ to enable interrupt for CCAIDLE event\nField <code>CCAIDLE</code> reader - Write ‘1’ to enable interrupt …\nField <code>CCAIDLE</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CCASTOPPED event\nWrite ‘1’ to enable interrupt for CCASTOPPED event\nField <code>CCASTOPPED</code> reader - Write ‘1’ to enable …\nField <code>CCASTOPPED</code> writer - Write ‘1’ to enable …\nWrite ‘1’ to enable interrupt for CRCERROR event\nWrite ‘1’ to enable interrupt for CRCERROR event\nField <code>CRCERROR</code> reader - Write ‘1’ to enable interrupt …\nField <code>CRCERROR</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for CRCOK event\nWrite ‘1’ to enable interrupt for CRCOK event\nField <code>CRCOK</code> reader - Write ‘1’ to enable interrupt for …\nField <code>CRCOK</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for DEVMATCH event\nWrite ‘1’ to enable interrupt for DEVMATCH event\nField <code>DEVMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>DEVMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for DEVMISS event\nWrite ‘1’ to enable interrupt for DEVMISS event\nField <code>DEVMISS</code> reader - Write ‘1’ to enable interrupt …\nField <code>DEVMISS</code> writer - Write ‘1’ to enable interrupt …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\nWrite ‘1’ to enable interrupt for DISABLED event\nWrite ‘1’ to enable interrupt for DISABLED event\nField <code>DISABLED</code> reader - Write ‘1’ to enable interrupt …\nField <code>DISABLED</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for EDEND event\nWrite ‘1’ to enable interrupt for EDEND event\nField <code>EDEND</code> reader - Write ‘1’ to enable interrupt for …\nField <code>EDEND</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for EDSTOPPED event\nWrite ‘1’ to enable interrupt for EDSTOPPED event\nField <code>EDSTOPPED</code> reader - Write ‘1’ to enable interrupt …\nField <code>EDSTOPPED</code> writer - Write ‘1’ to enable interrupt …\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nWrite ‘1’ to enable interrupt for END event\nWrite ‘1’ to enable interrupt for END event\nField <code>END</code> reader - Write ‘1’ to enable interrupt for …\nField <code>END</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for FRAMESTART event\nWrite ‘1’ to enable interrupt for FRAMESTART event\nField <code>FRAMESTART</code> reader - Write ‘1’ to enable …\nField <code>FRAMESTART</code> writer - Write ‘1’ to enable …\nEnable interrupt\nWrite ‘1’ to enable interrupt for MHRMATCH event\nWrite ‘1’ to enable interrupt for MHRMATCH event\nField <code>MHRMATCH</code> reader - Write ‘1’ to enable interrupt …\nField <code>MHRMATCH</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for PAYLOAD event\nWrite ‘1’ to enable interrupt for PAYLOAD event\nField <code>PAYLOAD</code> reader - Write ‘1’ to enable interrupt …\nField <code>PAYLOAD</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for PHYEND event\nWrite ‘1’ to enable interrupt for PHYEND event\nField <code>PHYEND</code> reader - Write ‘1’ to enable interrupt …\nField <code>PHYEND</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> reader\nWrite ‘1’ to enable interrupt for RATEBOOST event\nWrite ‘1’ to enable interrupt for RATEBOOST event\nField <code>RATEBOOST</code> reader - Write ‘1’ to enable interrupt …\nField <code>RATEBOOST</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for READY event\nWrite ‘1’ to enable interrupt for READY event\nField <code>READY</code> reader - Write ‘1’ to enable interrupt for …\nField <code>READY</code> writer - Write ‘1’ to enable interrupt for …\nWrite ‘1’ to enable interrupt for RSSIEND event\nWrite ‘1’ to enable interrupt for RSSIEND event\nField <code>RSSIEND</code> reader - Write ‘1’ to enable interrupt …\nField <code>RSSIEND</code> writer - Write ‘1’ to enable interrupt …\nWrite ‘1’ to enable interrupt for RXREADY event\nWrite ‘1’ to enable interrupt for RXREADY event\nField <code>RXREADY</code> reader - Write ‘1’ to enable interrupt …\nField <code>RXREADY</code> writer - Write ‘1’ to enable interrupt …\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable interrupt for TXREADY event\nWrite ‘1’ to enable interrupt for TXREADY event\nField <code>TXREADY</code> reader - Write ‘1’ to enable interrupt …\nField <code>TXREADY</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Write ‘1’ to enable interrupt for ADDRESS event\nBit 1 - Write ‘1’ to enable interrupt for ADDRESS event\nBit 10 - Write ‘1’ to enable interrupt for BCMATCH …\nBit 10 - Write ‘1’ to enable interrupt for BCMATCH …\nWrites raw bits to the register.\nBit 18 - Write ‘1’ to enable interrupt for CCABUSY …\nBit 18 - Write ‘1’ to enable interrupt for CCABUSY …\nBit 17 - Write ‘1’ to enable interrupt for CCAIDLE …\nBit 17 - Write ‘1’ to enable interrupt for CCAIDLE …\nBit 19 - Write ‘1’ to enable interrupt for CCASTOPPED …\nBit 19 - Write ‘1’ to enable interrupt for CCASTOPPED …\nBit 13 - Write ‘1’ to enable interrupt for CRCERROR …\nBit 13 - Write ‘1’ to enable interrupt for CRCERROR …\nBit 12 - Write ‘1’ to enable interrupt for CRCOK event\nBit 12 - Write ‘1’ to enable interrupt for CRCOK event\nBit 5 - Write ‘1’ to enable interrupt for DEVMATCH …\nBit 5 - Write ‘1’ to enable interrupt for DEVMATCH …\nBit 6 - Write ‘1’ to enable interrupt for DEVMISS event\nBit 6 - Write ‘1’ to enable interrupt for DEVMISS event\nBit 4 - Write ‘1’ to enable interrupt for DISABLED …\nBit 4 - Write ‘1’ to enable interrupt for DISABLED …\nBit 15 - Write ‘1’ to enable interrupt for EDEND event\nBit 15 - Write ‘1’ to enable interrupt for EDEND event\nBit 16 - Write ‘1’ to enable interrupt for EDSTOPPED …\nBit 16 - Write ‘1’ to enable interrupt for EDSTOPPED …\nBit 3 - Write ‘1’ to enable interrupt for END event\nBit 3 - Write ‘1’ to enable interrupt for END event\nBit 14 - Write ‘1’ to enable interrupt for FRAMESTART …\nBit 14 - Write ‘1’ to enable interrupt for FRAMESTART …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 23 - Write ‘1’ to enable interrupt for MHRMATCH …\nBit 23 - Write ‘1’ to enable interrupt for MHRMATCH …\nBit 2 - Write ‘1’ to enable interrupt for PAYLOAD event\nBit 2 - Write ‘1’ to enable interrupt for PAYLOAD event\nBit 27 - Write ‘1’ to enable interrupt for PHYEND event\nBit 27 - Write ‘1’ to enable interrupt for PHYEND event\nBit 20 - Write ‘1’ to enable interrupt for RATEBOOST …\nBit 20 - Write ‘1’ to enable interrupt for RATEBOOST …\nBit 0 - Write ‘1’ to enable interrupt for READY event\nBit 0 - Write ‘1’ to enable interrupt for READY event\nBit 7 - Write ‘1’ to enable interrupt for RSSIEND event\nBit 7 - Write ‘1’ to enable interrupt for RSSIEND event\nBit 22 - Write ‘1’ to enable interrupt for RXREADY …\nBit 22 - Write ‘1’ to enable interrupt for RXREADY …\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nBit 21 - Write ‘1’ to enable interrupt for TXREADY …\nBit 21 - Write ‘1’ to enable interrupt for TXREADY …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nSearch pattern configuration\nRegister <code>MHRMATCHCONF</code> reader\nRegister <code>MHRMATCHCONF</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPattern mask\nRegister <code>MHRMATCHMAS</code> reader\nRegister <code>MHRMATCHMAS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n3: 1 Mbit/s BLE\n4: 2 Mbit/s BLE\n5: Long range 125 kbit/s TX, 125 kbit/s and 500 kbit/s RX\n6: Long range 500 kbit/s TX, 125 kbit/s and 500 kbit/s RX\n15: IEEE 802.15.4-2006 250 kbit/s\nRadio data rate and modulation setting. The radio supports …\nField <code>MODE</code> reader - Radio data rate and modulation …\nData rate and modulation\nField <code>MODE</code> writer - Radio data rate and modulation …\n0: 1 Mbit/s Nordic proprietary radio mode\n1: 2 Mbit/s Nordic proprietary radio mode\nRegister <code>MODE</code> reader\nRegister <code>MODE</code> writer\nWrites raw bits to the register.\n1 Mbit/s BLE\n2 Mbit/s BLE\nLong range 125 kbit/s TX, 125 kbit/s and 500 kbit/s RX\nLong range 500 kbit/s TX, 125 kbit/s and 500 kbit/s RX\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIEEE 802.15.4-2006 250 kbit/s\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BLE_1MBIT</code>\nChecks if the value of the field is <code>BLE_2MBIT</code>\nChecks if the value of the field is <code>BLE_LR125KBIT</code>\nChecks if the value of the field is <code>BLE_LR500KBIT</code>\nChecks if the value of the field is <code>IEEE802154_250KBIT</code>\nChecks if the value of the field is <code>NRF_1MBIT</code>\nChecks if the value of the field is <code>NRF_2MBIT</code>\nBits 0:3 - Radio data rate and modulation setting. The …\nBits 0:3 - Radio data rate and modulation setting. The …\n1 Mbit/s Nordic proprietary radio mode\n2 Mbit/s Nordic proprietary radio mode\nGet enumerated values variant\n1: Transmit ‘0’\n0: Transmit ‘1’\n2: Transmit center frequency\n0: Default ramp-up time (tRXEN), compatible with firmware …\nDefault TX value\nField <code>DTX</code> reader - Default TX value\nField <code>DTX</code> writer - Default TX value\n1: Fast ramp-up (tRXEN,FAST), see electrical specification …\nRadio mode configuration register 0\nRegister <code>MODECNF0</code> reader\nRadio ramp-up time\nField <code>RU</code> reader - Radio ramp-up time\nField <code>RU</code> writer - Radio ramp-up time\nRegister <code>MODECNF0</code> writer\nTransmit ‘0’\nTransmit ‘1’\nWrites raw bits to the register.\nTransmit center frequency\nDefault ramp-up time (tRXEN), compatible with firmware …\nBits 8:9 - Default TX value\nBits 8:9 - Default TX value\nFast ramp-up (tRXEN,FAST), see electrical specification …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>B0</code>\nChecks if the value of the field is <code>B1</code>\nChecks if the value of the field is <code>CENTER</code>\nChecks if the value of the field is <code>DEFAULT</code>\nChecks if the value of the field is <code>FAST</code>\nBit 0 - Radio ramp-up time\nBit 0 - Radio ramp-up time\nGet enumerated values variant\nGet enumerated values variant\nField <code>PACKETPTR</code> reader - Packet pointer\nPacket pointer\nField <code>PACKETPTR</code> writer - Packet pointer\nRegister <code>PACKETPTR</code> reader\nRegister <code>PACKETPTR</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Packet pointer\nBits 0:31 - Packet pointer\n0: Include S1 field in RAM only if S1LEN &gt; 0\nField <code>CILEN</code> reader - Length of code indicator - long range\nField <code>CILEN</code> writer - Length of code indicator - long range\nIndicates if LENGTH field contains CRC or not\nField <code>CRCINC</code> reader - Indicates if LENGTH field contains …\nField <code>CRCINC</code> writer - Indicates if LENGTH field contains …\n0: LENGTH does not contain CRC\n1: Always include S1 field in RAM independent of S1LEN\n1: LENGTH includes CRC\nField <code>LFLEN</code> reader - Length on air of LENGTH field in …\nField <code>LFLEN</code> writer - Length on air of LENGTH field in …\n3: Preamble - used for BLE long range\nPacket configuration register 0\nLength of preamble on air. Decision point: TASKS_START task\nField <code>PLEN</code> reader - Length of preamble on air. Decision …\nField <code>PLEN</code> writer - Length of preamble on air. Decision …\nRegister <code>PCNF0</code> reader\nField <code>S0LEN</code> reader - Length on air of S0 field in number …\nField <code>S0LEN</code> writer - Length on air of S0 field in number …\nInclude or exclude S1 field in RAM\nField <code>S1INCL</code> reader - Include or exclude S1 field in RAM\nField <code>S1INCL</code> writer - Include or exclude S1 field in RAM\nField <code>S1LEN</code> reader - Length on air of S1 field in number …\nField <code>S1LEN</code> writer - Length on air of S1 field in number …\nField <code>TERMLEN</code> reader - Length of TERM field in Long Range …\nField <code>TERMLEN</code> writer - Length of TERM field in Long Range …\nRegister <code>PCNF0</code> writer\n1: 16-bit preamble\n16-bit preamble\n2: 32-bit zero preamble - used for IEEE 802.15.4\n32-bit zero preamble - used for IEEE 802.15.4\n0: 8-bit preamble\n8-bit preamble\nInclude S1 field in RAM only if S1LEN &gt; 0\nWrites raw bits to the register.\nBits 22:23 - Length of code indicator - long range\nBits 22:23 - Length of code indicator - long range\nBit 26 - Indicates if LENGTH field contains CRC or not\nBit 26 - Indicates if LENGTH field contains CRC or not\nLENGTH does not contain CRC\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAlways include S1 field in RAM independent of S1LEN\nLENGTH includes CRC\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_16BIT</code>\nChecks if the value of the field is <code>_32BIT_ZERO</code>\nChecks if the value of the field is <code>_8BIT</code>\nChecks if the value of the field is <code>AUTOMATIC</code>\nChecks if the value of the field is <code>EXCLUDE</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>INCLUDE</code>\nChecks if the value of the field is <code>LONG_RANGE</code>\nBits 0:3 - Length on air of LENGTH field in number of bits.\nBits 0:3 - Length on air of LENGTH field in number of bits.\nPreamble - used for BLE long range\nBits 24:25 - Length of preamble on air. Decision point: …\nBits 24:25 - Length of preamble on air. Decision point: …\nBit 8 - Length on air of S0 field in number of bytes.\nBit 8 - Length on air of S0 field in number of bytes.\nBit 20 - Include or exclude S1 field in RAM\nBit 20 - Include or exclude S1 field in RAM\nBits 16:19 - Length on air of S1 field in number of bits.\nBits 16:19 - Length on air of S1 field in number of bits.\nBits 29:30 - Length of TERM field in Long Range operation\nBits 29:30 - Length of TERM field in Long Range operation\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>BALEN</code> reader - Base address length in number of bytes\nField <code>BALEN</code> writer - Base address length in number of bytes\n1: Most significant bit on air first\n0: Disable\n1: Enable\nOn air endianness of packet, this applies to the S0, …\nField <code>ENDIAN</code> reader - On air endianness of packet, this …\nField <code>ENDIAN</code> writer - On air endianness of packet, this …\n0: Least significant bit on air first\nField <code>MAXLEN</code> reader - Maximum length of packet payload. If …\nField <code>MAXLEN</code> writer - Maximum length of packet payload. If …\nPacket configuration register 1\nRegister <code>PCNF1</code> reader\nField <code>STATLEN</code> reader - Static length in number of bytes\nField <code>STATLEN</code> writer - Static length in number of bytes\nRegister <code>PCNF1</code> writer\nEnable or disable packet whitening\nField <code>WHITEEN</code> reader - Enable or disable packet whitening\nField <code>WHITEEN</code> writer - Enable or disable packet whitening\nBits 16:18 - Base address length in number of bytes\nBits 16:18 - Base address length in number of bytes\nMost significant bit on air first\nWrites raw bits to the register.\nDisable\nEnable\nBit 24 - On air endianness of packet, this applies to the …\nBit 24 - On air endianness of packet, this applies to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>BIG</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>LITTLE</code>\nLeast significant bit on air first\nBits 0:7 - Maximum length of packet payload. If the packet …\nBits 0:7 - Maximum length of packet payload. If the packet …\nBits 8:15 - Static length in number of bytes\nBits 8:15 - Static length in number of bytes\nGet enumerated values variant\nGet enumerated values variant\nBit 25 - Enable or disable packet whitening\nBit 25 - Enable or disable packet whitening\nStatus on what rate packet is received with in Long Range\nField <code>CISTAT</code> reader - Status on what rate packet is …\n1: Payload greater than PCNF1.MAXLEN\n0: Payload less than PCNF1.MAXLEN\n0: Frame is received at 125kbps\n1: Frame is received at 500kbps\nStatus on payload length vs. PCNF1.MAXLEN\nField <code>PDUSTAT</code> reader - Status on payload length vs. …\nPayload status\nRegister <code>PDUSTAT</code> reader\nBits 1:2 - Status on what rate packet is received with in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>GREATER_THAN</code>\nChecks if the value of the field is <code>LESS_THAN</code>\nChecks if the value of the field is <code>LR125KBIT</code>\nChecks if the value of the field is <code>LR500KBIT</code>\nBit 0 - Status on payload length vs. PCNF1.MAXLEN\nGet enumerated values variant\nGet enumerated values variant\n0: Peripheral is powered off\n1: Peripheral is powered on\nPeripheral power control. The peripheral and its registers …\nField <code>POWER</code> reader - Peripheral power control. The …\nPeripheral power control\nField <code>POWER</code> writer - Peripheral power control. The …\nRegister <code>POWER</code> reader\nRegister <code>POWER</code> writer\nWrites raw bits to the register.\nPeripheral is powered off\nPeripheral is powered on\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Peripheral power control. The peripheral and its …\nBit 0 - Peripheral power control. The peripheral and its …\nGet enumerated values variant\nField <code>AP0</code> reader - Address prefix 0.\nField <code>AP0</code> writer - Address prefix 0.\nField <code>AP1</code> reader - Address prefix 1.\nField <code>AP1</code> writer - Address prefix 1.\nField <code>AP2</code> reader - Address prefix 2.\nField <code>AP2</code> writer - Address prefix 2.\nField <code>AP3</code> reader - Address prefix 3.\nField <code>AP3</code> writer - Address prefix 3.\nPrefixes bytes for logical addresses 0-3\nRegister <code>PREFIX0</code> reader\nRegister <code>PREFIX0</code> writer\nBits 0:7 - Address prefix 0.\nBits 0:7 - Address prefix 0.\nBits 8:15 - Address prefix 1.\nBits 8:15 - Address prefix 1.\nBits 16:23 - Address prefix 2.\nBits 16:23 - Address prefix 2.\nBits 24:31 - Address prefix 3.\nBits 24:31 - Address prefix 3.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>AP4</code> reader - Address prefix 4.\nField <code>AP4</code> writer - Address prefix 4.\nField <code>AP5</code> reader - Address prefix 5.\nField <code>AP5</code> writer - Address prefix 5.\nField <code>AP6</code> reader - Address prefix 6.\nField <code>AP6</code> writer - Address prefix 6.\nField <code>AP7</code> reader - Address prefix 7.\nField <code>AP7</code> writer - Address prefix 7.\nPrefixes bytes for logical addresses 4-7\nRegister <code>PREFIX1</code> reader\nRegister <code>PREFIX1</code> writer\nBits 0:7 - Address prefix 4.\nBits 0:7 - Address prefix 4.\nBits 8:15 - Address prefix 5.\nBits 8:15 - Address prefix 5.\nBits 16:23 - Address prefix 6.\nBits 16:23 - Address prefix 6.\nBits 24:31 - Address prefix 7.\nBits 24:31 - Address prefix 7.\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister <code>RSSISAMPLE</code> reader\nField <code>RSSISAMPLE</code> reader - RSSI sample\nRSSI sample\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:6 - RSSI sample\nEnable or disable reception on logical address 0.\nField <code>ADDR0</code> reader - Enable or disable reception on …\nField <code>ADDR0</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 1.\nField <code>ADDR1</code> reader - Enable or disable reception on …\nField <code>ADDR1</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 2.\nField <code>ADDR2</code> reader - Enable or disable reception on …\nField <code>ADDR2</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 3.\nField <code>ADDR3</code> reader - Enable or disable reception on …\nField <code>ADDR3</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 4.\nField <code>ADDR4</code> reader - Enable or disable reception on …\nField <code>ADDR4</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 5.\nField <code>ADDR5</code> reader - Enable or disable reception on …\nField <code>ADDR5</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 6.\nField <code>ADDR6</code> reader - Enable or disable reception on …\nField <code>ADDR6</code> writer - Enable or disable reception on …\nEnable or disable reception on logical address 7.\nField <code>ADDR7</code> reader - Enable or disable reception on …\nField <code>ADDR7</code> writer - Enable or disable reception on …\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nRegister <code>RXADDRESSES</code> reader\nReceive address select\nRegister <code>RXADDRESSES</code> writer\nBit 0 - Enable or disable reception on logical address 0.\nBit 0 - Enable or disable reception on logical address 0.\nBit 1 - Enable or disable reception on logical address 1.\nBit 1 - Enable or disable reception on logical address 1.\nBit 2 - Enable or disable reception on logical address 2.\nBit 2 - Enable or disable reception on logical address 2.\nBit 3 - Enable or disable reception on logical address 3.\nBit 3 - Enable or disable reception on logical address 3.\nBit 4 - Enable or disable reception on logical address 4.\nBit 4 - Enable or disable reception on logical address 4.\nBit 5 - Enable or disable reception on logical address 5.\nBit 5 - Enable or disable reception on logical address 5.\nBit 6 - Enable or disable reception on logical address 6.\nBit 6 - Enable or disable reception on logical address 6.\nBit 7 - Enable or disable reception on logical address 7.\nBit 7 - Enable or disable reception on logical address 7.\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>RXCRC</code> reader\nField <code>RXCRC</code> reader - CRC field of previously received …\nCRC field of previously received packet\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:23 - CRC field of previously received packet\nRegister <code>RXMATCH</code> reader\nField <code>RXMATCH</code> reader - Received address\nReceived address\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Received address\nRegister <code>SFD</code> reader\nField <code>SFD</code> reader - IEEE 802.15.4 start of frame delimiter\nIEEE 802.15.4 start of frame delimiter\nField <code>SFD</code> writer - IEEE 802.15.4 start of frame delimiter\nRegister <code>SFD</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - IEEE 802.15.4 start of frame delimiter\nBits 0:7 - IEEE 802.15.4 start of frame delimiter\nShortcut between ADDRESS event and BCSTART task\nField <code>ADDRESS_BCSTART</code> reader - Shortcut between ADDRESS …\nField <code>ADDRESS_BCSTART</code> writer - Shortcut between ADDRESS …\nShortcut between ADDRESS event and RSSISTART task\nField <code>ADDRESS_RSSISTART</code> reader - Shortcut between ADDRESS …\nField <code>ADDRESS_RSSISTART</code> writer - Shortcut between ADDRESS …\nShortcut between CCABUSY event and DISABLE task\nField <code>CCABUSY_DISABLE</code> reader - Shortcut between CCABUSY …\nField <code>CCABUSY_DISABLE</code> writer - Shortcut between CCABUSY …\nShortcut between CCAIDLE event and STOP task\nField <code>CCAIDLE_STOP</code> reader - Shortcut between CCAIDLE event …\nField <code>CCAIDLE_STOP</code> writer - Shortcut between CCAIDLE event …\nShortcut between CCAIDLE event and TXEN task\nField <code>CCAIDLE_TXEN</code> reader - Shortcut between CCAIDLE event …\nField <code>CCAIDLE_TXEN</code> writer - Shortcut between CCAIDLE event …\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\n0: Disable shortcut\nShortcut between DISABLED event and RSSISTOP task\nField <code>DISABLED_RSSISTOP</code> reader - Shortcut between DISABLED …\nField <code>DISABLED_RSSISTOP</code> writer - Shortcut between DISABLED …\nShortcut between DISABLED event and RXEN task\nField <code>DISABLED_RXEN</code> reader - Shortcut between DISABLED …\nField <code>DISABLED_RXEN</code> writer - Shortcut between DISABLED …\nShortcut between DISABLED event and TXEN task\nField <code>DISABLED_TXEN</code> reader - Shortcut between DISABLED …\nField <code>DISABLED_TXEN</code> writer - Shortcut between DISABLED …\nShortcut between EDEND event and DISABLE task\nField <code>EDEND_DISABLE</code> reader - Shortcut between EDEND event …\nField <code>EDEND_DISABLE</code> writer - Shortcut between EDEND event …\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\n1: Enable shortcut\nShortcut between END event and DISABLE task\nField <code>END_DISABLE</code> reader - Shortcut between END event and …\nField <code>END_DISABLE</code> writer - Shortcut between END event and …\nShortcut between END event and START task\nField <code>END_START</code> reader - Shortcut between END event and …\nField <code>END_START</code> writer - Shortcut between END event and …\nShortcut between FRAMESTART event and BCSTART task\nField <code>FRAMESTART_BCSTART</code> reader - Shortcut between …\nField <code>FRAMESTART_BCSTART</code> writer - Shortcut between …\nShortcut between PHYEND event and DISABLE task\nField <code>PHYEND_DISABLE</code> reader - Shortcut between PHYEND …\nField <code>PHYEND_DISABLE</code> writer - Shortcut between PHYEND …\nShortcut between PHYEND event and START task\nField <code>PHYEND_START</code> reader - Shortcut between PHYEND event …\nField <code>PHYEND_START</code> writer - Shortcut between PHYEND event …\nRegister <code>SHORTS</code> reader\nShortcut between READY event and EDSTART task\nField <code>READY_EDSTART</code> reader - Shortcut between READY event …\nField <code>READY_EDSTART</code> writer - Shortcut between READY event …\nShortcut between READY event and START task\nField <code>READY_START</code> reader - Shortcut between READY event …\nField <code>READY_START</code> writer - Shortcut between READY event …\nShortcut between RXREADY event and CCASTART task\nField <code>RXREADY_CCASTART</code> reader - Shortcut between RXREADY …\nField <code>RXREADY_CCASTART</code> writer - Shortcut between RXREADY …\nShortcut between RXREADY event and START task\nField <code>RXREADY_START</code> reader - Shortcut between RXREADY …\nField <code>RXREADY_START</code> writer - Shortcut between RXREADY …\nShortcut register\nShortcut between TXREADY event and START task\nField <code>TXREADY_START</code> reader - Shortcut between TXREADY …\nField <code>TXREADY_START</code> writer - Shortcut between TXREADY …\nRegister <code>SHORTS</code> writer\nBit 6 - Shortcut between ADDRESS event and BCSTART task\nBit 6 - Shortcut between ADDRESS event and BCSTART task\nBit 4 - Shortcut between ADDRESS event and RSSISTART task\nBit 4 - Shortcut between ADDRESS event and RSSISTART task\nWrites raw bits to the register.\nBit 13 - Shortcut between CCABUSY event and DISABLE task\nBit 13 - Shortcut between CCABUSY event and DISABLE task\nBit 17 - Shortcut between CCAIDLE event and STOP task\nBit 17 - Shortcut between CCAIDLE event and STOP task\nBit 12 - Shortcut between CCAIDLE event and TXEN task\nBit 12 - Shortcut between CCAIDLE event and TXEN task\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nDisable shortcut\nBit 8 - Shortcut between DISABLED event and RSSISTOP task\nBit 8 - Shortcut between DISABLED event and RSSISTOP task\nBit 3 - Shortcut between DISABLED event and RXEN task\nBit 3 - Shortcut between DISABLED event and RXEN task\nBit 2 - Shortcut between DISABLED event and TXEN task\nBit 2 - Shortcut between DISABLED event and TXEN task\nBit 16 - Shortcut between EDEND event and DISABLE task\nBit 16 - Shortcut between EDEND event and DISABLE task\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nEnable shortcut\nBit 1 - Shortcut between END event and DISABLE task\nBit 1 - Shortcut between END event and DISABLE task\nBit 5 - Shortcut between END event and START task\nBit 5 - Shortcut between END event and START task\nBit 14 - Shortcut between FRAMESTART event and BCSTART task\nBit 14 - Shortcut between FRAMESTART event and BCSTART task\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 20 - Shortcut between PHYEND event and DISABLE task\nBit 20 - Shortcut between PHYEND event and DISABLE task\nBit 21 - Shortcut between PHYEND event and START task\nBit 21 - Shortcut between PHYEND event and START task\nBit 15 - Shortcut between READY event and EDSTART task\nBit 15 - Shortcut between READY event and EDSTART task\nBit 0 - Shortcut between READY event and START task\nBit 0 - Shortcut between READY event and START task\nBit 11 - Shortcut between RXREADY event and CCASTART task\nBit 11 - Shortcut between RXREADY event and CCASTART task\nBit 19 - Shortcut between RXREADY event and START task\nBit 19 - Shortcut between RXREADY event and START task\nBit 18 - Shortcut between TXREADY event and START task\nBit 18 - Shortcut between TXREADY event and START task\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n0: RADIO is in the Disabled state\nRegister <code>STATE</code> reader\n3: RADIO is in the RX state\n4: RADIO is in the RXDISABLED state\n2: RADIO is in the RXIDLE state\n1: RADIO is in the RXRU state\nCurrent radio state\nField <code>STATE</code> reader - Current radio state\nCurrent radio state\n11: RADIO is in the TX state\n12: RADIO is in the TXDISABLED state\n10: RADIO is in the TXIDLE state\n9: RADIO is in the TXRU state\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>RX</code>\nChecks if the value of the field is <code>RX_DISABLE</code>\nChecks if the value of the field is <code>RX_IDLE</code>\nChecks if the value of the field is <code>RX_RU</code>\nChecks if the value of the field is <code>TX</code>\nChecks if the value of the field is <code>TX_DISABLE</code>\nChecks if the value of the field is <code>TX_IDLE</code>\nChecks if the value of the field is <code>TX_RU</code>\nBits 0:3 - Current radio state\nGet enumerated values variant\nStart the bit counter\nField <code>TASKS_BCSTART</code> writer -\nRegister <code>TASKS_BCSTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop the bit counter\nField <code>TASKS_BCSTOP</code> writer -\nRegister <code>TASKS_BCSTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart the clear channel assessment used in IEEE 802.15.4 …\nField <code>TASKS_CCASTART</code> writer -\nRegister <code>TASKS_CCASTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop the clear channel assessment\nField <code>TASKS_CCASTOP</code> writer -\nRegister <code>TASKS_CCASTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nDisable RADIO\nField <code>TASKS_DISABLE</code> writer -\nRegister <code>TASKS_DISABLE</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart the energy detect measurement used in IEEE 802.15.4 …\nField <code>TASKS_EDSTART</code> writer -\nRegister <code>TASKS_EDSTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop the energy detect measurement\nField <code>TASKS_EDSTOP</code> writer -\nRegister <code>TASKS_EDSTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart the RSSI and take one single sample of the receive …\nField <code>TASKS_RSSISTART</code> writer -\nRegister <code>TASKS_RSSISTART</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop the RSSI measurement\nField <code>TASKS_RSSISTOP</code> writer -\nRegister <code>TASKS_RSSISTOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nEnable RADIO in RX mode\nField <code>TASKS_RXEN</code> writer -\nRegister <code>TASKS_RXEN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStart RADIO\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nStop RADIO\nField <code>TASKS_STOP</code> writer -\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nEnable RADIO in TX mode\nField <code>TASKS_TXEN</code> writer -\nRegister <code>TASKS_TXEN</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nRegister <code>TIFS</code> reader\nField <code>TIFS</code> reader - Interframe spacing in us\nInterframe spacing in us\nField <code>TIFS</code> writer - Interframe spacing in us\nRegister <code>TIFS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:9 - Interframe spacing in us\nBits 0:9 - Interframe spacing in us\nRegister <code>TXADDRESS</code> reader\nField <code>TXADDRESS</code> reader - Transmit address select\nTransmit address select\nField <code>TXADDRESS</code> writer - Transmit address select\nRegister <code>TXADDRESS</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Transmit address select\nBits 0:2 - Transmit address select\n244: -12 dBm\n240: -16 dBm\n236: -20 dBm\n255: Deprecated enumerator - -40 dBm\n216: -40 dBm\n252: -4 dBm\n248: -8 dBm\n2: +2 dBm\n3: +3 dBm\n4: +4 dBm\n5: +5 dBm\n6: +6 dBm\n7: +7 dBm\n8: +8 dBm\nRegister <code>TXPOWER</code> reader\nRADIO output power\nField <code>TXPOWER</code> reader - RADIO output power\nOutput power\nField <code>TXPOWER</code> writer - RADIO output power\nRegister <code>TXPOWER</code> writer\n0: 0 dBm\n0 dBm\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>_0D_BM</code>\nChecks if the value of the field is <code>NEG12D_BM</code>\nChecks if the value of the field is <code>NEG16D_BM</code>\nChecks if the value of the field is <code>NEG20D_BM</code>\nChecks if the value of the field is <code>NEG30D_BM</code>\nChecks if the value of the field is <code>NEG40D_BM</code>\nChecks if the value of the field is <code>NEG4D_BM</code>\nChecks if the value of the field is <code>NEG8D_BM</code>\nChecks if the value of the field is <code>POS2D_BM</code>\nChecks if the value of the field is <code>POS3D_BM</code>\nChecks if the value of the field is <code>POS4D_BM</code>\nChecks if the value of the field is <code>POS5D_BM</code>\nChecks if the value of the field is <code>POS6D_BM</code>\nChecks if the value of the field is <code>POS7D_BM</code>\nChecks if the value of the field is <code>POS8D_BM</code>\n-12 dBm\n-16 dBm\n-20 dBm\nDeprecated enumerator - -40 dBm\n-40 dBm\n-4 dBm\n-8 dBm\n+2 dBm\n+3 dBm\n+4 dBm\n+5 dBm\n+6 dBm\n+7 dBm\n+8 dBm\nBits 0:7 - RADIO output power\nBits 0:7 - RADIO output power\nGet enumerated values variant\nCONFIG (rw) register accessor: an alias for …\nEVENTS_VALRDY (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nRegister block\nSHORTS (rw) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nVALUE (r) register accessor: an alias for <code>Reg&lt;VALUE_SPEC&gt;</code>\nConfiguration register\n0x504 - Configuration register\nEvent being generated for every new random number written …\n0x100 - Event being generated for every new random number …\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\nShortcut register\n0x200 - Shortcut register\nTask starting the random number generator\n0x00 - Task starting the random number generator\nTask stopping the random number generator\n0x04 - Task stopping the random number generator\nOutput random number\n0x508 - Output random number\nConfiguration register\nBias correction\nField <code>DERCEN</code> reader - Bias correction\nField <code>DERCEN</code> writer - Bias correction\n0: Disabled\n1: Enabled\nRegister <code>CONFIG</code> reader\nRegister <code>CONFIG</code> writer\nWrites raw bits to the register.\nBit 0 - Bias correction\nBit 0 - Bias correction\nDisabled\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nGet enumerated values variant\nField <code>EVENTS_VALRDY</code> reader -\nEvent being generated for every new random number written …\nField <code>EVENTS_VALRDY</code> writer -\nRegister <code>EVENTS_VALRDY</code> reader\nRegister <code>EVENTS_VALRDY</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1: Disable\n0: Read: Disabled\n1: Read: Enabled\nDisable interrupt\nRegister <code>INTENCLR</code> reader\nWrite ‘1’ to disable interrupt for VALRDY event\nWrite ‘1’ to disable interrupt for VALRDY event\nField <code>VALRDY</code> reader - Write ‘1’ to disable interrupt …\nField <code>VALRDY</code> writer - Write ‘1’ to disable interrupt …\nRegister <code>INTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Write ‘1’ to disable interrupt for VALRDY event\nBit 0 - Write ‘1’ to disable interrupt for VALRDY event\nGet enumerated values variant\n0: Read: Disabled\n1: Read: Enabled\nEnable interrupt\nRegister <code>INTENSET</code> reader\n1: Enable\nWrite ‘1’ to enable interrupt for VALRDY event\nWrite ‘1’ to enable interrupt for VALRDY event\nField <code>VALRDY</code> reader - Write ‘1’ to enable interrupt …\nField <code>VALRDY</code> writer - Write ‘1’ to enable interrupt …\nRegister <code>INTENSET</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nEnable\nBit 0 - Write ‘1’ to enable interrupt for VALRDY event\nBit 0 - Write ‘1’ to enable interrupt for VALRDY event\nGet enumerated values variant\n0: Disable shortcut\n1: Enable shortcut\nRegister <code>SHORTS</code> reader\nShortcut register\nShortcut between VALRDY event and STOP task\nField <code>VALRDY_STOP</code> reader - Shortcut between VALRDY event …\nField <code>VALRDY_STOP</code> writer - Shortcut between VALRDY event …\nRegister <code>SHORTS</code> writer\nWrites raw bits to the register.\nDisable shortcut\nEnable shortcut\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 0 - Shortcut between VALRDY event and STOP task\nBit 0 - Shortcut between VALRDY event and STOP task\nGet enumerated values variant\nTask starting the random number generator\nField <code>TASKS_START</code> writer -\nRegister <code>TASKS_START</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nTask stopping the random number generator\nField <code>TASKS_STOP</code> writer -\nRegister <code>TASKS_STOP</code> writer\nWrites raw bits to the register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 0\nRegister <code>VALUE</code> reader\nField <code>VALUE</code> reader - Generated random number\nOutput random number\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Generated random number\nCC (rw) register accessor: an alias for <code>Reg&lt;CC_SPEC&gt;</code>\nCOUNTER (r) register accessor: an alias for …\nEVENTS_COMPARE (rw) register accessor: an alias for …\nEVENTS_OVRFLW (rw) register accessor: an alias for …\nEVENTS_TICK (rw) register accessor: an alias for …\nEVTEN (rw) register accessor: an alias for <code>Reg&lt;EVTEN_SPEC&gt;</code>\nEVTENCLR (rw) register accessor: an alias for …\nEVTENSET (rw) register accessor: an alias for …\nINTENCLR (rw) register accessor: an alias for …\nINTENSET (rw) register accessor: an alias for …\nPRESCALER (rw) register accessor: an alias for …\nRegister block\nTASKS_CLEAR (w) register accessor: an alias for …\nTASKS_START (w) register accessor: an alias for …\nTASKS_STOP (w) register accessor: an alias for …\nTASKS_TRIGOVRFLW (w) register accessor: an alias for …\nDescription collection[n]: Compare register n\n0x540..0x550 - Description collection[n]: Compare register …\nCurrent COUNTER value\n0x504 - Current COUNTER value\nDescription collection[n]: Compare event on CC[n] match\n0x140..0x150 - Description collection[n]: Compare event on …\nEvent on COUNTER overflow\n0x104 - Event on COUNTER overflow\nEvent on COUNTER increment\n0x100 - Event on COUNTER increment\nEnable or disable event routing\n0x340 - Enable or disable event routing\nDisable event routing\n0x348 - Disable event routing\nEnable event routing\n0x344 - Enable event routing\nReturns the argument unchanged.\nDisable interrupt\n0x308 - Disable interrupt\nEnable interrupt\n0x304 - Enable interrupt\nCalls <code>U::from(self)</code>.\n12 bit prescaler for COUNTER frequency …\n0x508 - 12 bit prescaler for COUNTER frequency …\nClear RTC COUNTER\n0x08 - Clear RTC COUNTER\nStart RTC COUNTER\n0x00 - Start RTC COUNTER\nStop RTC COUNTER\n0x04 - Stop RTC COUNTER\nSet COUNTER to 0xFFFFF0\n0x0c - Set COUNTER to 0xFFFFF0\nDescription collection[n]: Compare register n\nField <code>COMPARE</code> reader - Compare value\nField <code>COMPARE</code> writer - Compare value\nRegister <code>CC[%s]</code> reader\nRegister <code>CC[%s]</code> writer\nWrites raw bits to the register.\nBits 0:23 - Compare value\nBits 0:23 - Compare value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>COUNTER</code> reader - Counter value\nCurrent COUNTER value\nRegister <code>COUNTER</code> reader\nBits 0:23 - Counter value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_COMPARE</code> reader -\nDescription collection[n]: Compare event on CC[n] match\nField <code>EVENTS_COMPARE</code> writer -\nRegister <code>EVENTS_COMPARE[%s]</code> reader\nRegister <code>EVENTS_COMPARE[%s]</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_OVRFLW</code> reader -\nEvent on COUNTER overflow\nField <code>EVENTS_OVRFLW</code> writer -\nRegister <code>EVENTS_OVRFLW</code> reader\nRegister <code>EVENTS_OVRFLW</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nField <code>EVENTS_TICK</code> reader -\nEvent on COUNTER increment\nField <code>EVENTS_TICK</code> writer -\nRegister <code>EVENTS_TICK</code> reader\nRegister <code>EVENTS_TICK</code> writer\nWrites raw bits to the register.\nBit 0\nBit 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnable or disable event routing for COMPARE[0] event\nField <code>COMPARE0</code> reader - Enable or disable event routing …\nField <code>COMPARE0</code> writer - Enable or disable event routing …\nEnable or disable event routing for COMPARE[1] event\nField <code>COMPARE1</code> reader - Enable or disable event routing …\nField <code>COMPARE1</code> writer - Enable or disable event routing …\nEnable or disable event routing for COMPARE[2] event\nField <code>COMPARE2</code> reader - Enable or disable event routing …\nField <code>COMPARE2</code> writer - Enable or disable event routing …\nEnable or disable event routing for COMPARE[3] event\nField <code>COMPARE3</code> reader - Enable or disable event routing …\nField <code>COMPARE3</code> writer - Enable or disable event routing …\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n0: Disable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nEnable or disable event routing\nEnable or disable event routing for OVRFLW event\nField <code>OVRFLW</code> reader - Enable or disable event routing for …\nField <code>OVRFLW</code> writer - Enable or disable event routing for …\nRegister <code>EVTEN</code> reader\nEnable or disable event routing for TICK event\nField <code>TICK</code> reader - Enable or disable event routing for …\nField <code>TICK</code> writer - Enable or disable event routing for …\nRegister <code>EVTEN</code> writer\nWrites raw bits to the register.\nBit 16 - Enable or disable event routing for COMPARE[0] …\nBit 16 - Enable or disable event routing for COMPARE[0] …\nBit 17 - Enable or disable event routing for COMPARE[1] …\nBit 17 - Enable or disable event routing for COMPARE[1] …\nBit 18 - Enable or disable event routing for COMPARE[2] …\nBit 18 - Enable or disable event routing for COMPARE[2] …\nBit 19 - Enable or disable event routing for COMPARE[3] …\nBit 19 - Enable or disable event routing for COMPARE[3] …\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nEnable\nEnable\nEnable\nEnable\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Enable or disable event routing for OVRFLW event\nBit 1 - Enable or disable event routing for OVRFLW event\nBit 0 - Enable or disable event routing for TICK event\nBit 0 - Enable or disable event routing for TICK event\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\n1: Disable\nWrite ‘1’ to disable event routing for COMPARE[0] event\nWrite ‘1’ to disable event routing for COMPARE[0] event\nField <code>COMPARE0</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE0</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for COMPARE[1] event\nWrite ‘1’ to disable event routing for COMPARE[1] event\nField <code>COMPARE1</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE1</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for COMPARE[2] event\nWrite ‘1’ to disable event routing for COMPARE[2] event\nField <code>COMPARE2</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE2</code> writer - Write ‘1’ to disable event …\nWrite ‘1’ to disable event routing for COMPARE[3] event\nWrite ‘1’ to disable event routing for COMPARE[3] event\nField <code>COMPARE3</code> reader - Write ‘1’ to disable event …\nField <code>COMPARE3</code> writer - Write ‘1’ to disable event …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nDisable event routing\nWrite ‘1’ to disable event routing for OVRFLW event\nWrite ‘1’ to disable event routing for OVRFLW event\nField <code>OVRFLW</code> reader - Write ‘1’ to disable event …\nField <code>OVRFLW</code> writer - Write ‘1’ to disable event …\nRegister <code>EVTENCLR</code> reader\nWrite ‘1’ to disable event routing for TICK event\nWrite ‘1’ to disable event routing for TICK event\nField <code>TICK</code> reader - Write ‘1’ to disable event routing …\nField <code>TICK</code> writer - Write ‘1’ to disable event routing …\nRegister <code>EVTENCLR</code> writer\nWrites raw bits to the register.\nDisable\nDisable\nDisable\nDisable\nDisable\nDisable\nBit 16 - Write ‘1’ to disable event routing for COMPARE…\nBit 16 - Write ‘1’ to disable event routing for COMPARE…\nBit 17 - Write ‘1’ to disable event routing for COMPARE…\nBit 17 - Write ‘1’ to disable event routing for COMPARE…\nBit 18 - Write ‘1’ to disable event routing for COMPARE…\nBit 18 - Write ‘1’ to disable event routing for COMPARE…\nBit 19 - Write ‘1’ to disable event routing for COMPARE…\nBit 19 - Write ‘1’ to disable event routing for COMPARE…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nBit 1 - Write ‘1’ to disable event routing for OVRFLW …\nBit 1 - Write ‘1’ to disable event routing for OVRFLW …\nBit 0 - Write ‘1’ to disable event routing for TICK …\nBit 0 - Write ‘1’ to disable event routing for TICK …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWrite ‘1’ to enable event routing for COMPARE[0] event\nWrite ‘1’ to enable event routing for COMPARE[0] event\nField <code>COMPARE0</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE0</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for COMPARE[1] event\nWrite ‘1’ to enable event routing for COMPARE[1] event\nField <code>COMPARE1</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE1</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for COMPARE[2] event\nWrite ‘1’ to enable event routing for COMPARE[2] event\nField <code>COMPARE2</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE2</code> writer - Write ‘1’ to enable event …\nWrite ‘1’ to enable event routing for COMPARE[3] event\nWrite ‘1’ to enable event routing for COMPARE[3] event\nField <code>COMPARE3</code> reader - Write ‘1’ to enable event …\nField <code>COMPARE3</code> writer - Write ‘1’ to enable event …\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n0: Read: Disabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\n1: Read: Enabled\nEnable event routing\nWrite ‘1’ to enable event routing for OVRFLW event\nWrite ‘1’ to enable event routing for OVRFLW event\nField <code>OVRFLW</code> reader - Write ‘1’ to enable event …\nField <code>OVRFLW</code> writer - Write ‘1’ to enable event …\nRegister <code>EVTENSET</code> reader\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\n1: Enable\nWrite ‘1’ to enable event routing for TICK event\nWrite ‘1’ to enable event routing for TICK event\nField <code>TICK</code> reader - Write ‘1’ to enable event routing …")