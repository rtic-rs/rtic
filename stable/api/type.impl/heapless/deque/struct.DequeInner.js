(function() {
    var type_impls = Object.fromEntries([["heapless",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DequeInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#883-887\">Source</a><a href=\"#impl-Debug-for-DequeInner%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, S: <a class=\"trait\" href=\"heapless/vec/trait.VecStorage.html\" title=\"trait heapless::vec::VecStorage\">VecStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"heapless/deque/struct.DequeInner.html\" title=\"struct heapless::deque::DequeInner\">DequeInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#884-886\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","heapless::deque::Deque","heapless::deque::DequeView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DequeInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#191-810\">Source</a><a href=\"#impl-DequeInner%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/vec/trait.VecStorage.html\" title=\"trait heapless::vec::VecStorage\">VecStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"heapless/deque/struct.DequeInner.html\" title=\"struct heapless::deque::DequeInner\">DequeInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_view\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#193-195\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.as_view\" class=\"fn\">as_view</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"heapless/deque/type.DequeView.html\" title=\"type heapless::deque::DequeView\">DequeView</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the <code>Deque</code>, erasing the <code>N</code> const-generic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_view\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#198-200\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.as_mut_view\" class=\"fn\">as_mut_view</a>(&amp;mut self) -&gt; &amp;mut <a class=\"type\" href=\"heapless/deque/type.DequeView.html\" title=\"type heapless::deque::DequeView\">DequeView</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the <code>Deque</code>, erasing the <code>N</code> const-generic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#203-205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.storage_capacity\" class=\"fn\">storage_capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the maximum number of elements the deque can hold.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_len\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#224-232\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.storage_len\" class=\"fn\">storage_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements currently in the deque.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#235-241\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the deque, removing all values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#254-256\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the deque is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_full\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#259-261\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.is_full\" class=\"fn\">is_full</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the deque is full (i.e. if <code>len() == capacity()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slices\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#264-287\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.as_slices\" class=\"fn\">as_slices</a>(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Returns a pair of slices which contain, in order, the contents of the <code>Deque</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slices\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#290-315\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.as_mut_slices\" class=\"fn\">as_mut_slices</a>(&amp;mut self) -&gt; (&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>, &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Returns a pair of mutable slices which contain, in order, the contents of the <code>Deque</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_contiguous\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#352-495\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.make_contiguous\" class=\"fn\">make_contiguous</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Rearranges the internal storage of the <a href=\"heapless/deque/type.Deque.html\" title=\"type heapless::deque::Deque\"><code>Deque</code></a> to make it into a contiguous slice,\nwhich is returned.</p>\n<p>This does <strong>not</strong> change the order of the elements in the deque.\nThe returned slice can then be used to perform contiguous slice operations on the deque.</p>\n<p>After calling this method, subsequent <a href=\"heapless/deque/struct.DequeInner.html#method.as_slices\" title=\"method heapless::deque::DequeInner::as_slices\"><code>as_slices</code></a> and <a href=\"heapless/deque/struct.DequeInner.html#method.as_mut_slices\" title=\"method heapless::deque::DequeInner::as_mut_slices\"><code>as_mut_slices</code></a> calls will return\na single contiguous slice.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<p>Sorting a deque:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>heapless::Deque;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = Deque::&lt;<span class=\"kw\">_</span>, <span class=\"number\">4</span>&gt;::new();\nbuf.push_back(<span class=\"number\">2</span>).unwrap();\nbuf.push_back(<span class=\"number\">1</span>).unwrap();\nbuf.push_back(<span class=\"number\">3</span>).unwrap();\n\n<span class=\"comment\">// Sort the deque\n</span>buf.make_contiguous().sort();\n<span class=\"macro\">assert_eq!</span>(buf.as_slices(), (<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>][..], <span class=\"kw-2\">&amp;</span>[][..]));\n\n<span class=\"comment\">// Sort the deque in reverse\n</span>buf.make_contiguous().sort_by(|a, b| b.cmp(a));\n<span class=\"macro\">assert_eq!</span>(buf.as_slices(), (<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>][..], <span class=\"kw-2\">&amp;</span>[][..]));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.front\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#498-504\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.front\" class=\"fn\">front</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Provides a reference to the front element, or None if the <code>Deque</code> is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.front_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#507-519\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.front_mut\" class=\"fn\">front_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Provides a mutable reference to the front element, or None if the <code>Deque</code> is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.back\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#522-529\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.back\" class=\"fn\">back</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Provides a reference to the back element, or None if the <code>Deque</code> is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.back_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#532-545\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.back_mut\" class=\"fn\">back_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Provides a mutable reference to the back element, or None if the <code>Deque</code> is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_front\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#548-554\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.pop_front\" class=\"fn\">pop_front</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the item from the front of the deque and returns it, or <code>None</code> if itโs empty</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_back\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#557-563\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.pop_back\" class=\"fn\">pop_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the item from the back of the deque and returns it, or <code>None</code> if itโs empty</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_front\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#568-575\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.push_front\" class=\"fn\">push_front</a>(&amp;mut self, item: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.unit.html\">()</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Appends an <code>item</code> to the front of the deque</p>\n<p>Returns back the <code>item</code> if the deque is full</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_back\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#580-587\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.push_back\" class=\"fn\">push_back</a>(&amp;mut self, item: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.unit.html\">()</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Appends an <code>item</code> to the back of the deque</p>\n<p>Returns back the <code>item</code> if the deque is full</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_front_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#595-606\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.pop_front_unchecked\" class=\"fn\">pop_front_unchecked</a>(&amp;mut self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Removes an item from the front of the deque and returns it, without checking that the deque\nis not empty</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">ยง</a>Safety</h5>\n<p>Itโs undefined behavior to call this on an empty deque</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_back_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#614-624\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.pop_back_unchecked\" class=\"fn\">pop_back_unchecked</a>(&amp;mut self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Removes an item from the back of the deque and returns it, without checking that the deque\nis not empty</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">ยง</a>Safety</h5>\n<p>Itโs undefined behavior to call this on an empty deque</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_front_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#631-642\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.push_front_unchecked\" class=\"fn\">push_front_unchecked</a>(&amp;mut self, item: T)</h4></section></summary><div class=\"docblock\"><p>Appends an <code>item</code> to the front of the deque</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">ยง</a>Safety</h5>\n<p>This assumes the deque is not full.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_back_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#649-659\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.push_back_unchecked\" class=\"fn\">push_back_unchecked</a>(&amp;mut self, item: T)</h4></section></summary><div class=\"docblock\"><p>Appends an <code>item</code> to the back of the deque</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">ยง</a>Safety</h5>\n<p>This assumes the deque is not full.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#664-671\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the element at the given index.</p>\n<p>Index 0 is the front of the <code>Deque</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#676-688\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the element at the given index.</p>\n<p>Index 0 is the front of the <code>Deque</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#695-700\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.get_unchecked\" class=\"fn\">get_unchecked</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the element at the given index without checking if it exists.</p>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">ยง</a>Safety</h5>\n<p>The element at the given <code>index</code> must exist (i.e. <code>index &lt; self.len()</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#707-715\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the element at the given index without checking if it exists.</p>\n<h5 id=\"safety-5\"><a class=\"doc-anchor\" href=\"#safety-5\">ยง</a>Safety</h5>\n<p>The element at the given <code>index</code> must exist (i.e. <code>index &lt; self.len()</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#722-727\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.swap\" class=\"fn\">swap</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps elements at indices <code>i</code> and <code>j</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>Panics if either <code>i</code> or <code>j</code> are out of bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#734-745\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.swap_unchecked\" class=\"fn\">swap_unchecked</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps elements at indices <code>i</code> and <code>j</code> without checking that they exist.</p>\n<h5 id=\"safety-6\"><a class=\"doc-anchor\" href=\"#safety-6\">ยง</a>Safety</h5>\n<p>Elements at indexes <code>i</code> and <code>j</code> must exist (i.e. <code>i &lt; self.len()</code> and <code>j &lt; self.len()</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_front\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#755-765\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.swap_remove_front\" class=\"fn\">swap_remove_front</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Removes an element from anywhere in the deque and returns it, replacing it with the first\nelement.</p>\n<p>This does not preserve ordering, but is <em>O</em>(1).</p>\n<p>Returns <code>None</code> if <code>index</code> is out of bounds.</p>\n<p>Element at index 0 is the front of the queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_back\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#775-785\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.swap_remove_back\" class=\"fn\">swap_remove_back</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Removes an element from anywhere in the deque and returns it, replacing it with the last\nelement.</p>\n<p>This does not preserve ordering, but is <em>O</em>(1).</p>\n<p>Returns <code>None</code> if <code>index</code> is out of bounds.</p>\n<p>Element at index 0 is the front of the queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#796-801\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"heapless/deque/struct.Iter.html\" title=\"struct heapless::deque::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the deque.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#804-809\">Source</a><h4 class=\"code-header\">pub fn <a href=\"heapless/deque/struct.DequeInner.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"heapless/deque/struct.IterMut.html\" title=\"struct heapless::deque::IterMut\">IterMut</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IterMut&lt;&#39;_, T&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator that allows modifying each value.</p>\n</div></details></div></details>",0,"heapless::deque::Deque","heapless::deque::DequeView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-DequeInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#875-881\">Source</a><a href=\"#impl-Drop-for-DequeInner%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/vec/trait.VecStorage.html\" title=\"trait heapless::vec::VecStorage\">VecStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"heapless/deque/struct.DequeInner.html\" title=\"struct heapless::deque::DequeInner\">DequeInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#876-880\">Source</a><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","heapless::deque::Deque","heapless::deque::DequeView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-DequeInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#897-901\">Source</a><a href=\"#impl-Extend%3C%26T%3E-for-DequeInner%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, S: <a class=\"trait\" href=\"heapless/vec/trait.VecStorage.html\" title=\"trait heapless::vec::VecStorage\">VecStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"heapless/deque/struct.DequeInner.html\" title=\"struct heapless::deque::DequeInner\">DequeInner</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#898-900\">Source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.reference.html\">&amp;'a T</a>&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","heapless::deque::Deque","heapless::deque::DequeView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-DequeInner%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#890-896\">Source</a><a href=\"#impl-Extend%3CT%3E-for-DequeInner%3CT,+S%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"heapless/vec/trait.VecStorage.html\" title=\"trait heapless::vec::VecStorage\">VecStorage</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"heapless/deque/struct.DequeInner.html\" title=\"struct heapless::deque::DequeInner\">DequeInner</a>&lt;T, S&gt;</h3><div class=\"docblock\"><p>As with the standard libraryโs <code>VecDeque</code>, items are added via <code>push_back</code>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/heapless/deque.rs.html#891-895\">Source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","heapless::deque::Deque","heapless::deque::DequeView"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[37471]}